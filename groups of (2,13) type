ANSWERS:={};

/* level 16 * 13 */

G2:=GL(2,Integers(2));
G4:=GL(2,Integers(4));
G8:=GL(2,Integers(8));
G16:=GL(2,Integers(16));
G32:=GL(2,Integers(32));


Left:=16;
Right:=13;

GLeftRight:=GL(2,Integers(Left*Right));


KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

H161:=sub<G16|[1,4,0,1],[7,0,0,7],[3,0,0,11],[1,0,4,1],[1,1,0,5],[1,5,2,5]>; /* 16.24.0.28, 16.24.0.c.1 */
H162:=sub<G16|[3,4,0,11],[2,3,3,5],[3,3,0,5],[0,1,3,0]>; /* 16.16.0.2, 16.16.0.b.1 */
H163:=sub<G16|[3,4,0,11],[2,3,3,5],[3,3,0,5],[0,3,1,0]>; /* 16.16.0.1, 16.16.0.a.1 */
H164:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,0,11],[1,0,8,1],[3,1,0,5],[1,2,2,1]>; /* 16.24.0.41, 16.24.0.a.1 */
H165:=sub<G16|[1,4,0,1],[7,0,0,7],[0,3,5,0],[3,0,0,5],[1,2,2,1]>; /* 16.24.0.31, 16.24.0.l.2 */
H166:=sub<G16|[1,4,0,1],[7,0,0,7],[0,3,5,0],[7,0,0,9],[1,2,2,1]>; /* 16.24.0.33, 16.24.0.k.1 */
H167:=sub<G16|[1,4,0,1],[7,0,0,7],[2,3,1,2],[3,0,0,5],[1,2,2,1]>; /* 16.24.0.32, 16.24.0.l.1 */
H168:=sub<G16|[1,4,0,1],[7,0,0,7],[2,3,1,2],[7,0,0,9],[1,2,2,1]>; /* 16.24.0.34, 16.24.0.k.2 */
H169:=sub<G16|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[0,1,1,0],[2,3,5,6]>; /* 16.48.0.21, 16.48.0.h.2 */
H1610:=sub<G16|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[0,1,5,0],[2,5,1,2]>; /* 16.48.0.76, 16.48.0.m.2 */

H1611:=sub<G16|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[1,2,2,1],[0,5,1,0]>; /* 16.48.0.77, 16.48.0.m.1 */
H1612:=sub<G16|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[3,2,2,5],[2,3,5,6]>; /* 16.48.0.22, 16.48.0.h.1 */
H1613:=sub<G16|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[7,0,0,9],[1,2,2,1]>; /* 16.48.0.14, 16.48.0.a.1 */
H1614:=sub<G16|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[7,0,0,9],[2,1,1,6]>; /* 16.48.0.79, 16.48.0.n.1 */
H1615:=sub<G16|[1,4,0,1],[7,0,0,7],[3,2,0,11],[1,0,8,1],[1,3,0,5],[5,1,4,3]>; /* 16.48.0.225, 16.48.0.r.1, */
H1616:=sub<G16|[3,0,0,11],[0,3,5,0],[1,2,2,5],[1,0,0,5],[1,8,0,3]>; /* 16.24.0.39, 16.24.0.p.1 */
H1617:=sub<G16|[3,0,0,11],[0,3,5,0],[1,2,2,5],[1,4,0,5],[5,2,0,3]>; /* 16.24.0.21, 16.24.0.o.2 */
H1618:=sub<G16|[3,0,0,11],[0,3,5,0],[1,2,2,5],[3,0,0,5],[1,8,0,3]>; /* 16.24.0.40, 16.24.0.p.2 */
H1619:=sub<G16|[3,0,0,11],[0,3,5,0],[1,2,2,5],[3,6,0,5],[3,4,0,7]>; /* 16.24.0.22, 16.24.0.o.1 */
H1620:=sub<G16|[7,0,0,7],[3,8,0,11],[0,3,5,2],[1,2,0,3],[1,4,0,5]>; /* 16.24.0.17, 16.24.0.j.1 */

H1621:=sub<G16|[7,0,0,7],[3,8,0,11],[0,3,5,2],[1,2,0,3],[5,4,0,1]>; /* 16.24.0.15, 16.24.0.i.1 */ 
H1622:=sub<G16|[7,0,0,7],[3,8,0,11],[0,3,5,2],[1,4,0,5],[5,2,0,3]>; /* 16.24.0.5, 16.24.0.h.1 */
H1623:=sub<G16|[7,0,0,7],[3,8,0,11],[0,3,5,2],[5,4,0,1],[1,6,0,3]>; /* 16.24.0.2, 16.24.0.g.1 */
H1624:=sub<G16|[7,0,0,7],[3,0,0,11],[0,3,5,2],[1,4,0,5],[5,2,0,3]>; /* 16.24.0.1, 16.24.0.e.1 */
H1625:=sub<G16|[7,0,0,7],[3,0,0,11],[0,3,5,2],[3,2,0,1],[1,4,0,5]>; /* 16.24.0.7, 16.24.0.f.1 */
H1626:=sub<G16|[7,0,0,7],[3,0,0,11],[0,3,5,2],[3,2,0,1],[5,2,0,3]>; /* 16.24.0.13, 16.24.0.e.2 */
H1627:=sub<G16|[7,0,0,7],[3,0,0,11],[0,3,5,2],[3,6,0,5],[3,4,0,7]>; /* 16.24.0.6, 16.24.0.f.2 */
H1628:=sub<G16|[0,3,5,8],[2,1,3,10],[1,0,0,3],[1,0,0,5]>; /* 16.24.0.38, 16.24.0.m.1 */ 
H1629:=sub<G16|[0,3,5,8],[2,1,3,10],[1,0,0,3],[1,8,0,5]>; /* 16.24.0.35, 16.24.0.n.1 */
H1630:=sub<G16|[0,3,5,8],[2,1,3,10],[1,0,0,5],[1,8,0,3]>; /* 16.24.0.36, 16.24.0.n.2 */

H1631:=sub<G16|[0,3,5,8],[2,1,3,10],[3,0,0,5],[1,8,0,3]>; /* 16.24.0.37, 16.24.0.m.2 */
H1632:=sub<G16|[3,4,0,11],[6,3,7,9],[3,3,0,5],[0,3,1,0]>; /* 16.16.0.1, 16.16.0.a.1 */
H1633:=sub<G16|[3,4,0,11],[6,3,7,9],[5,5,0,3],[0,3,1,0]>; /* 16.16.0.2, 16.16.0.b.1 */
H1634:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[1,3,2,3],[3,2,2,1]>; /* 16.48.0.249, 16.48.0.t.2*/
H1635:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,0,0,1],[1,0,0,5]>; /* 16.48.0.3, 16.48.0.d.2 */
H1636:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,0,0,1],[5,0,0,1]>; /* 16.48.0.6, 16.48.0.d.1 */
H1637:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,0,0,1],[5,1,0,1]>; /* 16.48.0.204, 16.48.e.1 */
H1638:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,1,0,1],[1,1,0,5]>; /* 16.48.0.213, 16.48.0.l.2 */
H1639:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,1,0,1],[1,1,4,1]>; /* 16.48.0.210, 16.48.0.l.1 */ 
H1640:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,1,0,1],[5,0,0,1]>; /* 16.48.0.60, 16.48.0.j.1 */

H1641:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,2,2,1],[1,4,2,3]>; /* 16.48.0.19, 16.48.0.c.1 */
H1642:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,2,2,1],[3,3,4,5]>; /* 16.48.0.248, 16.48.0.t.1 */
H1643:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,4,2,1],[1,2,4,5]>; /* 16.48.0.20, 16.48.0.c.2 */
H1644:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[7,1,0,9],[1,2,4,5]>; /* 16.48.0.68, 16.48.0.q.1 */
H1645:=sub<G16|[1,2,0,1],[7,0,0,7],[3,0,8,11],[7,1,0,9],[3,0,2,1]>; /* 16.48.0.242, 16.48.0.i.1 */
H1646:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[1,4,0,5],[1,2,0,7]>; /* 16.48.0.120, 16.48.0.z.2 */
H1647:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[1,4,0,5],[1,6,0,3]>; /* 16.48.0.127, 16.48.0.bb.2 */
H1648:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[1,4,0,5],[5,2,0,3]>; /* 16.48.0.132, 16.48.0.y.2 */
H1649:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[1,6,0,3],[1,2,0,7]>; /* 16.48.0.122, 16.48.0.v.2 */
H1650:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[3,2,0,1],[1,2,0,7]>; /* 16.48.0.102, 16.48.0.z.1 */

H1651:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[3,2,0,1],[5,2,0,3]>; /* 16.48.0.134, 16.48.0.u.2 */
H1652:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[3,2,0,1],[5,4,0,1]>; /* 16.48.0.97, 16.48.0.x.1 */
H1653:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[3,4,0,7],[5,6,0,7]>; /* 16.48.0.101, 16.48.0.bb.1 */
H1654:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[5,2,0,3],[1,6,0,3]>; /* 16.48.0.150, 16.48.0.y.1 */
H1655:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[5,2,0,3],[5,4,0,1]>; /* 16.48.0.144, 16.48.0.u.1 */
H1656:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[5,4,0,1],[1,2,0,7]>; /* 16.48.0.96, 16.48.0.v.1 */
H1657:=sub<G16|[7,0,0,7],[9,0,0,9],[0,3,5,2],[7,2,0,5],[7,4,0,3]>; /* 16.48.0.121, 16.48.0.x.2 */
H1658:=sub<G16|[2,1,3,2],[0,3,5,8],[1,0,0,5],[1,8,0,3]>; /* 16.24.1.13, 16.24.1.h.2 */
H1659:=sub<G16|[2,1,3,2],[0,3,5,8],[3,0,0,5],[1,8,0,3]>; /* 16.24.1.15, 16.24.1.h.1 */
H1660:=sub<G16|[3,0,0,11],[0,3,5,0],[2,3,9,6],[1,0,0,3],[1,0,0,5]>; /* 16.24.1.19, 16.24.1.n.1 */

H1661:=sub<G16|[3,0,0,11],[0,3,5,0],[2,3,9,6],[1,4,0,3],[1,0,0,5]>; /* 16.24.1.17, 16.24.1.n.2 */
H1662:=sub<G16|[3,0,0,11],[0,3,5,8],[1,4,12,1],[1,0,0,5],[1,8,0,3]>; /* 16.48.1.34, 16.48.1.ch.1 */
H1663:=sub<G16|[3,0,0,11],[0,3,5,8],[1,4,12,1],[1,8,0,3],[2,3,5,2]>; /* 16.48.1.124, 16.48.1.cd.1 */
H1664:=sub<G16|[3,0,0,11],[0,3,5,8],[1,4,12,1],[1,8,0,5],[1,2,10,3]>; /* 16.48.1.5, 16.48.1.cg.1 */
H1665:=sub<G16|[3,0,0,11],[0,3,5,8],[1,4,12,1],[1,8,0,7],[1,2,10,7]>; /* 16.48.1.133, 16.48.1.cc.1 */
H1666:=sub<G16|[3,0,0,11],[0,3,5,8],[1,4,12,1],[3,0,0,5],[1,8,0,3]>; /* 16.48.1.35, 16.48.1.cf.1 */
H1667:=sub<G16|[3,0,0,11],[0,3,5,8],[1,4,12,1],[3,0,0,5],[2,3,5,2]>; /* 16.48.1.136, 16.48.1.ca.1 */
H1668:=sub<G16|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[3,0,0,5],[1,2,2,9]>; /* 16.48.1.118, 16.48.1.bn.1 */
H1669:=sub<G16|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[3,0,0,5],[1,2,6,9]>; /* 16.48.1.129, 16.48.1.bs.1 */
H1670:=sub<G16|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[7,0,0,9],[1,2,2,1]>; /* 16.48.1.119, 16.48.1.bl.1 */

H1671:=sub<G16|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[7,0,0,9],[2,3,5,2]>; /* 16.48.1.132, 16.48.1.bq.1 */
H1672:=sub<G16|[3,8,0,11],[0,3,5,0],[5,2,2,1],[3,2,0,5],[5,4,0,1]>; /* 16.24.1.5, 16.24.1.l.1 */
H1673:=sub<G16|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[7,4,0,9],[1,2,2,9]>; /* 16.48.1.146, 16.48.1.bv.1 */
H1674:=sub<G16|[7,0,0,7],[3,4,0,11],[0,3,5,0],[3,0,0,5],[1,2,2,9]>; /* 16.24.1.11, 16.24.1.f.1 */
H1675:=sub<G16|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[7,4,0,9],[1,2,6,9]>; /* 16.48.1.139, 16.48.1.bg.1 */
H1676:=sub<G16|[7,0,0,7],[3,4,0,11],[0,3,5,0],[3,4,0,5],[1,2,2,1]>; /* 16.24.1.10, 16.24.1.f.2 */
H1677:=sub<G16|[7,0,0,7],[0,3,5,0],[5,2,2,1],[1,6,0,7],[7,4,0,3]>; /* 16.48.1.109, 16.48.1.cx.2 */
H1678:=sub<G16|[7,0,0,7],[0,3,5,0],[5,2,2,1],[5,4,0,1],[3,6,0,1]>; /* 16.48.1.99, 16.48.1.cx.1 */
H1679:=sub<G16|[3,0,0,11],[1,4,4,1],[0,3,5,0],[1,0,0,3],[1,0,0,5]>; /* 16.48.1.37, 16.48.1.df.1 */
H1680:=sub<G16|[3,0,0,11],[1,4,4,1],[0,3,5,0],[1,0,0,5],[1,2,2,3]>; /* 16.48.1.10, 16.48.1.de.1 */

H1681:=sub<G16|[3,0,0,11],[1,4,4,1],[0,3,5,0],[1,4,0,3],[1,0,0,5]>; /* 16.48.1.40, 16.48.1.cr.1 */
H1682:=sub<G16|[3,0,0,11],[1,4,4,1],[0,3,5,0],[3,0,0,5],[1,2,2,1]>; /* 16.48.1.122, 16.48.1.cs.1 */
H1683:=sub<G16|[3,0,0,11],[1,4,4,1],[0,3,5,0],[3,4,0,1],[1,2,2,1]>; /* 16.48.1.113, 16.48.1.ct.1 */
H1684:=sub<G16|[3,0,0,11],[1,4,4,1],[0,3,5,0],[3,4,0,5],[1,2,2,1]>; /* 16.48.1.147, 16.48.1.dc.1 */

X161:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[3,0,0,11],[1,0,4,1],[1,1,0,5],[1,5,2,5]>; /* 16.24.0.28, 16.24.0.c.1, with Chinese Remainder Theorem */
X162:=sub<GLeftRight|[3,4,0,11],[2,3,3,5],[3,3,0,5],[0,1,3,0]>; /* 16.16.0.2, 16.16.0.b.1, with Chinese Remainder Theorem */
X163:=sub<GLeftRight|[3,4,0,11],[2,3,3,5],[3,3,0,5],[0,3,1,0]>; /* 16.16.0.1, 16.16.0.a.1, with Chinese Remainder Theorem */
X164:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,0,11],[1,0,8,1],[3,1,0,5],[1,2,2,1]>; /* 16.24.0.41, 16.24.0.a.1, with Chinese Remainder Theorem */
X165:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[0,3,5,0],[3,0,0,5],[1,2,2,1]>; /* 16.24.0.31, 16.24.0.l.2, with Chinese Remainder Theorem */
X166:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[0,3,5,0],[7,0,0,9],[1,2,2,1]>; /* 16.24.0.33, 16.24.0.k.1, with Chinese Remainder Theorem */
X167:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[2,3,1,2],[3,0,0,5],[1,2,2,1]>; /* 16.24.0.32, 16.24.0.l.1, with Chinese Remainder Theorem */
X168:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[2,3,1,2],[7,0,0,9],[1,2,2,1]>; /* 16.24.0.34, 16.24.0.k.2, with Chinese Remainder Theorem */
X169:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[0,1,1,0],[2,3,5,6]>; /* 16.48.0.21, 16.48.0.h.2, with Chinese Remainder Theorem */
X1610:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[0,1,5,0],[2,5,1,2]>; /* 16.48.0.76, 16.48.0.m.2, with Chinese Remainder Theorem */

X1611:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[1,2,2,1],[0,5,1,0]>; /* 16.48.0.77, 16.48.0.m.1, with Chinese Remainder Theorem */
X1612:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[3,2,2,5],[2,3,5,6]>; /* 16.48.0.22, 16.48.0.h.1, with Chinese Remainder Theorem */
X1613:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[7,0,0,9],[1,2,2,1]>; /* 16.48.0.14, 16.48.0.a.1, with Chinese Remainder Theorem */
X1614:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[9,0,0,9],[1,0,4,1],[7,0,0,9],[2,1,1,6]>; /* 16.48.0.79, 16.48.0.n.1, with Chinese Remainder Theorem */
X1615:=sub<GLeftRight|[1,4,0,1],[7,0,0,7],[3,2,0,11],[1,0,8,1],[1,3,0,5],[5,1,4,3]>; /* 16.48.0.225, 16.48.0.r.1, with Chinese Remainder Theorem */
X1616:=sub<GLeftRight|[3,0,0,11],[0,3,5,0],[1,2,2,5],[1,0,0,5],[1,8,0,3]>; /* 16.24.0.39, 16.24.0.p.1, with Chinese Remainder Theorem */
X1617:=sub<GLeftRight|[3,0,0,11],[0,3,5,0],[1,2,2,5],[1,4,0,5],[5,2,0,3]>; /* 16.24.0.21, 16.24.0.o.2, with Chinese Remainder Theorem */
X1618:=sub<GLeftRight|[3,0,0,11],[0,3,5,0],[1,2,2,5],[3,0,0,5],[1,8,0,3]>; /* 16.24.0.40, 16.24.0.p.2, with Chinese Remainder Theorem */
X1619:=sub<GLeftRight|[3,0,0,11],[0,3,5,0],[1,2,2,5],[3,6,0,5],[3,4,0,7]>; /* 16.24.0.22, 16.24.0.o.1, with Chinese Remainder Theorem */
X1620:=sub<GLeftRight|[7,0,0,7],[3,8,0,11],[0,3,5,2],[1,2,0,3],[1,4,0,5]>; /* 16.24.0.17, 16.24.0.j.1, with Chinese Remainder Theorem */

X1621:=sub<GLeftRight|[7,0,0,7],[3,8,0,11],[0,3,5,2],[1,2,0,3],[5,4,0,1]>; /* 16.24.0.15, 16.24.0.i.1, with Chinese Remainder Theorem */ 
X1622:=sub<GLeftRight|[7,0,0,7],[3,8,0,11],[0,3,5,2],[1,4,0,5],[5,2,0,3]>; /* 16.24.0.5, 16.24.0.h.1, with Chinese Remainder Theorem */
X1623:=sub<GLeftRight|[7,0,0,7],[3,8,0,11],[0,3,5,2],[5,4,0,1],[1,6,0,3]>; /* 16.24.0.2, 16.24.0.g.1, with Chinese Remainder Theorem */
X1624:=sub<GLeftRight|[7,0,0,7],[3,0,0,11],[0,3,5,2],[1,4,0,5],[5,2,0,3]>; /* 16.24.0.1, 16.24.0.e.1, with Chinese Remainder Theorem */
X1625:=sub<GLeftRight|[7,0,0,7],[3,0,0,11],[0,3,5,2],[3,2,0,1],[1,4,0,5]>; /* 16.24.0.7, 16.24.0.f.1, with Chinese Remainder Theorem */
X1626:=sub<GLeftRight|[7,0,0,7],[3,0,0,11],[0,3,5,2],[3,2,0,1],[5,2,0,3]>; /* 16.24.0.13, 16.24.0.e.2, with Chinese Remainder Theorem */
X1627:=sub<GLeftRight|[7,0,0,7],[3,0,0,11],[0,3,5,2],[3,6,0,5],[3,4,0,7]>; /* 16.24.0.6, 16.24.0.f.2, with Chinese Remainder Theorem */
X1628:=sub<GLeftRight|[0,3,5,8],[2,1,3,10],[1,0,0,3],[1,0,0,5]>; /* 16.24.0.38, 16.24.0.m.1, with Chinese Remainder Theorem*/ 
X1629:=sub<GLeftRight|[0,3,5,8],[2,1,3,10],[1,0,0,3],[1,8,0,5]>; /* 16.24.0.35, 16.24.0.n.1, with Chinese Remainder Theorem */
X1630:=sub<GLeftRight|[0,3,5,8],[2,1,3,10],[1,0,0,5],[1,8,0,3]>; /* 16.24.0.36, 16.24.0.n.2, with Chinese Remainder Theorem */

X1631:=sub<GLeftRight|[0,3,5,8],[2,1,3,10],[3,0,0,5],[1,8,0,3]>; /* 16.24.0.37, 16.24.0.m.2, with Chinese Remainder Theorem */
X1632:=sub<GLeftRight|[3,4,0,11],[6,3,7,9],[3,3,0,5],[0,3,1,0]>; /* 16.16.0.1, 16.16.0.a.1, with Chinese Remainder Theorem */
X1633:=sub<GLeftRight|[3,4,0,11],[6,3,7,9],[5,5,0,3],[0,3,1,0]>; /* 16.16.0.2, 16.16.0.b.1, with Chinese Remainder Theorem */
X1634:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[1,3,2,3],[3,2,2,1]>; /* 16.48.0.249, 16.48.0.t.2, with Chinese Remainder Theorem */
X1635:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,0,0,1],[1,0,0,5]>; /* 16.48.0.3, 16.48.0.d.2, with Chinese Remainder Theorem */
X1636:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,0,0,1],[5,0,0,1]>; /* 16.48.0.6, 16.48.0.d.1, with Chinese Remainder Theorem */
X1637:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,0,0,1],[5,1,0,1]>; /* 16.48.0.204, 16.48.e.1, with Chinese Remainder Theorem */
X1638:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,1,0,1],[1,1,0,5]>; /* 16.48.0.213, 16.48.0.l.2, with Chinese Remainder Theorem */
X1639:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,1,0,1],[1,1,4,1]>; /* 16.48.0.210, 16.48.0.l.1, with Chinese Remainder Theorem */ 
X1640:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,1,0,1],[5,0,0,1]>; /* 16.48.0.60, 16.48.0.j.1, with Chinese Remainder Theorem */

X1641:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,2,2,1],[1,4,2,3]>; /* 16.48.0.19, 16.48.0.c.1, with Chinese Remainder Theorem */
X1642:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,2,2,1],[3,3,4,5]>; /* 16.48.0.248, 16.48.0.t.1, with Chinese Remainder Theorem */
X1643:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[3,4,2,1],[1,2,4,5]>; /* 16.48.0.20, 16.48.0.c.2, with Chinese Remainder Theorem */
X1644:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[7,1,0,9],[1,2,4,5]>; /* 16.48.0.68, 16.48.0.q.1, with Chinese Remainder Theorem */
X1645:=sub<GLeftRight|[1,2,0,1],[7,0,0,7],[3,0,8,11],[7,1,0,9],[3,0,2,1]>; /* 16.48.0.242, 16.48.0.i.1, with Chinese Remainder Theorem */
X1646:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[1,4,0,5],[1,2,0,7]>; /* 16.48.0.120, 16.48.0.z.2, with Chinese Remainder Theorem */
X1647:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[1,4,0,5],[1,6,0,3]>; /* 16.48.0.127, 16.48.0.bb.2, with Chinese Remainder Theorem */
X1648:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[1,4,0,5],[5,2,0,3]>; /* 16.48.0.132, 16.48.0.y.2, with Chinese Remainder Theorem */
X1649:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[1,6,0,3],[1,2,0,7]>; /* 16.48.0.122, 16.48.0.v.2, with Chinese Remainder Theorem */
X1650:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[3,2,0,1],[1,2,0,7]>; /* 16.48.0.102, 16.48.0.z.1, with Chinese Remainder Theorem */

X1651:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[3,2,0,1],[5,2,0,3]>; /* 16.48.0.134, 16.48.0.u.2, with Chinese Remainder Theorem */
X1652:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[3,2,0,1],[5,4,0,1]>; /* 16.48.0.97, 16.48.0.x.1, with Chinese Remainder Theorem */
X1653:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[3,4,0,7],[5,6,0,7]>; /* 16.48.0.101, 16.48.0.bb.1, with Chinese Remainder Theorem */
X1654:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[5,2,0,3],[1,6,0,3]>; /* 16.48.0.150, 16.48.0.y.1, with Chinese Remainder Theorem */
X1655:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[5,2,0,3],[5,4,0,1]>; /* 16.48.0.144, 16.48.0.u.1, with Chinese Remainder Theorem */
X1656:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[5,4,0,1],[1,2,0,7]>; /* 16.48.0.96, 16.48.0.v.1, with Chinese Remainder Theorem */
X1657:=sub<GLeftRight|[7,0,0,7],[9,0,0,9],[0,3,5,2],[7,2,0,5],[7,4,0,3]>; /* 16.48.0.121, 16.48.0.x.2, with Chinese Remainder Theorem */
X1658:=sub<GLeftRight|[2,1,3,2],[0,3,5,8],[1,0,0,5],[1,8,0,3]>; /* 16.24.1.13, 16.24.1.h.2, with Chinese Remainder Theorem */
X1659:=sub<GLeftRight|[2,1,3,2],[0,3,5,8],[3,0,0,5],[1,8,0,3]>; /* 16.24.1.15, 16.24.1.h.1, with Chinese Remainder Theorem */
X1660:=sub<GLeftRight|[3,0,0,11],[0,3,5,0],[2,3,9,6],[1,0,0,3],[1,0,0,5]>; /* 16.24.1.19, 16.24.1.n.1, with Chinese Remainder Theorem */

X1661:=sub<GLeftRight|[3,0,0,11],[0,3,5,0],[2,3,9,6],[1,4,0,3],[1,0,0,5]>; /* 16.24.1.17, 16.24.1.n.2, with Chinese Remainder Theorem */
X1662:=sub<GLeftRight|[3,0,0,11],[0,3,5,8],[1,4,12,1],[1,0,0,5],[1,8,0,3]>; /* 16.48.1.34, 16.48.1.ch.1, with Chinese Remainder Theorem */
X1663:=sub<GLeftRight|[3,0,0,11],[0,3,5,8],[1,4,12,1],[1,8,0,3],[[2,3,5,2+16]]>; /* 16.48.1.124, 16.48.1.cd.1, with Chinese Remainder Theorem */
X1664:=sub<GLeftRight|[3,0,0,11],[0,3,5,8],[1,4,12,1],[1,8,0,5],[1,2,10,3]>; /* 16.48.1.5, 16.48.1.cg.1, with Chinese Remainder Theorem */
X1665:=sub<GLeftRight|[3,0,0,11],[0,3,5,8],[1,4,12,1],[1,8,0,7],[1,2+16,10,7]>; /* 16.48.1.133, 16.48.1.cc.1, with Chinese Remainder Theorem */
X1666:=sub<GLeftRight|[3,0,0,11],[0,3,5,8],[1,4,12,1],[3,0,0,5],[1,8,0,3]>; /* 16.48.1.35, 16.48.1.cf.1, with Chinese Remainder Theorem */
X1667:=sub<GLeftRight|[3,0,0,11],[0,3,5,8],[1,4,12,1],[3,0,0,5],[[2,3,5,2+16]]>; /* 16.48.1.136, 16.48.1.ca.1, with Chinese Remainder Theorem */
X1668:=sub<GLeftRight|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[3,0,0,5],[1,2,2,9]>; /* 16.48.1.118, 16.48.1.bn.1, with Chinese Remainder Theorem */
X1669:=sub<GLeftRight|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[3,0,0,5],[1,2,6,9]>; /* 16.48.1.129, 16.48.1.bs.1, with Chinese Remainder Theorem */
X1670:=sub<GLeftRight|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[7,0,0,9],[1,2,2,1]>; /* 16.48.1.119, 16.48.1.bl.1, with Chinese Remainder Theorem */

X1671:=sub<GLeftRight|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[7,0,0,9],[[2,3,5,2+16]]>; /* 16.48.1.132, 16.48.1.bq.1, with Chinese Remainder Theorem */
X1672:=sub<GLeftRight|[3,8,0,11],[0,3,5,0],[5,2,2,1],[3,2,0,5],[5,4,0,1]>; /* 16.24.1.5, 16.24.1.l.1, with Chinese Remainder Theorem */
X1673:=sub<GLeftRight|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[7,4,0,9],[1,2,2,9]>; /* 16.48.1.146, 16.48.1.bv.1, with Chinese Remainder Theorem */
X1674:=sub<GLeftRight|[7,0,0,7],[3,4,0,11],[0,3,5,0],[3,0,0,5],[1,2,2,9]>; /* 16.24.1.11, 16.24.1.f.1, with Chinese Remainder Theorem */
X1675:=sub<GLeftRight|[7,0,0,7],[1,8,0,1],[1,4,4,1],[0,3,5,0],[7,4,0,9],[1,2,6,9]>; /* 16.48.1.139, 16.48.1.bg.1, with Chinese Remainder Theorem */
X1676:=sub<GLeftRight|[7,0,0,7],[3,4,0,11],[0,3,5,0],[3,4,0,5],[1,2,2,1]>; /* 16.24.1.10, 16.24.1.f.2, with Chinese Remainder Theorem */
X1677:=sub<GLeftRight|[7,0,0,7],[0,3,5,0],[5,2,2,1],[1,6,0,7],[7,4,0,3]>; /* 16.48.1.109, 16.48.1.cx.2, with Chinese Remainder Theorem */
X1678:=sub<GLeftRight|[7,0,0,7],[0,3,5,0],[5,2,2,1],[5,4,0,1],[3,6,0,1]>; /* 16.48.1.99, 16.48.1.cx.1, with Chinese Remainder Theorem */
X1679:=sub<GLeftRight|[3,0,0,11],[1,4,4,1],[0,3,5,0],[1,0,0,3],[1,0,0,5]>; /* 16.48.1.37, 16.48.1.df.1, with Chinese Remainder Theorem */
X1680:=sub<GLeftRight|[3,0,0,11],[1,4,4,1],[0,3,5,0],[1,0,0,5],[1,2,2,3]>; /* 16.48.1.10, 16.48.1.de.1, with Chinese Remainder Theorem */

X1681:=sub<GLeftRight|[3,0,0,11],[1,4,4,1],[0,3,5,0],[1,4,0,3],[1,0,0,5]>; /* 16.48.1.40, 16.48.1.cr.1, with Chinese Remainder Theorem */
X1682:=sub<GLeftRight|[3,0,0,11],[1,4,4,1],[0,3,5,0],[3,0,0,5],[1,2,2,1]>; /* 16.48.1.122, 16.48.1.cs.1, with Chinese Remainder Theorem */
X1683:=sub<GLeftRight|[3,0,0,11],[1,4,4,1],[0,3,5,0],[3,4,0,1],[1,2,2,1]>; /* 16.48.1.113, 16.48.1.ct.1, with Chinese Remainder Theorem */
X1684:=sub<GLeftRight|[3,0,0,11],[1,4,4,1],[0,3,5,0],[3,4,0,5],[1,2,2,1]>; /* 16.48.1.147, 16.48.1.dc.1, with Chinese Remainder Theorem */


LeftGroups:=
[
X161,X162,X163,X164,X165,X166,X167,X168,X169,X1610,
X1611,X1612,X1613,X1614,X1615,X1616,X1617,X1618,X1619,X1620,
X1621,X1622,X1623,X1624,X1625,X1626,X1627,X1628,X1629,X1630,
X1631,X1632,X1633,X1634,X1635,X1636,X1637,X1638,X1639,X1640,
X1641,X1642,X1643,X1644,X1645,X1646,X1647,X1648,X1649,X1650,
X1651,X1652,X1653,X1654,X1655,X1656,X1657,X1658,X1659,X1660,
X1661,X1662,X1663,X1664,X1665,X1666,X1667,X1668,X1669,X1670,
X1671,X1672,X1673,X1674,X1675,X1676,X1677,X1678,X1679,X1680,
X1681,X1682,X1683,X1684];

#LeftGroups eq 84;

X131:=sub<GLeftRight|[2+13,0,0,7],[1,0,1,1],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.14.0.1, 13.14.0.a.1 */
X132:=sub<GLeftRight|[3,0,0,9],[4+13,0,1,10+13],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.28.0.2, 13.28.0.a.2 */
X133:=sub<GLeftRight|[3,0,0,9],[4+13,0,1,10+13],[2+13,0,0,1],KerRight1,KerRight2,KerRight3>; /* 13.28.0.1, 13.28.0.a.1 */
X134:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.42.0.2, 13.42.0.a.1 */
X135:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[2+13,0,0,1],KerRight1,KerRight2,KerRight3>; /* 13.42.0.1, 13.42.0.a.2 */
X136:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[2+13,0,0,3],KerRight1,KerRight2,KerRight3>; /* 13.42.0.3, 13.42.0.b.1 */

RightGroups:=[X131/*,X132,X133,X134,X135,X136*/];


Attach("/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2.m");
load "/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2data.m";

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
if GL2Genus(X) lt 2 then
ANSWERS:=ANSWERS join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

#ANSWERS; // no hits


/* level 8*13 */

ANSWERS813:={};

G2:=GL(2,Integers(2));
G4:=GL(2,Integers(4));
G8:=GL(2,Integers(8));
G16:=GL(2,Integers(16));
G32:=GL(2,Integers(32));

Left:=8;
Right:=13;

GLeftRight:=GL(2,Integers(Left*Right));

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];


H81:=sub<G8|[1,2,0,1],[1,1,1,2],[1,0,0,3],[1,1,0,5]>; /* 8.2.0.1, 8.2.0.a.1 */
H82:=sub<G8|[1,2,0,1],[1,1,1,2],[1,1,0,3],[1,1,0,5]>; /* 8.2.0.2, 8.2.0.b.1 */
H83:=sub<G8|[1,2,0,1],[3,0,0,3],[1,0,2,1],[1,0,0,3],[0,1,1,0]>; /* 8.6.0.5, 8.6.0.a.1 */
H84:=sub<G8|[1,2,0,1],[3,0,0,3],[1,0,2,1],[1,1,0,3],[1,1,0,5]>; /* 8.6.0.6, 8.6.0.b.1 */
H85:=sub<G8|[3,0,0,3],[1,4,0,1],[0,3,5,2],[1,0,0,3],[1,2,0,5]>; /* 8.6.0.1, 8.6.0.c.1 */
H86:=sub<G8|[3,0,0,3],[1,4,0,1],[0,3,5,2],[1,2,0,3],[1,2,0,5]>; /* 8.6.0.4, 8.6.0.d.1 */
H87:=sub<G8|[1,4,0,1],[2,1,3,2],[0,3,5,0],[1,0,0,3],[1,2,0,5]>; /* 8.6.0.2, 8.6.0.f.1 */
H88:=sub<G8|[1,4,0,1],[2,1,3,2],[0,3,5,0],[1,2,0,3],[1,2,0,5]>; /* 8.6.0.3, 8.6.0.e.1 */
H89:=sub<G8|[1,4,0,1],[2,1,5,3],[3,3,0,5],[0,1,3,0]>; /* 8.8.0.1, 8.8.0.a.1 */
H810:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,2,2,5],[1,0,0,3],[0,1,1,0]>; /* 8.12.0.35, 8.12.0.f.1 */

H811:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,2,2,5],[1,0,0,3],[1,2,0,5]>; /* 8.12.0.3, 8.12.0.a.1 */
H812:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,2,2,5],[1,2,0,3],[0,1,1,0]>; /* 8.12.0.16, 8.12.0.d.1 */
H813:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,2,2,5],[1,2,0,3],[1,2,0,5]>; /* 8.12.0.4, 8.12.0.b.1 */
H814:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,2,2,5],[1,2,0,5],[0,1,1,0]>; /* 8.12.0.39, 8.12.0.g.1 */
H815:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,2,2,5],[3,0,0,5],[0,1,3,2]>; /* 8.12.0.26, 8.12.0.h.1 */
H816:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,2,2,5],[3,0,0,5],[2,1,1,2]>; /* 8.12.0.36, 8.12.0.l.1 */
H817:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,2,2,5],[3,2,0,5],[0,1,3,0]>; /* 8.12.0.19, 8.12.0.i.1 */
H818:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,2,2,5],[3,2,0,5],[2,1,1,2]>; /* 8.12.0.15, 8.12.0.k.1 */
H819:=sub<G8|[3,0,0,3],[1,4,0,1],[0,3,5,0],[1,0,0,3],[1,2,2,1]>; /* 8.12.0.28, 8.12.0.t.1 */
H820:=sub<G8|[3,0,0,3],[1,4,0,1],[0,3,5,0],[3,0,0,5],[1,2,2,1]>; /* 8.12.0.29, 8.12.0.s.1 */

H821:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,0,4,1],[0,1,3,0],[2,1,5,2]>; /* 8.24.0.37, 8.24.0.m.1 */
H822:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,0,4,1],[1,0,0,3],[0,1,1,0]>; /* 8.24.0.80, 8.24.0.n.1 */
H823:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,0,4,1],[1,0,0,3],[1,2,0,5]>; /* 8.24.0.22, 8.24.0.c.1 */
H824:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,0,4,1],[1,2,0,5],[3,0,2,5]>; /* 8.24.0.31, 8.24.0.a.1 */
H825:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,0,4,1],[1,3,0,3],[1,2,0,5]>; /* 8.24.0.74, 8.24.0.t.1 */
H826:=sub<G8|[3,0,0,3],[1,4,0,1],[5,0,0,5],[1,0,4,1],[1,3,0,3],[1,3,2,3]>; /* 8.24.0.81, 8.24.0.v.1 */
H827:=sub<G8|[3,0,0,3],[0,3,5,0],[1,2,2,5],[1,0,0,3],[1,0,0,5]>; /* 8.12.0.34, 8.12.0.z.1 */
H828:=sub<G8|[3,0,0,3],[0,3,5,0],[1,2,2,5],[1,0,0,3],[1,4,0,5]>; /* 8.12.0.30, 8.12.0.y.1 */
H829:=sub<G8|[3,0,0,3],[0,3,5,0],[1,2,2,5],[3,2,0,1],[1,0,0,5]>; /* 8.12.0.18, 8.12.0.x.1 */
H830:=sub<G8|[3,0,0,3],[0,3,5,0],[1,2,2,5],[3,2,0,1],[1,4,0,5]>; /* 8.12.0.17, 8.12.0.w.1 */

H831:=sub<G8|[3,0,0,3],[5,0,0,5],[0,3,5,2],[1,2,0,3],[1,0,0,5]>; /* 8.12.0.9, 8.12.0.p.1 */
H832:=sub<G8|[3,0,0,3],[5,0,0,5],[0,3,5,2],[1,2,0,3],[1,4,0,5]>; /* 8.12.0.10, 8.12.0.o.1 */
H833:=sub<G8|[3,0,0,3],[5,0,0,5],[0,3,5,2],[3,2,0,1],[1,0,0,5]>; /* 8.12.0.11, 8.12.0.m.1 */
H834:=sub<G8|[3,0,0,3],[5,0,0,5],[0,3,5,2],[3,2,0,1],[1,4,0,5]>; /* 8.12.0.5, 8.12.0.n.1 */
H835:=sub<G8|[2,1,3,2],[0,3,5,0],[1,0,0,3],[1,0,0,5]>; /* 8.12.0.31, 8.12.0.v.1 */
H836:=sub<G8|[2,1,3,2],[0,3,5,0],[1,0,0,3],[1,4,0,5]>; /* 8.12.0.33, 8.12.0.u.1 */
H837:=sub<G8|[2,1,3,2],[0,3,5,0],[1,4,0,3],[1,0,0,5]>; /* 8.12.0.32, 8.12.0.q.1 */
H838:=sub<G8|[2,1,3,2],[0,3,5,0],[1,4,0,3],[1,4,0,5]>; /* 8.12.0.27, 8.12.0.r.1 */
H839:=sub<G8|[1,1,1,2],[0,3,5,0],[3,3,0,5],[2,1,1,3]>; /* 8.16.0.1, 8.16.0.a.1 */
H840:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[1,0,0,3],[1,0,0,5]>; /* 8.24.0.23, 8.24.0.i.1 */

H841:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[1,0,0,3],[1,0,4,5]>; /* 8.24.0.25, 8.24.0.h.1 */
H842:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[1,0,0,3],[1,1,0,5]>; /* 8.24.0.99, 8.24.0.k.1 */
H843:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[1,0,0,5],[3,0,2,1]>; /* 8.24.0.35, 8.24.0.g.1 */
H844:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[1,0,2,3],[3,2,2,1]>; /* 8.24.0.36, 8.24.0.f.1 */
H845:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[1,1,0,3],[1,0,0,5]>; /* 8.24.0.67, 8.24.0.q.1 */
H846:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[1,1,0,3],[1,1,4,1]>; /* 8.24.0.100, 8.24.0.r.1 */
H847:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[1,1,0,3],[3,2,2,1]>; /* 8.24.0.130, 8.24.0.s.1 */
H848:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[1,3,2,3],[3,2,2,1]>; /* 8.24.0.137, 8.24.0.z.1 */
H849:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[3,0,0,5],[1,1,4,1]>; /* 8.24.0.115, 8.24.0.y.1 */
H850:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[3,1,0,5],[1,0,4,5]>; /* 8.24.0.70, 8.24.0.x.1 */

H851:=sub<G8|[1,2,0,1],[3,0,0,3],[5,0,0,5],[3,1,0,5],[3,0,2,1]>; /* 8.24.0.129, 8.24.0.o.1 */
H852:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[1,0,0,3],[1,0,0,5]>; /* 8.24.0.83, 8.24.0.bt.1 */
H853:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[1,0,0,3],[1,2,2,3]>; /* 8.24.0.131, 8.24.0.bp.1 */
H854:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[1,0,0,3],[1,4,0,5]>; /* 8.24.0.82, 8.24.0.bn.1 */
H855:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[1,0,0,5],[1,2,2,3]>; /* 8.24.0.41, 8.24.0.bs.1 */
H856:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[1,4,0,3],[1,0,0,5]>; /* 8.24.0.84, 8.24.0.bh.1 */
H857:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[1,4,0,3],[1,2,2,1]>; /* 8.24.0.127, 8.24.0.bj.1 */
H858:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[1,4,0,3],[1,4,0,5]>; /* 8.24.0.79, 8.24.0.bf.1 */
H859:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[1,4,0,5],[2,1,1,2]>; /* 8.24.0.39, 8.24.0.be.1 */
H860:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[3,0,0,5],[1,2,2,1]>; /* 8.24.0.128, 8.24.0.bi.1 */

H861:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[3,0,0,5],[2,3,5,2]>; /* 8.24.0.134, 8.24.0.bo.1 */
H862:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[3,4,0,5],[1,2,2,1]>; /* 8.24.0.136, 8.24.0.bq.1 */
H863:=sub<G8|[3,0,0,3],[1,4,4,1],[0,3,5,0],[3,4,0,5],[2,1,1,2]>; /* 8.24.0.135, 8.24.0.bc.1 */
H864:=sub<G8|[7,0,0,7],[0,3,5,2],[1,4,0,5],[1,6,0,3]>; /* 8.24.0.90, 8.24.0.bb.2 */
H865:=sub<G8|[7,0,0,7],[0,3,5,2],[3,2,0,1],[1,4,0,5]>; /* 8.24.0.91, 8.24.0.ba.2 */
H866:=sub<G8|[7,0,0,7],[0,3,5,2],[3,2,0,1],[5,4,0,1]>; /* 8.24.0.88, 8.24.0.bb.1 */
H867:=sub<G8|[7,0,0,7],[0,3,5,2],[5,2,0,3],[5,4,0,1]>; /* 8.24.0.92, 8.24.0.ba.1 */
H868:=sub<G8|[3,2,0,3],[5,2,0,5],[1,2,4,1],[1,0,0,3],[1,0,0,5]>; /* 8.24.0.15, 8.24.0.d.1 */
H869:=sub<G8|[3,2,0,3],[5,2,0,5],[1,2,4,1],[1,0,0,3],[1,2,0,5]>; /* 8.24.0.18, 8.24.0.e.1 */
H870:=sub<G8|[3,2,0,3],[5,2,0,5],[1,2,4,1],[1,2,0,3],[1,0,0,5]>; /* 8.24.0.10, 8.24.0.e.2 */

H871:=sub<G8|[3,2,0,3],[5,2,0,5],[1,2,4,1],[1,2,0,3],[1,2,0,5]>; /* 8.24.0.13, 8.24.0.d.2 */
H872:=sub<G8|[0,3,5,0],[5,2,2,1],[1,2,0,3],[1,4,0,5]>; /* 8.24.0.122, 8.24.0.bl.2 */
H873:=sub<G8|[0,3,5,0],[5,2,2,1],[5,4,0,1],[3,6,0,1]>; /* 8.24.0.119, 8.24.0.bl.1 */
H874:=sub<G8|[1,4,0,1],[7,0,0,7],[1,0,4,1],[1,2,0,3],[1,0,0,5]>; /* 8.48.0.44, 8.48.0.b.2 */
H875:=sub<G8|[1,4,0,1],[7,0,0,7],[1,0,4,1],[1,2,0,3],[1,2,0,5]>; /* 8.48.0.96, 8.48.0.f.1 */
H876:=sub<G8|[1,4,0,1],[7,0,0,7],[1,0,4,1],[1,2,0,3],[3,2,0,5]>; /* 8.48.0.50, 8.48.0.b.1 */
H877:=sub<G8|[1,4,0,1],[7,0,0,7],[1,0,4,1],[3,0,0,1],[1,0,2,5]>; /* 8.48.0.88, 8.48.0.e.2 */
H878:=sub<G8|[1,4,0,1],[7,0,0,7],[1,0,4,1],[3,0,0,1],[1,2,0,5]>; /* 8.48.0.137, 8.48.0.e.1 */
H879:=sub<G8|[1,4,0,1],[7,0,0,7],[1,0,4,1],[3,0,0,1],[5,0,0,1]>; /* 8.48.0.45, 8.48.0.c.1 */
H880:=sub<G8|[3,2,0,3],[5,2,0,5],[1,0,0,3],[1,0,4,5]>; /* 8.48.0.97, 8.48.0.i.1 */

H881:=sub<G8|[3,2,0,3],[5,2,0,5],[1,0,0,5],[1,0,4,3]>; /* 8.48.0.98, 8.48.0.l.2 */
H882:=sub<G8|[3,2,0,3],[5,2,0,5],[1,2,0,3],[1,0,0,5]>; /* 8.48.0.91, 8.48.0.k.2 */
H883:=sub<G8|[3,2,0,3],[5,2,0,5],[1,2,0,3],[1,2,0,5]>; /* 8.48.0.123, 8.48.0.k.1 */
H884:=sub<G8|[3,2,0,3],[5,2,0,5],[1,2,0,5],[1,2,4,3]>; /* 8.48.0.144, 8.48.0.l.1 */
H885:=sub<G8|[3,2,0,3],[5,2,0,5],[1,3,0,3],[1,0,0,5]>; /* 8.48.0.197, 8.48.0.n.2 */
H886:=sub<G8|[3,2,0,3],[5,2,0,5],[1,3,0,3],[1,2,0,5]>; /* 8.48.0.199, 8.48.0.n.1 */
H887:=sub<G8|[3,2,0,3],[5,2,0,5],[1,3,0,3],[1,3,4,1]>; /* 8.48.0.217, 8.48.0.p.1 */
H888:=sub<G8|[3,2,0,3],[5,2,0,5],[3,0,0,5],[1,2,4,3]>; /* 8.48.0.138, 8.48.0.h.1 */
H889:=sub<G8|[3,2,0,3],[5,2,0,5],[3,2,0,5],[1,0,4,3]>; /* 8.48.0.89, 8.48.0.h.2 */
H890:=sub<G8|[3,2,0,3],[5,2,0,5],[3,3,0,5],[1,0,4,3]>; /* 8.48.0.218, 8.48.0.m.1 */

H891:=sub<G8|[3,2,0,3],[5,2,0,5],[3,3,0,5],[1,1,4,1]>; /* 8.48.0.224 , 8.48.0.m.2 */
H892:=sub<G8|[3,4,4,3],[0,3,5,0],[3,4,0,1],[1,4,0,5]>; /* 8.48.0.204, 8.48.0.q.2 */
H893:=sub<G8|[3,4,4,3],[0,3,5,0],[3,4,0,1],[5,4,0,1]>; /* 8.48.0.203, 8.48.0.q.1 */

LeftGroups:=[
H81,H82,H83,H84,H85,H86,H87,H88,H89,H810,
H811,H812,H813,H814,H815,H816,H817,H818,H819,H820,
H821,H822,H823,H824,H825,H826,H827,H828,H829,H830,
H831,H832,H833,H834,H835,H836,H837,H838,H839,H840,
H841,H842,H843,H844,H845,H846,H847,H848,H849,H850,
H851,H852,H853,H854,H855,H856,H857,H858,H859,H860,
H861,H862,H863,H864,H865,H866,H867,H868,H869,H870,
H871,H872,H873,H874,H875,H876,H877,H878,H879,H880,
H881,H882,H883,H884,H885,H886,H887,H888,H889,H890,
H891,H892,H893
];

#LeftGroups eq 93;

X131:=sub<GLeftRight|[2+13,0,0,7],[1,0,1,1],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.14.0.1, 13.14.0.a.1, with Chinese Remainder Theorem */
X132:=sub<GLeftRight|[3,0,0,9],[4+13,0,1,10+13],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.28.0.2, 13.28.0.a.2, with Chinese Remainder Theorem */
X133:=sub<GLeftRight|[3,0,0,9],[4+13,0,1,10+13],[2+13,0,0,1],KerRight1,KerRight2,KerRight3>; /* 13.28.0.1, 13.28.0.a.1, with Chinese Remainder Theorem */
X134:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.42.0.2, 13.42.0.a.1, with Chinese Remainder Theorem */
X135:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[2+13,0,0,1],KerRight1,KerRight2,KerRight3>; /* 13.42.0.1, 13.42.0.a.2, with Chinese Remainder Theorem */
X136:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[2+13,0,0,3],KerRight1,KerRight2,KerRight3>; /* 13.42.0.3, 13.42.0.b.1, with Chinese Remainder Theorem */

RightGroups:=[X131,X132,X133,X134,X135,X136];

Attach("/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2.m");
load "/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2data.m";


for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
if GL2Genus(X) lt 2 then
ANSWERS813:=ANSWERS813 join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

#ANSWERS813; // six hits
ANSWERS813:=[x:x in ANSWERS813];
ANSWERS813[1][3] subset ANSWERS813[5][3]; // true
ANSWERS813[2][3] subset ANSWERS813[5][3]; // true
ANSWERS813[3][3] subset ANSWERS813[6][3]; // true
ANSWERS813[4][3] subset ANSWERS813[6][3]; // true

A104281b1:=sub<GLeftRight|[57,52,90,95],[59,3,28,19],[65,44,46,15],[94,45,103,87]>;
IsConjugate(GLeftRight,A104281b1,ANSWERS813[5][3]);

A104281a1:=sub<GLeftRight|[1,71,56,103],[19,22,8,57],[29,73,52,47],[33,56,41,31]>;
IsConjugate(GLeftRight,A104281a1,ANSWERS813[6][3]);

A104561b1:=sub<GLeftRight|[73,3,47,0],[80,11,41,58],[96,37,11,83],[97,76,24,97]>;
IsConjugate(GLeftRight,A104561b1,ANSWERS813[3][3]);
A104561b2:=sub<GLeftRight|[35,73,23,102],[62,89,1,91],[72,23,37,86],[79,88,48,39]>;
IsConjugate(GLeftRight,A104561b2,ANSWERS813[4][3]);

A104561f1:=sub<GLeftRight|[42,83,9,7],[86,67,49,29],[97,4,101,25]>;
A104561f2:=sub<GLeftRight|[9,103,28,25],[17,46,72,43],[55,5,19,56]>;

A104561f1 subset A104281a1;
A104561f2 subset A104281a1;

// here we compute equations of the modular curves and ranks of A104281b1, A104281a1, A104561b1, A104561b2, A104561f1, and A104561f2

load "/users/garenchiloyan/Desktop/GL2GroupTheory.m";
load "/users/garenchiloyan/Desktop/ModularCurves.m";

M:=CreateModularCurveRec(104,[[57,52,90,95],[59,3,28,19],[65,44,46,15],[94,45,103,87]]);
FindModelOfXG(M,1); // wait until weight 4 precision 101, EllipticCurve([4,-80])
E:=EllipticCurve([4,-80]);
Rank(E) eq 0; // true

M:=CreateModularCurveRec(104,[[1,71,56,103],[19,22,8,57],[29,73,52,47],[33,56,41,31]]);
FindModelOfXG(M,1); // wait until weight 4 precision 101, EllipticCurve([4,80])
E:=EllipticCurve([4,80]);
Rank(E) eq 1; // true

M:=CreateModularCurveRec(104,[[73,3,47,0],[80,11,41,58],[96,37,11,83],[97,76,24,97]]);
FindModelOfXG(M,1); // wait until weight 4 precision 111, EllipticCurve([-16,24])
E:=EllipticCurve([-16,24]);
Rank(E) eq 1; // true

M:=CreateModularCurveRec(104,[[35,73,23,102],[62,89,1,91],[72,23,37,86],[79,88,48,39]]);
FindModelOfXG(M,1); // wait until weight 4 precision 111, EllipticCurve([-16,24])

M:=CreateModularCurveRec(104,[[42,83,9,7],[86,67,49,29],[97,4,101,25]]);
FindModelOfXG(M,1); // wait until weight 2 precision 31, EllipticCurve([-16,24])

M:=CreateModularCurveRec(104,[[9,103,28,25],[17,46,72,43],[55,5,19,56]]);
FindModelOfXG(M,1); // wait until weight 2 precision 31, EllipticCurve([-16,24])

/* level 4*13 */

ANSWERS413:={};

G2:=GL(2,Integers(2));
G4:=GL(2,Integers(4));
G8:=GL(2,Integers(8));
G16:=GL(2,Integers(16));
G32:=GL(2,Integers(32));

Left:=4;
Right:=13;

GLeftRight:=GL(2,Integers(Left*Right));

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

H41:=sub<G4|[1,2,0,1],[1,1,1,2],[1,1,0,3]>; /* 4.2.0.1, 4.2.0.a.1 */
H42:=sub<G4|[1,2,0,1],[3,0,0,3],[1,0,2,1],[1,1,0,3]>; /* 4.6.0.5, 4.6.0.a.1 */ 
H43:=sub<G4|[1,1,1,2],[0,1,3,0],[1,1,0,3]>; /* 4.4.0.1, 4.4.0.a.1 */
H44:=sub<G4|[3,0,0,3],[0,1,3,2],[1,0,0,3]>; /* 4.6.0.3, 4.6.0.b.1 */
H45:=sub<G4|[3,0,0,3],[0,1,3,2],[1,2,0,3]>; /* 4.6.0.1, 4.6.0.c.1 */
H46:=sub<G4|[1,2,2,1],[0,1,3,0],[1,0,0,3]>; /* 4.6.0.4, 4.6.0.e.1 */
H47:=sub<G4|[1,2,2,1],[0,1,3,0],[1,2,0,3]>; /* 4.6.0.2, 4.6.0.d.1 */
H48:=sub<G4|[2,1,1,3],[1,1,0,3]>; /* 4.8.0.2, 4.8.0.b.1 */
H49:=sub<G4|[3,0,0,3],[1,2,2,1],[0,1,1,0]>; /* 4.12.0.9, 4.12.0.d.1 */
H410:=sub<G4|[3,0,0,3],[1,2,2,1],[1,0,0,3]>; /* 4.12.0.4, 4.12.0.a.1 */

H411:=sub<G4|[3,0,0,3],[1,2,2,1],[1,2,0,3]>; /* 4.12.0.3, 4.12.0.b.1 */
H412:=sub<G4|[0,1,3,0],[1,0,0,3]>; /* 4.12.0.11, 4.12.0.f.1 */
H413:=sub<G4|[0,1,3,0],[2,1,1,2]>; /* 4.12.0.5, 4.12.0.e.1 */
H414:=sub<G4|[3,0,0,3],[1,0,0,3]>; /* 4.24.0.8, 4.24.0.b.1 */
H415:=sub<G4|[3,0,0,3],[1,3,0,3]>; /* 4.24.0.2, 4.24.0.c.1 */

LeftGroups:=[
H41,H42,H43,H44,H45,H46,H47,H48,H49,H410,
H411,H412,H413,H414,H415
];

X131:=sub<GLeftRight|[2+13,0,0,7],[1,0,1,1],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.14.0.1, 13.14.0.a.1, with Chinese Remainder Theorem */
X132:=sub<GLeftRight|[3,0,0,9],[4+13,0,1,10+13],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.28.0.2, 13.28.0.a.2, with Chinese Remainder Theorem */
X133:=sub<GLeftRight|[3,0,0,9],[4+13,0,1,10+13],[2+13,0,0,1],KerRight1,KerRight2,KerRight3>; /* 13.28.0.1, 13.28.0.a.1, with Chinese Remainder Theorem */
X134:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.42.0.2, 13.42.0.a.1, with Chinese Remainder Theorem */
X135:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[2+13,0,0,1],KerRight1,KerRight2,KerRight3>; /* 13.42.0.1, 13.42.0.a.2, with Chinese Remainder Theorem */
X136:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[2+13,0,0,3],KerRight1,KerRight2,KerRight3>; /* 13.42.0.3, 13.42.0.b.1, with Chinese Remainder Theorem */

RightGroups:=[X131,X132,X133,X134,X135,X136];

Attach("/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2.m");

load "/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2data.m";

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
if GL2Genus(X) lt 2 then
ANSWERS413:=ANSWERS413 join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

// three hits, 52.56.1.4, 52.56.1.5, and 52.28.1.1

ANSWERS413:=[x:x in ANSWERS413];
ANSWERS413[1][3] subset ANSWERS413[3][3]; // true
ANSWERS413[2][3] subset ANSWERS413[3][3]; // true

A522811:=sub<GLeftRight|[13,31,34,5],[21,49,20,43],[32,51,49,19],[36,29,5,24]>;
IsConjugate(GLeftRight,A522811,ANSWERS413[3][3]); // true

// here we compute equations of the modular curve and rank of A522811

load "/users/garenchiloyan/Desktop/GL2GroupTheory.m";
load "/users/garenchiloyan/Desktop/ModularCurves.m";

M:=CreateModularCurveRec(52,[[13,31,34,5],[21,49,20,43],[32,51,49,19],[36,29,5,24]]);
FindModelOfXG(M,1); // wait until weight 4 precision 111, EllipticCurve([1,10])
E:=EllipticCurve([1,10]);
Rank(E) eq 0; // true

G2:=GL(2,Integers(2));
G4:=GL(2,Integers(4));
G8:=GL(2,Integers(8));
G16:=GL(2,Integers(16));
G32:=GL(2,Integers(32));

Left:=2;
Right:=13;

GLeftRight:=GL(2,Integers(Left*Right));

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

G2:=GL(2,Integers(2));

H21:=sub<G2|[0,1,1,1]>; /* 2.2.0.1, 2.2.0.a.1 */
H22:=sub<G2|[0,1,1,0]>; /* 2.3.0.1, 2.3.0.a.1 */
H23:=sub<G2|[]>; /* 2.6.0.1, 2.6.0.a.1 */

LeftGroups:=[
H21, H22, H23
];

#LeftGroups eq 3;

X131:=sub<GLeftRight|[2+13,0,0,7],[1,0,1,1],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.14.0.1, 13.14.0.a.1, with Chinese Remainder Theorem */
X132:=sub<GLeftRight|[3,0,0,9],[4+13,0,1,10+13],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.28.0.2, 13.28.0.a.2, with Chinese Remainder Theorem */
X133:=sub<GLeftRight|[3,0,0,9],[4+13,0,1,10+13],[2+13,0,0,1],KerRight1,KerRight2,KerRight3>; /* 13.28.0.1, 13.28.0.a.1, with Chinese Remainder Theorem */
X134:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[1,0,0,2+13],KerRight1,KerRight2,KerRight3>; /* 13.42.0.2, 13.42.0.a.1, with Chinese Remainder Theorem */
X135:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[2+13,0,0,1],KerRight1,KerRight2,KerRight3>; /* 13.42.0.1, 13.42.0.a.2, with Chinese Remainder Theorem */
X136:=sub<GLeftRight|[5,0,0,8+13],[1,0,1,1],[2+13,0,0,3],KerRight1,KerRight2,KerRight3>; /* 13.42.0.3, 13.42.0.b.1, with Chinese Remainder Theorem */

RightGroups:=[X131,X132,X133,X134,X135,X136];

Attach("/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2.m");
load "/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2data.m";

ANSWERS213:={};

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
if GL2Genus(X) lt 2 then
ANSWERS213:=ANSWERS213 join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

// three hits
/* 26.28.1.1, 26.56.1.2, 26.56.1.3 */

ANSWERS213:=[x:x in ANSWERS213];

ANSWERS213[2][3] subset ANSWERS213[1][3]; // true
ANSWERS213[3][3] subset ANSWERS213[1][3]; // true

A262811:=sub<GLeftRight|[7,17,23,10],[17,17,17,10],[21,19,1,0]>;
IsConjugate(GLeftRight,A262811,ANSWERS213[1][3]); // true

// here we check that the rank of A262811 is equal to 0

load "/users/garenchiloyan/Desktop/GL2GroupTheory.m";
load "/users/garenchiloyan/Desktop/ModularCurves.m";

M:=CreateModularCurveRec(26,[[7,17,23,10],[17,17,17,10],[21,19,1,0]]);
FindModelOfXG(M,1); // wait until weight 4 precision 36, EllipticCurve([1,-10])
E:=EllipticCurve([1,-10]);
Rank(E) eq 0; // true

// ignore everything below

"""
/*

G104:=GL(2,Integers(104));
G52:=GL(2,Integers(52));
G26:=GL(2,Integers(26));

A1:=sub<G104|[9,0,0,1],[17,0,0,1],[33,0,0,1],[25,52,0,1],[81,26,0,1],[63,52,0,1],[101,91,0,1],[1,13,0,3],[1,0,0,17],[1,0,8,1],[99,91,1,4]>;
A2:=sub<G104|[9,0,0,1],[17,0,0,1],[25,52,0,1],[81,26,0,1],[87,78,0,1],[101,91,0,1],[1,13,0,3],[61,65,1,2]>;
A3:=sub<G104|[9,0,0,1],[17,0,0,1],[25,52,0,1],[81,26,0,1],[75,0,0,1],[61,65,0,1],[61,65,1,2]>;
A4:=sub<G104|[9,0,0,1],[17,0,0,1],[33,0,0,1],[25,52,0,1],[81,26,0,1],[83,78,0,1],[61,65,0,1],[1,0,0,3],[1,0,0,17],[1,0,8,1],[99,91,1,4]>;
A5:=sub<G104|[9,0,0,1],[17,0,0,1],[33,0,0,1],[25,52,0,1],[81,26,0,1],[63,52,0,1],[101,91,0,1],[1,13,0,3],[11,13,1,2]>;
A6:=sub<G104|[9,0,0,1],[17,0,0,1],[33,0,0,1],[25,52,0,1],[81,26,0,1],[83,78,0,1],[61,65,0,1],[11,13,1,2]>;

A7:=sub<G52|[8,21,1,4],[16,19,3,36],[50,3,3,19],[51,0,30,11]>;
A8:=sub<G52|[2,37,5,9],[29,44,2,29],[31,17,29,30],[37,15,8,43]>;
A9:=sub<G52|[13,31,34,5],[21,49,20,43],[32,51,49,19],[36,29,5,24]>;

A10:=sub<G26|[7,17,23,10],[17,17,17,10],[21,19,1,0]>;
A11:=sub<G26|[19,8,22,11],[19,18,20,19],[20,21,23,5]>;
A12:=sub<G26|[7,2,20,1],[11,7,1,18],[24,17,15,5]>;

CHECK:=[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12];

for group in CHECK do
ModCurRec:=CreateModularCurveRec(GL2Level(group),Generators(group));
Y:=FindModelOfXG(ModCurRec,1);
Y;
end for;

/* results

8.2.0.1 and 13.14.0.1, EllipticCurve([4,80]), rank 1, wait until precision 101
8.2.0.1 and 13.28.0.1, EllipticCurve([-16,24]), rank 1, wait until precision 111
8.2.0.1 and 13.28.0.2, EllipticCurve([-16,24]), rank 1, wait until precision 111
M3, generated by [42,83,9,7],[86,67,49,29],[97,4,101,25], Elliptic Curve([-16,24]), rank 1, wait until precision 31
M4, generated by [9,103,28,25],[17,46,72,43],[55,5,19,56], Elliptic Curve([-16,24]), rank 1, wait until precision 31

8.2.0.2 and 13.14.0.1, EllipticCurve([4,-80]), rank 0
8.2.0.2 and 13.28.0.1
8.2.0.2 and 13.28.0.2

A7, EllipticCurve([-4,3]), rank 0
A8, EllipticCurve([-4,3]), rank 0
A9, EllipticCurve([1,10]), rank 0

A10, EllipticCurve([1,-10]), rank 0
A11, EllipticCurve([-4,-3]), rank 0
A12, EllipticCurve([-4,-3]), rank 0

*/

X:=EllipticCurve([4,80]);
g:=Generators(X)[2];
Order(g); // 0

XX:=EllipticCurve([-16,24]);
gg:=Generators(XX)[2];
Order(gg); // 0

_,phi:=IsIsogenous(XX,X);
phi(gg) eq -2*g; // true
