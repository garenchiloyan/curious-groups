
ANSWERS:={};

G3:=GL(2,Integers(3));
G9:=GL(2,Integers(9));
G27:=GL(2,Integers(27));

G13:=GL(2,Integers(13));

/* level 3*13 */

Left:=3;
Right:=13;

GLeftRight:=GL(2,Integers(Left*Right));

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

H31:=sub<G3|[0,1,2,0],[1,1,1,2],[1,0,0,2]>; /* 3.3.0.1, 3.3.0.a.1, MAXIMAL */
H32:=sub<G3|[0,1,2,1],[1,2,0,2]>; /* 3.4.0.1, 3.4.0.a.1, MAXIMAL */
H33:=sub<G3|[0,1,2,0],[1,0,0,2]>; /* 3.6.0.1, 3.6.0.b.1 */
H34:=sub<G3|[2,0,0,2],[1,0,0,2]>; /* 3.12.0.1, 3.12.0.a.1 */
H91:=sub<G9|[0,2,4,0],[1,1,4,5],[1,0,0,2]>; /* 9.9.0.1, 9.9.0.a.1 */
H92:=sub<G9|[1,1,0,1],[2,0,0,5],[1,0,0,2]>; /* 9.12.0.1, 9.12.0.a.1 */
H93:=sub<G9|[2,0,0,5],[4,2,3,4],[1,0,0,2]>; /* 9.12.0.2, 9.12.0.b.1 */
H94:=sub<G9|[2,0,0,5],[1,3,3,1],[0,2,4,0],[1,0,0,2]>; /* 9.18.0.2, 9.18.0.d.1 */
H95:=sub<G9|[1,3,0,1],[2,1,1,1],[4,2,0,5]>; /* 9.18.0.1, 9.18.0.a.1 */
H96:=sub<G9|[0,2,4,1],[4,3,5,4],[4,5,0,5]>; /* 9.27.0.1, 9.27.0.a.1, MAXIMAL */
H97:=sub<G9|[0,4,2,3],[5,1,1,4],[5,3,0,4]>; /* 9.27.0.2, 9.27.0.b.1 */
H98:=sub<G9|[1,3,0,1],[5,0,3,2],[1,0,2,2]>; /* 9.36.0.2, 9.36.0.b.1 */
H99:=sub<G9|[1,3,0,1],[5,0,3,2],[2,1,0,1]>; /* 9.36.0.1, 9.36.0.a.1 */
H910:=sub<G9|[1,3,0,1],[5,0,3,2],[4,2,0,5]>; /* 9.36.0.3, 9.36.0.c.1 */
H911:=sub<G9|[2,1,0,5],[1,2,3,2]>; /* 9.36.0.5, 9.36.0.d.2 */
H912:=sub<G9|[2,1,0,5],[4,0,3,5]>; /* 9.36.0.6, 9.36.e.1 */
H913:=sub<G9|[2,2,0,5],[2,2,3,1]>; /* 9.36.0.4, 9.36.0.d.1 */
H914:=sub<G9|[1,3,0,1],[2,2,3,8],[1,2,0,2]>; /* 9.36.0.7, 9.36.0.f.2 */
H915:=sub<G9|[1,3,0,1],[2,2,3,8],[2,1,0,1]>; /* 9.36.0.9, 9.36.0.f.1 */
H916:=sub<G9|[1,3,0,1],[5,2,3,5],[4,0,0,5]>; /* 9.36.0.8, 9.36.0.g.1 */
H271:=sub<G27|[1,1,0,1],[2,1,9,5],[1,2,3,2]>; /* 27.36.0.1, 27.36.0.a.1 */

X31:=sub<GLeftRight|[0,1,2,0],[1,1,1,2],[1,0,0,2]>; /* 3.3.0.1, 3.3.0.a.1, MAXIMAL */
X32:=sub<GLeftRight|[0,1,2,1],[1,2,0,2]>; /* 3.4.0.1, 3.4.0.a.1, MAXIMAL */
X33:=sub<GLeftRight|[0,1,2,0],[1,0,0,2]>; /* 3.6.0.1, 3.6.0.b.1 */
X34:=sub<GLeftRight|[2,0,0,2],[1,0,0,2]>; /* 3.12.0.1, 3.12.0.a.1 */

H131:=sub<G13|[2,0,0,7],[1,0,1,1],[1,0,0,2]>; /* 13.14.0.1, 13.14.0.a.1 */
H132:=sub<G13|[3,0,0,9],[4,0,1,10],[1,0,0,2]>; /* 13.28.0.2, 13.28.0.a.2 */
H133:=sub<G13|[3,0,0,9],[4,0,1,10],[2,0,0,1]>; /* 13.28.0.1, 13.28.0.a.1 */
H134:=sub<G13|[5,0,0,8],[1,0,1,1],[1,0,0,2]>; /* 13.42.0.2, 13.42.0.a.1 */
H135:=sub<G13|[5,0,0,8],[1,0,1,1],[2,0,0,1]>; /* 13.42.0.1, 13.42.0.a.2 */
H136:=sub<G13|[5,0,0,8],[1,0,1,1],[2,0,0,3]>; /* 13.42.0.3, 13.42.0.b.1 */

X131:=sub<GLeftRight|[2,0,0,7],[1,0,1,1],[1,0,0,2]>; /* 13.14.0.1, 13.14.0.a.1 */
X132:=sub<GLeftRight|[3+13,0,0,9+13],[4,0,1,10],[1,0,0,2]>; /* 13.28.0.2, 13.28.0.a.2 */
X133:=sub<GLeftRight|[3+13,0,0,9+13],[4,0,1,10],[2,0,0,1]>; /* 13.28.0.1, 13.28.0.a.1 */
X134:=sub<GLeftRight|[5,0,0,8],[1,0,1,1],[1,0,0,2]>; /* 13.42.0.2, 13.42.0.a.1 */
X135:=sub<GLeftRight|[5,0,0,8],[1,0,1,1],[2,0,0,1]>; /* 13.42.0.1, 13.42.0.a.2 */
X136:=sub<GLeftRight|[5,0,0,8],[1,0,1,1],[2,0,0,3+13]>; /* 13.42.0.3, 13.42.0.b.1 */

LeftGroups:=[X31,X32];

H131:=sub<G13|[2,0,0,7],[1,0,1,1],[1,0,0,2]>; /* 13.14.0.1, 13.14.0.a.1 */
H132:=sub<G13|[3,0,0,9],[4,0,1,10],[1,0,0,2]>; /* 13.28.0.2, 13.28.0.a.2 */
H133:=sub<G13|[3,0,0,9],[4,0,1,10],[2,0,0,1]>; /* 13.28.0.1, 13.28.0.a.1 */
H134:=sub<G13|[5,0,0,8],[1,0,1,1],[1,0,0,2]>; /* 13.42.0.2, 13.42.0.a.1 */
H135:=sub<G13|[5,0,0,8],[1,0,1,1],[2,0,0,1]>; /* 13.42.0.1, 13.42.0.a.2 */
H136:=sub<G13|[5,0,0,8],[1,0,1,1],[2,0,0,3]>; /* 13.42.0.3, 13.42.0.b.1 */

X131:=sub<GLeftRight|[2,0,0,7],[1,0,1,1],[1,0,0,2]>; /* 13.14.0.1, 13.14.0.a.1 */
X132:=sub<GLeftRight|[3+13,0,0,9+13],[4,0,1,10+13],[1,0,0,2]>; /* 13.28.0.2, 13.28.0.a.2 */
X133:=sub<GLeftRight|[3+13,0,0,9+13],[4,0,1,10+13],[2,0,0,1]>; /* 13.28.0.1, 13.28.0.a.1 */
X134:=sub<GLeftRight|[5,0,0,8],[1,0,1,1],[1,0,0,2]>; /* 13.42.0.2, 13.42.0.a.1 */
X135:=sub<GLeftRight|[5,0,0,8],[1,0,1,1],[2,0,0,1]>; /* 13.42.0.1, 13.42.0.a.2 */
X136:=sub<GLeftRight|[5,0,0,8],[1,0,1,1],[2,0,0,3+13]>; /* 13.42.0.3, 13.42.0.b.1 */

RightGroups:=[X131];

Attach("/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2.m");
load "/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2data.m";

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
g:=GL2Genus(X);
if g lt 2 then
ANSWERS:=ANSWERS join <GL2Label(LeftGroups[i]),GL2Label(RightGroups[j])>;
end if;
end if;
end for;
end for;

/* level 9*13 */

Left:=9;
Right:=13;

GLeftRight:=GL(2,Integers(Left*Right));

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

X91:=sub<GLeftRight|[0,2,4,0],[1,1,4,5],[1,0,0,2]>; /* 9.9.0.1, 9.9.0.a.1 */
X92:=sub<GLeftRight|[1,1,0,1],[2,0,0,5],[1,0,0,2]>; /* 9.12.0.1, 9.12.0.a.1 */
X93:=sub<GLeftRight|[2,0,0,5],[4,2,3,4],[1,0,0,2]>; /* 9.12.0.2, 9.12.0.b.1 */
X94:=sub<GLeftRight|[2,0,0,5],[1,3,3,1],[0,2,4,0],[1,0,0,2]>; /* 9.18.0.2, 9.18.0.d.1 */
X95:=sub<GLeftRight|[1,3,0,1],[2,1,1,1],[4,2,0,5]>; /* 9.18.0.1, 9.18.0.a.1 */
X96:=sub<GLeftRight|[0,2,4,1],[4,3,5,4],[4,5,0,5]>; /* 9.27.0.1, 9.27.0.a.1, MAXIMAL */
X97:=sub<GLeftRight|[0,4,2,3],[5,1,1,4],[5,3,0,4]>; /* 9.27.0.2, 9.27.0.b.1 */
X98:=sub<GLeftRight|[1,3,0,1],[5,0,3,2],[1,0,2,2]>; /* 9.36.0.2, 9.36.0.b.1 */
X99:=sub<GLeftRight|[1,3,0,1],[5,0,3,2],[2,1,0,1]>; /* 9.36.0.1, 9.36.0.a.1 */
X910:=sub<GLeftRight|[1,3,0,1],[5,0,3,2],[4,2,0,5]>; /* 9.36.0.3, 9.36.0.c.1 */
X911:=sub<GLeftRight|[2,1,0,5],[1,2,3,2]>; /* 9.36.0.5, 9.36.0.d.2 */
X912:=sub<GLeftRight|[2,1,0,5],[4,0,3,5]>; /* 9.36.0.6, 9.36.e.1 */
X913:=sub<GLeftRight|[2,2,0,5],[2,2,3,1]>; /* 9.36.0.4, 9.36.0.d.1 */
X914:=sub<GLeftRight|[1,3,0,1],[2,2,3,8],[1,2,0,2]>; /* 9.36.0.7, 9.36.0.f.2 */
X915:=sub<GLeftRight|[1,3,0,1],[2,2,3,8],[2,1,0,1]>; /* 9.36.0.9, 9.36.0.f.1 */
X916:=sub<GLeftRight|[1,3,0,1],[5,2,3,5],[4,0,0,5]>; /* 9.36.0.8, 9.36.0.g.1 */

LeftGroups:=[X96];

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
g:=GL2Genus(X);
if g lt 2 then
ANSWERS:=ANSWERS join <GL2Label(LeftGroups[i]),GL2Label(RightGroups[j])>;
end if;
end if;
end for;
end for;

ANSWERS;

