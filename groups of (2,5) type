ANSWERS:={};

G2:=GL(2,Integers(2));
G4:=GL(2,Integers(4));
G8:=GL(2,Integers(8));
G16:=GL(2,Integers(16));
G32:=GL(2,Integers(32));
G5:=GL(2,Integers(5));
G25:=GL(2,Integers(25));

Attach("/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2.m");
load "/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2data.m";

/* level 2*25 */

Left:=2;
Right:=25;

GLeftRight:=GL(2,Integers(Left*Right));

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

/* #1.) 2.2.0.a.1, MAXIMAL */ H21:=sub<G2|[0,1,1,1]>;
/* #2.) 2.3.0.a.1, MAXIMAL */ H22:=sub<G2|[0,1,1,0]>;
/* #3.) 2.2.0.a.1 */ H23:=sub<G2|[]>;

H251:=sub<G25|[2,2,0,13],[4,1,3,1],[2,3,0,6]>; /* 25.30.0.1, 25.30.0.a.1 */
H252:=sub<G25|[9,10,0,14],[0,7,7,2],[2,8,0,1]>; /* 25.60.0.1, 25.60.0.a.1 */
H253:=sub<G25|[9,10,0,14],[0,7,7,2],[4,1,0,7]>; /* 25.60.0.2, 25.60.0.a.2 */

X251:=sub<GLeftRight|[2+25,2,0,13],[4,1,3,1],[2+25,3,0,6+25]>; /* 25.30.0.1, 25.30.0.a.1 */
X252:=sub<GLeftRight|[9,10,0,14+25],[0,7,7,2],[2+25,8,0,1]>; /* 25.60.0.1, 25.60.0.a.1 */
X253:=sub<GLeftRight|[9,10,0,14+25],[0,7,7,2],[4+25,1,0,7]>; /* 25.60.0.2, 25.60.0.a.2 */

LeftGroups:=[H21,H22];

RightGroups:=[X251,X252,X253];

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
g:=GL2Genus(X);
if g lt 2 then
ANSWERS:=ANSWERS join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

#ANSWERS; // no hits

/* level 4*25 */

Left:=4;
Right:=25;

GLeftRight:=GL(2,Integers(Left*Right));

/* #1.) 4.2.0.a.1, MAXIMAL */ H41:=sub<G4|[3,2,1,3],[3,3,2,3]>;
/* #2.) 4.4.0.a.1, MAXIMAL */ H42:=sub<G4|[0,1,1,0],[1,3,2,3]>;
/* #3.) 4.6.0.a.1 */ H43:=sub<G4|[3,0,0,3],[3,0,2,3],[3,1,0,1]>;
/* #4.) 4.6.0.b.1 */ H44:=sub<G4|[1,1,2,1],[1,3,0,1]>;
/* #5.) 4.6.0.c.1 */ H45:=sub<G4|[1,3,0,3],[3,3,0,1],[3,3,0,3]>;
/* #6.) 4.6.0.d.1 */ H46:=sub<G4|[3,1,2,3],[3,3,2,1]>;
/* #7.) 4.6.0.e.1 */ H47:=sub<G4|[1,0,2,3],[1,1,0,3],[3,1,2,1]>;
/* #8.) 4.8.0.b.1 */ H48:=sub<G4|[0,3,1,1],[1,1,0,3]>;
/* #9.) 4.12.0.a.1 */ H49:=sub<G4|[1,2,0,1],[3,0,0,3],[3,0,2,1]>;
/* #10.) 4.12.0.b.1 */ H410:=sub<G4|[1,2,0,1],[3,0,0,1],[3,2,0,3]>;
/* #11.) 4.24.0.c.1 */ H411:=sub<G4|[3,0,0,3],[3,3,0,1]>;
/* #12.) 4.24.0.b.1 */ H412:=sub<G4|[1,0,0,3],[3,0,0,3]>;
/* #13.) 4.12.0.f.1 */ H413:=sub<G4|[0,3,3,0],[1,0,0,3]>;
/* #14.) 4.12.0.e.1 */ H414:=sub<G4|[1,0,3,3],[3,2,3,1]>;
/* #15.) 4.12.0.d.1 */ H415:=sub<G4|[1,2,0,1],[3,2,0,3],[3,3,0,1]>;

/* #1.) 4.2.0.a.1, MAXIMAL */ X41:=sub<GLeftRight|[3,2,1,3],[3,3,2,3]>;
/* #2.) 4.4.0.a.1, MAXIMAL */ X42:=sub<GLeftRight|[0,1,1,0],[1,3,2,3]>;
/* #3.) 4.6.0.a.1 */ X43:=sub<GLeftRight|[3,0,0,3],[3,0,2,3],[3,1,0,1]>;
/* #4.) 4.6.0.b.1 */ X44:=sub<GLeftRight|[1,1,2,1],[1,3,0,1]>;
/* #5.) 4.6.0.c.1 */ X45:=sub<GLeftRight|[1,3,0,3],[3,3,0,1],[3,3,0,3]>;
/* #6.) 4.6.0.d.1 */ X46:=sub<GLeftRight|[3,1,2,3],[3,3,2,1]>;
/* #7.) 4.6.0.e.1 */ X47:=sub<GLeftRight|[1,0,2,3],[1,1,0,3],[3,1,2,1]>;
/* #8.) 4.8.0.b.1 */ X48:=sub<GLeftRight|[0,3,1,1],[1,1,0,3]>;
/* #9.) 4.12.0.a.1 */ X49:=sub<GLeftRight|[1,2,0,1],[3,0,0,3],[3,0,2,1]>;
/* #10.) 4.12.0.b.1 */ X410:=sub<GLeftRight|[1,2,0,1],[3,0,0,1],[3,2,0,3]>;
/* #11.) 4.24.0.c.1 */ X411:=sub<GLeftRight|[3,0,0,3],[3,3,0,1]>;
/* #12.) 4.24.0.b.1 */ X412:=sub<GLeftRight|[1,0,0,3],[3,0,0,3]>;
/* #13.) 4.12.0.f.1 */ X413:=sub<GLeftRight|[0,3,3,0],[1,0,0,3]>;
/* #14.) 4.12.0.e.1 */ X414:=sub<GLeftRight|[1,0,3,3],[3,2,3,1]>;
/* #15.) 4.12.0.d.1 */ X415:=sub<GLeftRight|[1,2,0,1],[3,2,0,3],[3,3,0,1]>;

H251:=sub<G25|[2,2,0,13],[4,1,3,1],[2,3,0,6]>; /* 25.30.0.1, 25.30.0.a.1 */
H252:=sub<G25|[9,10,0,14],[0,7,7,2],[2,8,0,1]>; /* 25.60.0.1, 25.60.0.a.1 */
H253:=sub<G25|[9,10,0,14],[0,7,7,2],[4,1,0,7]>; /* 25.60.0.2, 25.60.0.a.2 */

X251:=sub<GLeftRight|[2+25,2,0,13],[4,1,3,1],[2+25,3,0,6+25]>; /* 25.30.0.1, 25.30.0.a.1 */
X252:=sub<GLeftRight|[9,10,0,14+25],[0,7,7,2],[2+25,8,0,1]>; /* 25.60.0.1, 25.60.0.a.1 */
X253:=sub<GLeftRight|[9,10,0,14+25],[0,7,7,2],[4+25,1,0,7]>; /* 25.60.0.2, 25.60.0.a.2 */

LeftGroups:=[X41,X42];
RightGroups:=[X251,X252,X253];

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
g:=GL2Genus(X);
if g lt 2 then
ANSWERS:=ANSWERS join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

#ANSWERS; // no hits

/* level 8*25 */

Left:=8;
Right:=25;
GLeftRight:=GL(2,Integers(Left*Right));

/* #1.) 8.2.0.a.1, MAXIMAL */ H81:=sub<G8|[6,5,3,7],[6,7,7,4]>;
/* #2.) 8.2.0.b.1, MAXIMAL */ H82:=sub<G8|[5,2,1,1],[5,7,7,0]>;
/* #3.) 8.6.0.a.1 */ H83:=sub<G8|[3,0,2,1],[3,6,0,1],[7,1,4,7]>;
/* #4.) 8.6.0.b.1 */ H84:=sub<G8|[3,1,2,7],[3,1,4,3],[3,4,4,5]>;
/* #5.) 8.6.0.c.1 */ H85:=sub<G8|[1,3,6,5],[3,5,4,1],[5,3,2,7]>;
/* #6.) 8.6.0.d.1 */ H86:=sub<G8|[1,5,6,3],[3,0,2,7],[7,1,2,7]>;
/* #7.) 8.6.0.e.1 */ H87:=sub<G8|[1,6,2,3],[7,5,6,1],[7,7,2,7]>;
/* #8.) 8.6.0.f.1 */ H88:=sub<G8|[1,4,6,3],[3,1,6,7],[5,4,4,3]>;
/* #9.) 8.8.0.a.1 */ H89:=sub<G8|[4,3,3,5],[4,7,5,0]>;
/* #10.) 8.12.0.a.1 */ H810:=sub<G8|[3,4,4,3],[5,0,6,7],[5,2,0,3],[7,2,0,7]>;
/* #11.) 8.12.0.b.1 */ H811:=sub<G8|[3,0,6,7],[3,2,2,1],[5,2,0,5],[5,4,6,3]>;
/* #12.) 8.12.0.d.1 */ H812:=sub<G8|[3,7,4,1],[5,3,0,3],[7,4,4,5],[7,7,0,1]>;
/* #13.) 8.12.0.f.1 */ H813:=sub<G8|[1,1,0,7],[1,7,2,3],[3,2,2,5],[5,3,4,7]>;
/* #14.) 8.12.0.g.1 */ H814:=sub<G8|[1,7,2,1],[5,6,6,5],[7,4,4,7]>;
/* #15.) 8.12.0.h.1 */ H815:=sub<G8|[3,3,0,7],[5,7,2,5],[7,0,0,7]>;
/* #16.) 8.12.0.i.1 */ H816:=sub<G8|[3,0,0,5],[5,3,6,3],[7,0,4,1]>;
/* #17.) 8.12.0.k.1 */ H817:=sub<G8|[1,5,0,5],[3,7,4,5],[5,2,4,3],[7,1,4,7]>;
/* #18.) 8.12.0.l.1 */ H818:=sub<G8|[1,0,4,1],[1,7,4,7],[3,1,6,1],[3,6,6,1]>;
/* #19.) 8.12.0.m.1 */ H819:=sub<G8|[1,6,0,7],[5,1,0,7],[5,1,4,7],[7,1,4,5]>;
/* #20.) 8.12.0.n.1 */ H820:=sub<G8|[1,0,0,7],[1,4,0,3],[3,5,0,1],[5,5,0,7],[7,3,0,1]>;
/* #21.) 8.12.0.o.1 */ H821:=sub<G8|[1,4,0,5],[3,6,0,5],[3,6,0,7],[5,1,4,5]>;
/* #22.) 8.12.0.p.1 */ H822:=sub<G8|[1,4,4,5],[1,7,0,7],[3,1,0,5],[5,0,0,7]>;
/* #23.) 8.12.0.q.1 */ H823:=sub<G8|[3,3,6,1],[3,4,2,5],[5,5,0,7],[7,5,4,5]>;
/* #24.) 8.12.0.r.1 */ H824:=sub<G8|[1,0,0,5],[5,5,2,3],[7,3,0,5],[7,6,0,7]>;
/* #25.) 8.12.0.s.1 */ H825:=sub<G8|[1,3,2,3],[5,0,6,3],[5,1,6,3],[7,7,6,5]>;
/* #26.) 8.12.0.t.1 */ H826:=sub<G8|[1,2,0,5],[5,2,6,7],[5,3,4,3],[7,1,0,5]>;
/* #27.) 8.12.0.u.1 */ H827:=sub<G8|[1,6,2,7],[3,1,2,1],[5,3,4,7],[5,5,4,7]>;
/* #28.) 8.12.0.v.1 */ H828:=sub<G8|[1,3,2,3],[3,5,2,1],[5,6,0,5],[7,3,4,1]>;
/* #29.) 8.12.0.w.1 */ H829:=sub<G8|[5,1,6,1],[5,1,6,5],[7,1,6,1],[7,7,2,7]>;
/* #30.) 8.12.0.x.1 */ H830:=sub<G8|[3,4,0,5],[7,1,6,7],[7,6,0,5]>;
/* #31.) 8.12.0.y.1 */ H831:=sub<G8|[1,4,2,3],[1,5,4,3],[1,5,6,7],[3,1,0,5]>;
/* #32.) 8.12.0.z.1 */ H832:=sub<G8|[1,0,4,5],[1,0,6,7],[1,3,2,7],[5,1,4,3]>;
/* #33.) 8.16.0.a.1 */ H833:=sub<G8|[4,5,1,4],[4,5,3,7],[5,3,5,2]>;
/* #34.) 8.24.0.a.1 */ H834:=sub<G8|[3,2,6,5],[5,6,2,3],[5,6,6,3],[7,0,2,1]>;
/* #35.) 8.24.0.ba.1 */ H835:=sub<G8|[1,1,0,7],[3,7,0,7],[5,2,0,3],[7,1,0,1]>;
/* #36.) 8.24.0.ba.2 */ H836:=sub<G8|[3,0,0,5],[5,3,0,5],[7,2,0,5],[7,7,0,3]>;
/* #37.) 8.24.0.bb.1 */ H837:=sub<G8|[1,2,0,3],[1,4,0,5],[3,1,0,7],[5,5,0,7]>;
/* #38.) 8.24.0.bb.2 */ H838:=sub<G8|[1,1,0,5],[3,5,0,3],[5,1,0,5],[5,3,0,3]>;
/* #39.) 8.24.0.bc.1 */ H839:=sub<G8|[1,3,0,3],[1,5,4,3],[7,4,6,1]>;
/* #40.) 8.24.0.be.1 */ H840:=sub<G8|[1,3,0,3],[5,1,6,7],[5,2,6,3]>;
/* #41.) 8.24.0.bf.1 */ H841:=sub<G8|[3,1,0,1],[5,0,0,1],[5,3,0,3],[5,7,2,3]>;
/* #42.) 8.24.0.bh.1 */ H842:=sub<G8|[1,3,6,7],[3,5,6,5],[5,4,6,3]>;
/* #43.) 8.24.0.bi.1 */ H843:=sub<G8|[1,1,2,7],[3,7,0,1],[5,3,0,3]>;
/* #44.) 8.24.0.bj.1 */ H844:=sub<G8|[3,2,6,1],[3,3,6,5],[7,4,6,5]>;
/* #45.) 8.24.0.bl.1 */ H845:=sub<G8|[1,3,2,7],[3,3,2,1],[7,6,0,5]>;
/* #46.) 8.24.0.bl.2 */ H846:=sub<G8|[3,6,0,1],[5,4,0,1],[7,3,2,7]>;
/* #47.) 8.24.0.bn.1 */ H847:=sub<G8|[5,3,4,3],[7,0,2,5],[7,1,4,5]>;
/* #48.) 8.24.0.bo.1 */ H848:=sub<G8|[1,1,0,7],[1,5,6,7],[1,6,2,7]>;
/* #49.) 8.24.0.bp.1 */ H849:=sub<G8|[1,1,0,7],[5,3,4,3],[5,5,6,7]>;
/* #50.) 8.24.0.bq.1 */ H850:=sub<G8|[1,5,4,3],[1,6,0,5],[5,7,6,3]>;
/* #51.) 8.24.0.bs.1 */ H851:=sub<G8|[1,4,0,1],[1,6,2,7],[7,4,4,3],[7,5,0,1]>;
/* #52.) 8.24.0.bt.1 */ H852:=sub<G8|[1,5,6,7],[5,1,2,3],[5,5,6,3],[7,0,6,5]>;
/* #53.) 8.24.0.c.1 */ H853:=sub<G8|[1,6,4,3],[3,6,0,1],[5,2,0,7],[5,4,4,3],[7,4,4,1]>;
/* #54.) 8.24.0.d.1 */ H854:=sub<G8|[1,4,4,1],[1,6,0,3],[1,6,4,7],[3,6,0,3],[5,2,4,1]>;
/* #55.) 8.24.0.d.2 */ H855:=sub<G8|[1,2,4,5],[3,2,0,3],[5,2,4,5],[5,4,0,3],[7,6,4,3]>;
/* #56.) 8.24.0.e.1 */ H856:=sub<G8|[1,0,4,1],[1,2,0,1],[5,0,4,1],[7,0,0,7],[7,4,4,1]>;
/* #57.) 8.24.0.e.2 */ H857:=sub<G8|[1,4,4,1],[3,2,0,1],[3,2,0,7],[5,2,0,7],[5,6,0,5]>;
/* #58.) 8.24.0.f.1 */ H858:=sub<G8|[1,2,6,3],[3,4,2,5],[5,4,6,3],[7,2,6,1]>;
/* #59.) 8.24.0.g.1 */ H859:=sub<G8|[3,6,0,5],[7,2,0,3],[7,4,0,3],[7,6,6,1]>;
/* #60.) 8.24.0.h.1 */ H860:=sub<G8|[1,4,0,7],[3,2,0,3],[3,4,0,5],[3,6,4,7],[5,4,4,7]>;
/* #61.) 8.24.0.i.1 */ H861:=sub<G8|[3,4,0,7],[3,6,0,7],[5,0,0,3],[5,0,0,7],[5,2,0,1]>;
/* #62.) 8.24.0.k.1 */ H862:=sub<G8|[1,4,0,3],[5,4,0,7],[7,1,0,1],[7,4,0,7]>;
/* #63.) 8.24.0.m.1 */ H863:=sub<G8|[5,1,2,3],[5,4,4,5],[5,7,4,7]>;
/* #64.) 8.24.0.n.1 */ H864:=sub<G8|[1,0,4,1],[5,5,2,3],[7,0,6,5],[7,3,2,5]>;
/* #65.) 8.24.0.o.1 */ H865:=sub<G8|[1,3,0,7],[1,6,2,7],[3,3,0,5]>;
/* #66.) 8.24.0.q.1 */ H866:=sub<G8|[1,0,0,5],[1,5,0,7],[5,4,0,1],[5,7,0,3],[7,7,0,1]>;
/* #67.) 8.24.0.r.1 */ H867:=sub<G8|[5,7,0,7],[7,1,0,5],[7,2,0,1],[7,4,0,7]>;
/* #68.) 8.24.0.s.1 */ H868:=sub<G8|[1,1,6,3],[1,4,6,7],[1,6,6,3]>;
/* #69.) 8.24.0.t.1 */ H869:=sub<G8|[3,1,0,1],[3,6,0,7],[7,0,0,7],[7,2,4,3]>;
/* #70.) 8.24.0.v.1 */ H870:=sub<G8|[1,7,4,7],[1,7,6,7],[7,5,6,5]>;
/* #71.) 8.24.0.x.1 */ H871:=sub<G8|[1,5,0,7],[3,6,4,7],[5,7,4,3],[7,6,0,7]>;
/* #72.) 8.24.0.y.1 */ H872:=sub<G8|[1,5,4,7],[3,5,4,5],[5,3,4,5]>;
/* #73.) 8.24.0.z.1 */ H873:=sub<G8|[1,7,4,7],[7,6,0,7],[7,7,2,5]>;
/* #74.) 8.48.0.b.1 */ H874:=sub<G8|[1,0,4,1],[1,4,0,1],[5,0,0,1],[7,4,4,7],[7,6,0,1]>;
/* #75.) 8.48.0.b.2 */ H875:=sub<G8|[1,0,4,1],[1,4,0,1],[3,2,0,1],[7,4,0,3],[7,4,4,7]>;
/* #76.) 8.48.0.c.1 */ H876:=sub<G8|[1,0,4,1],[1,4,0,1],[7,4,0,1],[7,4,0,3],[7,4,4,7]>;
/* #77.) 8.48.0.e.1 */ H877:=sub<G8|[1,0,4,1],[1,2,4,7],[3,0,4,1],[7,6,0,1]>;
/* #78.) 8.48.0.e.2 */ H878:=sub<G8|[1,0,4,1],[3,2,0,5],[3,6,4,7],[7,4,0,5]>;
/* #79.) 8.48.0.f.1 */ H879:=sub<G8|[3,2,0,1],[3,2,4,1],[5,6,0,1],[7,0,0,7]>;
/* #80.) 8.48.0.h.1 */ H880:=sub<G8|[1,6,0,7],[3,2,4,7],[3,4,0,5],[5,6,0,5]>;
/* #81.) 8.48.0.h.2 */ H881:=sub<G8|[1,4,4,5],[5,6,0,5],[7,4,0,7],[7,4,4,5]>;
/* #82.) 8.48.0.i.1 */ H882:=sub<G8|[3,2,0,1],[5,2,0,5],[5,2,0,7],[7,4,4,1]>;
/* #83.) 8.48.0.k.1 */ H883:=sub<G8|[1,4,0,3],[1,6,0,7],[5,6,0,7],[7,2,0,3]>;
/* #84.) 8.48.0.k.2 */ H884:=sub<G8|[3,6,0,3],[5,2,0,1],[5,2,0,7],[7,4,0,1]>;
/* #85.) 8.48.0.l.1 */ H885:=sub<G8|[1,2,0,7],[1,4,0,7],[5,4,0,1],[7,6,0,1]>;
/* #86.) 8.48.0.l.2 */ H886:=sub<G8|[7,0,0,5],[7,4,0,7],[7,6,0,1],[7,6,0,7]>;
/* #87.) 8.48.0.m.1 */ H887:=sub<G8|[1,6,0,3],[7,2,0,7],[7,3,0,1]>;
/* #88.) 8.48.0.m.2 */ H888:=sub<G8|[5,3,0,3],[5,4,0,7],[7,5,0,3]>;
/* #89.) 8.48.0.n.1 */ H889:=sub<G8|[1,5,0,7],[5,2,0,1],[5,4,0,1],[7,2,0,7]>;
/* #90.) 8.48.0.n.2 */ H890:=sub<G8|[1,6,0,5],[3,1,0,5],[5,1,0,3],[5,5,0,7]>;
/* #91.) 8.48.0.p.1 */ H891:=sub<G8|[1,5,0,3],[1,6,0,7],[7,3,0,3]>;
/* #92.) 8.48.0.q.1 */ H892:=sub<G8|[1,3,0,7],[1,7,2,3],[7,5,6,1]>;
/* #93.) 8.48.0.q.2 */ H893:=sub<G8|[3,4,0,7],[5,4,2,3],[5,7,0,3]>;

/* #1.) 8.2.0.a.1, MAXIMAL */ X81:=sub<GLeftRight|[6,5,3,7],[6,7,7,4+8]>;
/* #2.) 8.2.0.b.1, MAXIMAL */ X82:=sub<GLeftRight|[5,2,1,1],[5,7,7,0]>;
/* #3.) 8.6.0.a.1 */ X83:=sub<GLeftRight|[3,0,2,1],[3,6,0,1],[7,1+8,4,7]>;
/* #4.) 8.6.0.b.1 */ X84:=sub<GLeftRight|[3,1,2,7],[3,1,4,3+8],[3,4,4,5]>;
/* #5.) 8.6.0.c.1 */ X85:=sub<GLeftRight|[1,3,6,5],[3,5,4,1],[5,3,2,7]>;
/* #6.) 8.6.0.d.1 */ X86:=sub<GLeftRight|[1,5,6,3],[3,0,2,7],[7,1,2,7]>;
/* #7.) 8.6.0.e.1 */ X87:=sub<GLeftRight|[1,6,2,3],[7,5,6,1],[7,7,2+8,7]>;
/* #8.) 8.6.0.f.1 */ X88:=sub<GLeftRight|[1,4,6,3],[3,1+8,6,7],[5,4,4,3]>;
/* #9.) 8.8.0.a.1 */ X89:=sub<GLeftRight|[4,3,3,5],[4,7,5+8,0]>;
/* #10.) 8.12.0.a.1 */ X810:=sub<GLeftRight|[3,4,4,3],[5+8,0,6,7],[5+8,2,0,3],[7,2,0,7]>;
/* #11.) 8.12.0.b.1 */ X811:=sub<GLeftRight|[3,0,6,7],[3,2,2,1],[5+8,2,0,5+8],[5,4,6,3]>;
/* #12.) 8.12.0.d.1 */ X812:=sub<GLeftRight|[3,7,4,1+8],[5+8,3,0,3],[7,4,4,5],[7,7,0,1]>;
/* #13.) 8.12.0.f.1 */ X813:=sub<GLeftRight|[1,1,0,7],[1,7,2,3],[3,2,2,5],[5,3,4,7]>;
/* #14.) 8.12.0.g.1 */ X814:=sub<GLeftRight|[1,7,2,1],[5,6,6,5],[7,4,4,7]>;
/* #15.) 8.12.0.h.1 */ X815:=sub<GLeftRight|[3,3,0,7],[5,7,2,5],[7,0,0,7]>;
/* #16.) 8.12.0.i.1 */ X816:=sub<GLeftRight|[3,0,0,5+8],[5,3,6,3],[7,0,4,1]>;
/* #17.) 8.12.0.k.1 */ X817:=sub<GLeftRight|[1,5,0,5+8],[3,7,4,5],[5,2,4,3],[7,1+8,4,7]>;
/* #18.) 8.12.0.l.1 */ X818:=sub<GLeftRight|[1,0,4,1],[1,7,4,7],[3,1,6,1],[3,6,6,1]>;
/* #19.) 8.12.0.m.1 */ X819:=sub<GLeftRight|[1,6,0,7],[5+8,1,0,7],[5,1,4,7],[7,1,4,5]>;
/* #20.) 8.12.0.n.1 */ X820:=sub<GLeftRight|[1,0,0,7],[1,4,0,3],[3,5,0,1],[5+8,5,0,7],[7,3,0,1]>;
/* #21.) 8.12.0.o.1 */ X821:=sub<GLeftRight|[1,4,0,5+8],[3,6,0,5+8],[3,6,0,7],[5,1,4,5]>;
/* #22.) 8.12.0.p.1 */ X822:=sub<GLeftRight|[1,4,4,5],[1,7,0,7],[3,1,0,5+8],[5+8,0,0,7]>;
/* #23.) 8.12.0.q.1 */ X823:=sub<GLeftRight|[3,3,6,1+8],[3,4,2,5],[5+8,5,0,7],[7,5,4,5+8]>;
/* #24.) 8.12.0.r.1 */ X824:=sub<GLeftRight|[1,0,0,5+8],[5+8,5,2,3],[7,3,0,5+8],[7,6,0,7]>;
/* #25.) 8.12.0.s.1 */ X825:=sub<GLeftRight|[1,3,2,3],[5+8,0,6,3],[5,1,6,3],[7,7,6,5]>;
/* #26.) 8.12.0.t.1 */ X826:=sub<GLeftRight|[1,2,0,5+8],[5,2,6,7],[5,3,4,3],[7,1,0,5+8]>;
/* #27.) 8.12.0.u.1 */ X827:=sub<GLeftRight|[1,6,2+8,7],[3,1,2,1],[5,3,4,7],[5+8,5,4,7]>;
/* #28.) 8.12.0.v.1 */ X828:=sub<GLeftRight|[1,3,2,3],[3,5,2,1],[5+8,6,0,5+8],[7,3,4,1+8]>;
/* #29.) 8.12.0.w.1 */ X829:=sub<GLeftRight|[5,1,6,1],[5,1,6,5],[7,1,6,1],[7,7,2+8,7]>;
/* #30.) 8.12.0.x.1 */ X830:=sub<GLeftRight|[3,4,0,5+8],[7,1,6,7],[7,6,0,5+8]>;
/* #31.) 8.12.0.y.1 */ X831:=sub<GLeftRight|[1,4,2,3+8],[1,5,4,3],[1,5,6,7],[3,1,0,5+8]>;
/* #32.) 8.12.0.z.1 */ X832:=sub<GLeftRight|[1,0,4,5+8],[1,0,6,7],[1,3,2,7],[5,1,4,3]>;
/* #33.) 8.16.0.a.1 */ X833:=sub<GLeftRight|[4,5,1,4],[4,5,3,7],[5+8,3,5,2]>;
/* #34.) 8.24.0.a.1 */ X834:=sub<GLeftRight|[3,2,6,5],[5,6,2,3],[5,6,6,3],[7,0,2,1]>;
/* #35.) 8.24.0.ba.1 */ X835:=sub<GLeftRight|[1,1,0,7],[3,7,0,7],[5+8,2,0,3],[7,1,0,1]>;
/* #36.) 8.24.0.ba.2 */ X836:=sub<GLeftRight|[3,0,0,5+8],[5+8,3,0,5+8],[7,2,0,5+8],[7,7,0,3]>;
/* #37.) 8.24.0.bb.1 */ X837:=sub<GLeftRight|[1,2,0,3],[1,4,0,5+8],[3,1,0,7],[5+8,5,0,7]>;
/* #38.) 8.24.0.bb.2 */ X838:=sub<GLeftRight|[1,1,0,5+8],[3,5,0,3],[5+8,1,0,5+8],[5+8,3,0,3]>;
/* #39.) 8.24.0.bc.1 */ X839:=sub<GLeftRight|[1,3,0,3],[1,5,4,3],[7,4,6,1]>;
/* #40.) 8.24.0.be.1 */ X840:=sub<GLeftRight|[1,3,0,3],[5,1,6,7],[5,2,6,3]>;
/* #41.) 8.24.0.bf.1 */ X841:=sub<GLeftRight|[3,1,0,1],[5+8,0,0,1],[5+8,3,0,3],[5,7,2,3]>;
/* #42.) 8.24.0.bh.1 */ X842:=sub<GLeftRight|[1,3,6,7],[3,5,6,5+8],[5,4,6,3]>;
/* #43.) 8.24.0.bi.1 */ X843:=sub<GLeftRight|[1,1,2,7+8],[3,7,0,1],[5+8,3,0,3]>;
/* #44.) 8.24.0.bj.1 */ X844:=sub<GLeftRight|[3,2,6,1],[3,3,6,5],[7,4,6,5]>;
/* #45.) 8.24.0.bl.1 */ X845:=sub<GLeftRight|[1,3,2,7],[3,3,2,1],[7,6,0,5+8]>;
/* #46.) 8.24.0.bl.2 */ X846:=sub<GLeftRight|[3,6,0,1],[5+8,4,0,1],[7,3,2,7]>;
/* #47.) 8.24.0.bn.1 */ X847:=sub<GLeftRight|[5,3,4,3],[7,0,2,5+8],[7,1,4,5]>;
/* #48.) 8.24.0.bo.1 */ X848:=sub<GLeftRight|[1,1,0,7],[1,5,6,7],[1,6,2+8,7]>;
/* #49.) 8.24.0.bp.1 */ X849:=sub<GLeftRight|[1,1,0,7],[5,3,4,3],[5+8,5,6,7]>;
/* #50.) 8.24.0.bq.1 */ X850:=sub<GLeftRight|[1,5,4,3],[1,6,0,5+8],[5,7,6,3]>;
/* #51.) 8.24.0.bs.1 */ X851:=sub<GLeftRight|[1,4,0,1],[1,6,2+8,7],[7,4,4,3+8],[7,5,0,1]>;
/* #52.) 8.24.0.bt.1 */ X852:=sub<GLeftRight|[1,5,6,7],[5,1,2,3],[5+8,5,6,3],[7,0,6,5+8]>;
/* #53.) 8.24.0.c.1 */ X853:=sub<GLeftRight|[1,6,4,3],[3,6,0,1],[5+8,2,0,7],[5,4,4,3],[7,4,4,1]>;
/* #54.) 8.24.0.d.1 */ X854:=sub<GLeftRight|[1,4,4,1+8],[1,6,0,3],[1,6,4,7],[3,6,0,3],[5,2,4,1]>;
/* #55.) 8.24.0.d.2 */ X855:=sub<GLeftRight|[1,2,4,5],[3,2,0,3],[5,2,4,5],[5+8,4,0,3],[7,6,4,3]>;
/* #56.) 8.24.0.e.1 */ X856:=sub<GLeftRight|[1,0,4,1],[1,2,0,1],[5+8,0,4,1],[7,0,0,7],[7,4,4,1]>;
/* #57.) 8.24.0.e.2 */ X857:=sub<GLeftRight|[1,4,4,1+8],[3,2,0,1],[3,2,0,7],[5+8,2,0,7],[5+8,6,0,5+8]>;
/* #58.) 8.24.0.f.1 */ X858:=sub<GLeftRight|[1,2,6,3],[3,4,2,5],[5,4,6,3],[7,2,6,1+8]>;
/* #59.) 8.24.0.g.1 */ X859:=sub<GLeftRight|[3,6,0,5+8],[7,2,0,3],[7,4,0,3],[7,6,6,1]>;
/* #60.) 8.24.0.h.1 */ X860:=sub<GLeftRight|[1,4,0,7],[3,2,0,3],[3,4,0,5+8],[3,6,4,7],[5,4,4,7]>;
/* #61.) 8.24.0.i.1 */ X861:=sub<GLeftRight|[3,4,0,7],[3,6,0,7],[5+8,0,0,3],[5+8,0,0,7],[5+8,2,0,1]>;
/* #62.) 8.24.0.k.1 */ X862:=sub<GLeftRight|[1,4,0,3],[5+8,4,0,7],[7,1,0,1],[7,4,0,7]>;
/* #63.) 8.24.0.m.1 */ X863:=sub<GLeftRight|[5,1,2,3],[5,4,4,5],[5,7,4,7]>;
/* #64.) 8.24.0.n.1 */ X864:=sub<GLeftRight|[1,0,4,1],[5+8,5,2,3],[7,0,6,5+8],[7,3,2,5]>;
/* #65.) 8.24.0.o.1 */ X865:=sub<GLeftRight|[1,3,0,7],[1,6,2+8,7],[3,3,0,5+8]>;
/* #66.) 8.24.0.q.1 */ X866:=sub<GLeftRight|[1,0,0,5+8],[1,5,0,7],[5+8,4,0,1],[5+8,7,0,3],[7,7,0,1]>;
/* #67.) 8.24.0.r.1 */ X867:=sub<GLeftRight|[5+8,7,0,7],[7,1,0,5+8],[7,2,0,1],[7,4,0,7]>;
/* #68.) 8.24.0.s.1 */ X868:=sub<GLeftRight|[1,1,6,3],[1,4,6,7],[1,6,6,3]>;
/* #69.) 8.24.0.t.1 */ X869:=sub<GLeftRight|[3,1,0,1],[3,6,0,7],[7,0,0,7],[7,2,4,3]>;
/* #70.) 8.24.0.v.1 */ X870:=sub<GLeftRight|[1,7,4,7],[1+8,7,6,7],[7,5,6,5+8]>;
/* #71.) 8.24.0.x.1 */ X871:=sub<GLeftRight|[1,5,0,7],[3,6,4,7],[5,7,4,3],[7,6,0,7]>;
/* #72.) 8.24.0.y.1 */ X872:=sub<GLeftRight|[1,5,4,7],[3,5,4,5+8],[5,3,4,5]>;
/* #73.) 8.24.0.z.1 */ X873:=sub<GLeftRight|[1,7,4,7],[7,6,0,7],[7,7,2,5]>;
/* #74.) 8.48.0.b.1 */ X874:=sub<GLeftRight|[1,0,4,1],[1,4,0,1],[5+8,0,0,1],[7,4,4,7],[7,6,0,1]>;
/* #75.) 8.48.0.b.2 */ X875:=sub<GLeftRight|[1,0,4,1],[1,4,0,1],[3,2,0,1],[7,4,0,3],[7,4,4,7]>;
/* #76.) 8.48.0.c.1 */ X876:=sub<GLeftRight|[1,0,4,1],[1,4,0,1],[7,4,0,1],[7,4,0,3],[7,4,4,7]>;
/* #77.) 8.48.0.e.1 */ X877:=sub<GLeftRight|[1,0,4,1],[1,2,4,7],[3,0,4,1],[7,6,0,1]>;
/* #78.) 8.48.0.e.2 */ X878:=sub<GLeftRight|[1,0,4,1],[3,2,0,5+8],[3,6,4,7],[7,4,0,5+8]>;
/* #79.) 8.48.0.f.1 */ X879:=sub<GLeftRight|[3,2,0,1],[3,2,4,1+8],[5+8,6,0,1],[7,0,0,7]>;
/* #80.) 8.48.0.h.1 */ X880:=sub<GLeftRight|[1,6,0,7],[3,2,4,7],[3,4,0,5+8],[5+8,6,0,5+8]>;
/* #81.) 8.48.0.h.2 */ X881:=sub<GLeftRight|[1,4,4,5],[5+8,6,0,5+8],[7,4,0,7],[7,4,4,5]>;
/* #82.) 8.48.0.i.1 */ X882:=sub<GLeftRight|[3,2,0,1],[5+8,2,0,5+8],[5+8,2,0,7],[7,4,4,1]>;
/* #83.) 8.48.0.k.1 */ X883:=sub<GLeftRight|[1,4,0,3],[1,6,0,7],[5+8,6,0,7],[7,2,0,3]>;
/* #84.) 8.48.0.k.2 */ X884:=sub<GLeftRight|[3,6,0,3],[5+8,2,0,1],[5+8,2,0,7],[7,4,0,1]>;
/* #85.) 8.48.0.l.1 */ X885:=sub<GLeftRight|[1,2,0,7],[1,4,0,7],[5+8,4,0,1],[7,6,0,1]>;
/* #86.) 8.48.0.l.2 */ X886:=sub<GLeftRight|[7,0,0,5+8],[7,4,0,7],[7,6,0,1],[7,6,0,7]>;
/* #87.) 8.48.0.m.1 */ X887:=sub<GLeftRight|[1,6,0,3],[7,2,0,7],[7,3,0,1]>;
/* #88.) 8.48.0.m.2 */ X888:=sub<GLeftRight|[5+8,3,0,3],[5+8,4,0,7],[7,5,0,3]>;
/* #89.) 8.48.0.n.1 */ X889:=sub<GLeftRight|[1,5,0,7],[5+8,2,0,1],[5+8,4,0,1],[7,2,0,7]>;
/* #90.) 8.48.0.n.2 */ X890:=sub<GLeftRight|[1,6,0,5+8],[3,1,0,5+8],[5+8,1,0,3],[5+8,5,0,7]>;
/* #91.) 8.48.0.p.1 */ X891:=sub<GLeftRight|[1,5,0,3],[1,6,0,7],[7,3,0,3]>;
/* #92.) 8.48.0.q.1 */ X892:=sub<GLeftRight|[1,3,0,7],[1,7,2,3],[7,5,6,1]>;
/* #93.) 8.48.0.q.2 */ X893:=sub<GLeftRight|[3,4,0,7],[5,4,2,3],[5+8,7,0,3]>;

H251:=sub<G25|[2,2,0,13],[4,1,3,1],[2,3,0,6]>; /* 25.30.0.1, 25.30.0.a.1 */
H252:=sub<G25|[9,10,0,14],[0,7,7,2],[2,8,0,1]>; /* 25.60.0.1, 25.60.0.a.1 */
H253:=sub<G25|[9,10,0,14],[0,7,7,2],[4,1,0,7]>; /* 25.60.0.2, 25.60.0.a.2 */

X251:=sub<GLeftRight|[2+25,2,0,13],[4,1,3,1],[2+25,3,0,6+25]>; /* 25.30.0.1, 25.30.0.a.1 */
X252:=sub<GLeftRight|[9,10,0,14+25],[0,7,7,2],[2+25,8,0,1]>; /* 25.60.0.1, 25.60.0.a.1 */
X253:=sub<GLeftRight|[9,10,0,14+25],[0,7,7,2],[4+25,1,0,7]>; /* 25.60.0.2, 25.60.0.a.2 */

LeftGroups:=[X81,X82];

RightGroups:=[X251,X252,X253];

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
g:=GL2Genus(X);
if g lt 2 then
ANSWERS:=ANSWERS join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

#ANSWERS; // no hits

/* level 16*5 */

Left:=16;
Right:=5;
GLeftRight:=GL(2,Integers(Left*Right));

/* 1.) 16.16.0.a.1 */ H161:=sub<G16|[3,3,14,5],[6,15,3,6]>;
/* 2.) 16.16.0.b.1 */ H162:=sub<G16|[0,9,3,4],[7,8,13,9]>;
/* 3.) 16.24.0.a.1 */ H163:=sub<G16|[3,11,0,5+16],[3,14,14,11],[15+16,12,0,15+16]>;
/* 4.) 16.24.0.c.1 */ H164:=sub<G16|[1,12,14,7],[7,3,4,15],[11,7,2,3]>;
/* 5.) 16.24.0.e.1 */ H165:=sub<G16|[3,0,8,15+16],[9,4,0,15+16],[11,12,8+16,11],[11,13,8,15],[13,7,8,7+16]>;
/* 6.) 16.24.0.e.2 */ H166:=sub<G16|[3,11,0,1],[5+16,13,0,15+16],[7,9,8,15],[13,1,0,13],[13,1,8,9]>;
/* 7.) 16.24.0.f.1 */ H167:=sub<G16|[3,0,8,5+16],[3,5,0,5+16],[9,14,0,15+16],[15,1,8,5],[15,9,8,1]>;
/* 8.) 16.24.0.f.2 */ H168:=sub<G16|[5+16,4,0,9],[7,14,8,9],[11,10,0,7],[13,6,0,3],[15+16,13,0,13]>;
/* 9.) 16.24.0.g.1 */ H169:=sub<G16|[3,10,0,5+16],[7,6,0,1],[7,15,0,7],[7,15,0,13],[13,14,0,1]>;
/* 10.) 16.24.0.h.1 */ H1610:=sub<G16|[3,15,0,5+16],[5+16,1,0,5+16],[11,5,8,9],[11,14,0,13],[13,6,0,11]>;
/* 11.) 16.24.0.i.1 */ H1611:=sub<G16|[5,1,12,11],[7,2,8,1],[7,3,4,3],[9,14,0,11]>;
/* 12.) 16.24.0.j.1 */ H1612:=sub<G16|[3,5,12,5+16],[9,15,4,13],[11,7,4,1],[13,11,4,11]>;
/* 13.) 16.24.0.k.1 */ H1613:=sub<G16|[5,11,4,3],[5+16,12,10,11],[9,12,12,1+16],[15,10+16,12,3]>;
/* 14.) 16.24.0.k.2 */ H1614:=sub<G16|[3,4,14,13],[5+16,10,0,9],[7,5,0,5+16],[9,10,12,5+16]>;
/* 15.) 16.24.0.l.1 */ H1615:=sub<G16|[7,2,8,11],[7,7,4,13],[7,7,4,13],[9,6,10,15+16],[9,9,10,11]>;
/* 16.) 16.24.0.l.2 */ H1616:=sub<G16|[1,7,2,11],[3,8,4,3],[9,4,14,15],[11,15,6,1]>;
/* 17.) 16.24.0.m.1 */ H1617:=sub<G16|[7,7,12,1],[7,11,6,9],[9,5,0,15+16],[11,14,10,9]>;
/* 18.) 16.24.0.m.2 */ H1618:=sub<G16|[1,10,8,9],[5,1,12,11],[5,9,14,3],[15,1,14,13]>;
/* 19.) 16.24.0.n.1 */ H1619:=sub<G16|[3,6,4,7],[7,5,14,5+16],[9+16,11,14,11],[15,3,8,1]>;
/* 20.) 16.24.0.n.2 */ H1620:=sub<G16|[5,9,8,11],[15,4,6,13],[15,7,2,1],[15,14,14,9]>;
/* 21.) 16.24.0.o.1 */ H1621:=sub<G16|[1,14,8,3],[11,1,6,5],[11,5,6,9],[15,9,14,7]>;
/* 22.) 16.24.0.o.2 */ H1622:=sub<G16|[1,11,10,15+16],[3,13,14,5],[5+16,5,6,13],[7,5,6,11]>;
/* 23.) 16.24.0.p.1 */ H1623:=sub<G16|[3,5,10,5+16],[3,10,4,3],[9,12,14,7+16],[11,14,0,7]>;
/* 24.) 16.24.0.p.2 */ H1624:=sub<G16|[3,0,10,5+16],[9,5,8,7],[9,11,14,7],[13,5,12,3]>;
/* 25.) 16.48.0.a.1 */ H1625:=sub<G16|[9,0,4,9],[11,12,10,5+16],[11,14,6,5],[15+16,0,0,15+16]>;
/* 26.) 16.48.0.bb.1 */ H1626:=sub<G16|[1,10,0,15+16],[3,3,8,7],[9,4+16,8,13],[15,6,8,13]>;
/* 27.) 16.48.0.bb.2 */ H1627:=sub<G16|[1+16,7,8,11],[5+16,1,0,13],[5,2,8,9],[7,12,0,1]>;
/* 28.) 16.48.0.c.1 */ H1628:=sub<G16|[3,2,4,7],[5,4,12,9],[5+16,10,0,5+16],[9,8+16,6,7]>;
/* 29.) 16.48.0.c.2 */ H1629:=sub<G16|[7,0,2,9],[11,12,0,11],[15,2,6,9],[15,14,8,7]>;
/* 30.) 16.48.0.d.1 */ H1630:=sub<G16|[3,0,8,1],[5+16,8,0,11],[11,10,8,3],[15+16,0,8,9],[15+16,6,0,5+16]>;
/* 31.) 16.48.0.d.2 */ H1631:=sub<G16|[1,14,0,5+16],[5,6,8,15],[11,10,8,3],[13,0,8,15+16],[15+16,6,0,3]>;
/* 32.) 16.48.0.e.1 */ H1632:=sub<G16|[1,14,0,3],[5,4,8,15],[13,5,8,3],[15+16,15,0,3]>;
/* 33.) 16.48.0.h.1 */ H1633:=sub<G16|[3,14,2,5],[7,7,6,9],[9,7,0,15+16]>;
/* 34.) 16.48.0.h.2 */ H1634:=sub<G16|[5,14,14,11],[11,9,8,13],[13,13,2,11]>;
/* 35.) 16.48.0.i.1 */ H1635:=sub<G16|[1,6,10,7],[9,13,10,15+16],[11,14,0,11]>;
/* 36.) 16.48.0.j.1 */ H1636:=sub<G16|[1,8,0,13],[1,10,0,9],[13,0,8,13],[13,5,8,11],[15+16,3,0,1]>;
/* 37.) 16.48.0.l.1 */ H1637:=sub<G16|[1,1,0,3],[3,1,8,7],[3+16,6,8,11],[5,3,8,9]>;
/* 38.) 16.48.0.l.2 */ H1638:=sub<G16|[3+16,7,8,7],[5+16,0,0,11],[5,8,8,13],[9,13,8+16,11]>;
/* 39.) 16.48.0.m.1 */ H1639:=sub<G16|[1,7,8,3],[13,1,0,11],[13,10,12,9],[15,6,4,3]>;
/* 40.) 16.48.0.m.2 */ H1640:=sub<G16|[5+16,15,8,7],[7,0,8,7],[7,3,0,9],[15,4,12,7]>;
/* 41.) 16.48.0.n.1 */ H1641:=sub<G16|[9,3,4,7],[9,12,10,7],[15,5+16,6,5]>;
/* 42.) 16.48.0.q.1 */ H1642:=sub<G16|[3,5,0,13],[7,5,4,9],[7,6,12,3],[11,3,0,5+16]>;
/* 43.) 16.48.0.r.1 */ H1643:=sub<G16|[5+16,0,4,11],[5,1,8,9],[5+16,15,4,3],[11,11,12,13]>;
/* 44.) 16.48.0.t.1 */ H1644:=sub<G16|[5,11,2,15],[11,11,6,13],[13,9,12,11+16]>;
/* 45.) 16.48.0.t.2 */ H1645:=sub<G16|[1,8,14,7+16],[9,15,12,15+16],[13,13,4,3]>;
/* 46.) 16.48.0.u.1 */ H1646:=sub<G16|[1,11,0,3],[3,0,0,13],[9,5,0,7],[13,11,0,9]>;
/* 47.) 16.48.0.u.2 */ H1647:=sub<G16|[5+16,14,0,9],[9,2,0,3],[11,2,0,15+16],[13,3,0,5+16]>;
/* 48.) 16.48.0.v.1 */ H1648:=sub<G16|[1,9,0,15+16],[7,11,0,9],[9,3,0,5+16],[9,12,0,15+16],[15+16,6,0,15+16]>;
/* 49.) 16.48.0.v.2 */ H1649:=sub<G16|[3,6,0,15+16],[5+16,10,0,15+16],[11,7,0,9],[13,3,0,7],[13,8,0,7]>;
/* 50.) 16.48.0.x.1 */ H1650:=sub<G16|[3,7,0,1],[5+16,5,0,1],[5+16,9,0,7],[11,3,0,13]>;
/* 51.) 16.48.0.x.2 */ H1651:=sub<G16|[7,15,0,5+16],[11,11,0,13],[13,11,0,3],[15+16,0,0,9]>;
/* 52.) 16.48.0.y.1 */ H1652:=sub<G16|[9,7,0,7],[9,12,8,5],[11,15,8,15+16],[13,9,8+16,9]>;
/* 53.) 16.48.0.y.2 */ H1653:=sub<G16|[1,6,8,11],[3,1,0,3],[9,15,8,13],[13,9,0,13]>;
/* 54.) 16.48.0.z.1 */ H1654:=sub<G16|[1,0,8,5+16],[7,4,8,3],[11,1,0,9],[11,13,8,5]>;
/* 55.) 16.48.0.z.2 */ H1655:=sub<G16|[3,2,8,9],[7,3,0,9],[7,10,0,1],[9,6,0,7]>;
/* 56.) 16.24.1.f.1 */ H1656:=sub<G16|[5,2,8,9],[5,9,8,11],[7,7,10,9],[9,11,2,11]>;
/* 57.) 16.24.1.f.2 */ H1657:=sub<G16|[1,3,10,3],[3,3,2,13],[7,5,12,1],[15,12,14,9]>;
/* 58.) 16.24.1.h.1 */ H1658:=sub<G16|[11,8,6,1],[13,7,0,3],[15,3,4,1],[15,11,6,1]>;
/* 59.) 16.24.1.h.2 */ H1659:=sub<G16|[1,2,0,9],[1,2,2,15],[3,14,2,1+16],[13,11,6,15]>;
/* 60.) 16.24.1.l.1 */ H1660:=sub<G16|[1,2,8,7],[1,15,2,11],[3,6,4,15],[7,4,8,3]>;
/* 61.) 16.24.1.n.1 */ H1661:=sub<G16|[5+16,11,0,15+16],[5,12,4,1],[7,13,14,1+16],[15+16,14,0,3]>;
/* 62.) 16.24.1.n.2 */ H1662:=sub<G16|[5,4,4,9],[7,10,0,11],[7,14,10,1],[13,7,0,7]>;
/* 63.) 16.48.1.bg.1 */ H1663:=sub<G16|[3,11,10,5+16],[11,10,12,15+16],[13,9,12,15]>;
/* 64.) 16.48.1.bl.1 */ H1664:=sub<G16|[3,9,6,5],[3,14,14,13],[11,4,14,5],[11,9,0,5+16]>;
/* 65.) 16.48.1.bn.1 */ H1665:=sub<G16|[1+16,13,14,7],[5+16,5,0,11],[9,0,6,15+16],[15+16,10,10,1]>;
/* 66.) 16.48.1.bq.1 */ H1666:=sub<G16|[1,9,6,7],[3,4,0,11],[3,13,6,9],[5+16,5,0,11]>;
/* 67.) 16.48.1.bs.1 */ H1667:=sub<G16|[1,3,2,3],[1,6,2,15],[3,3,8,5],[9,15,12,15+16]>;
/* 68.) 16.48.1.bv.1 */ H1668:=sub<G16|[3,5,12,13],[9,10,2,7],[11,5,4,13],[13,5+16,4,15]>;
/* 69.) 16.48.1.ca.1 */ H1669:=sub<G16|[3,5,14,1],[9,3,12,7],[11,12,10,5+16],[13,13,0,11]>;
/* 70.) 16.48.1.cc.1 */ H1670:=sub<G16|[3,10,6,13],[5,1,8,11],[15+16,4,0,15+16],[15,14,4,3]>;
/* 71.) 16.48.1.cd.1 */ H1671:=sub<G16|[1,2,6,3],[5,11,8,11],[13,1,12,3]>;
/* 72.) 16.48.1.cf.1 */ H1672:=sub<G16|[1,9,6,15],[11,12,2,13],[11,12,14,1],[13,12,0,13]>;
/* 73.) 16.48.1.cg.1 */ H1673:=sub<G16|[3,4,12,7],[7,1,4,9],[7,10,6,1],[9,4,0,9]>;
/* 74.) 16.48.1.ch.1 */ H1674:=sub<G16|[1,4,4,5],[5+16,5,4,11],[13,0,10,7],[15,4,14,5]>;
/* 75.) 16.48.1.cr.1 */ H1675:=sub<G16|[9,4,6,7],[9,12,2+16,11],[13,7,12,7]>;
/* 76.) 16.48.1.cs.1 */ H1676:=sub<G16|[11,14,2,5],[13+16,11,14,3],[15,4,2,9],[15,4,8,15]>;
/* 77.) 16.48.1.ct.1 */ H1677:=sub<G16|[5,8,10+16,15],[5+16,9,10,11],[15,13,8,13]>;
/* 78.) 16.48.1.cx.1 */ H1678:=sub<G16|[1,11,2,13],[5,13,6,7],[7,8,0,7],[15,4,8,3]>;
/* 79.) 16.48.1.cx.2 */ H1679:=sub<G16|[3,15,10,1],[5,2,12,9],[5+16,15,10,9],[9,12,8,1]>;
/* 80.) 16.48.1.dc.1 */ H1680:=sub<G16|[1+16,3,12,11],[3,13,12,9],[5+16,14,0,1],[5,14,6,3]>;
/* 81.) 16.48.1.de.1 */ H1681:=sub<G16|[1,4,8,1],[3,1,8,13],[5,6,6,7],[7,1,4,9]>;
/* 82.) 16.48.1.df.1 */ H1682:=sub<G16|[7,0,4,11],[9,4,2,11],[13,0,10,7],[15,3,10+16,1]>;

/* 1.) 16.16.0.a.1 */ X161:=sub<GLeftRight|[3,3,14,5],[6,15,3,6]>;
/* 2.) 16.16.0.b.1 */ X162:=sub<GLeftRight|[0,9,3,4],[7,8,13,9]>;
/* 3.) 16.24.0.a.1 */ X163:=sub<GLeftRight|[3,11,0,5+16],[3,14,14,11],[15+16,12,0,15+16]>;
/* 4.) 16.24.0.c.1 */ X164:=sub<GLeftRight|[1,12,14,7],[7,3,4,15],[11,7,2,3]>;
/* 5.) 16.24.0.e.1 */ X165:=sub<GLeftRight|[3,0,8,15+16],[9,4,0,15+16],[11,12,8+16,11],[11,13,8,15],[13,7,8,7+16]>;
/* 6.) 16.24.0.e.2 */ X166:=sub<GLeftRight|[3,11,0,1],[5+16,13,0,15+16],[7,9,8,15],[13,1,0,13],[13,1,8,9]>;
/* 7.) 16.24.0.f.1 */ X167:=sub<GLeftRight|[3,0,8,5+16],[3,5,0,5+16],[9,14,0,15+16],[15,1,8,5],[15,9,8,1]>;
/* 8.) 16.24.0.f.2 */ X168:=sub<GLeftRight|[5+16,4,0,9],[7,14,8,9],[11,10,0,7],[13,6,0,3],[15+16,13,0,13]>;
/* 9.) 16.24.0.g.1 */ X169:=sub<GLeftRight|[3,10,0,5+16],[7,6,0,1],[7,15,0,7],[7,15,0,13],[13,14,0,1]>;
/* 10.) 16.24.0.h.1 */ X1610:=sub<GLeftRight|[3,15,0,5+16],[5+16,1,0,5+16],[11,5,8,9],[11,14,0,13],[13,6,0,11]>;
/* 11.) 16.24.0.i.1 */ X1611:=sub<GLeftRight|[5,1,12,11],[7,2,8,1],[7,3,4,3],[9,14,0,11]>;
/* 12.) 16.24.0.j.1 */ X1612:=sub<GLeftRight|[3,5,12,5+16],[9,15,4,13],[11,7,4,1],[13,11,4,11]>;
/* 13.) 16.24.0.k.1 */ X1613:=sub<GLeftRight|[5,11,4,3],[5+16,12,10,11],[9,12,12,1+16],[15,10+16,12,3]>;
/* 14.) 16.24.0.k.2 */ X1614:=sub<GLeftRight|[3,4,14,13],[5+16,10,0,9],[7,5,0,5+16],[9,10,12,5+16]>;
/* 15.) 16.24.0.l.1 */ X1615:=sub<GLeftRight|[7,2,8,11],[7,7,4,13],[7,7,4,13],[9,6,10,15+16],[9,9,10,11]>;
/* 16.) 16.24.0.l.2 */ X1616:=sub<GLeftRight|[1,7,2,11],[3,8,4,3],[9,4,14,15],[11,15,6,1]>;
/* 17.) 16.24.0.m.1 */ X1617:=sub<GLeftRight|[7,7,12,1],[7,11,6,9],[9,5,0,15+16],[11,14,10,9]>;
/* 18.) 16.24.0.m.2 */ X1618:=sub<GLeftRight|[1,10,8,9],[5,1,12,11],[5,9,14,3],[15,1,14,13]>;
/* 19.) 16.24.0.n.1 */ X1619:=sub<GLeftRight|[3,6,4,7],[7,5,14,5+16],[9+16,11,14,11],[15,3,8,1]>;
/* 20.) 16.24.0.n.2 */ X1620:=sub<GLeftRight|[5,9,8,11],[15,4,6,13],[15,7,2,1],[15,14,14,9]>;
/* 21.) 16.24.0.o.1 */ X1621:=sub<GLeftRight|[1,14,8,3],[11,1,6,5],[11,5,6,9],[15,9,14,7]>;
/* 22.) 16.24.0.o.2 */ X1622:=sub<GLeftRight|[1,11,10,15+16],[3,13,14,5],[5+16,5,6,13],[7,5,6,11]>;
/* 23.) 16.24.0.p.1 */ X1623:=sub<GLeftRight|[3,5,10,5+16],[3,10,4,3],[9,12,14,7+16],[11,14,0,7]>;
/* 24.) 16.24.0.p.2 */ X1624:=sub<GLeftRight|[3,0,10,5+16],[9,5,8,7],[9,11,14,7],[13,5,12,3]>;
/* 25.) 16.48.0.a.1 */ X1625:=sub<GLeftRight|[9,0,4,9],[11,12,10,5+16],[11,14,6,5],[15+16,0,0,15+16]>;
/* 26.) 16.48.0.bb.1 */ X1626:=sub<GLeftRight|[1,10,0,15+16],[3,3,8,7],[9,4+16,8,13],[15,6,8,13]>;
/* 27.) 16.48.0.bb.2 */ X1627:=sub<GLeftRight|[1+16,7,8,11],[5+16,1,0,13],[5,2,8,9],[7,12,0,1]>;
/* 28.) 16.48.0.c.1 */ X1628:=sub<GLeftRight|[3,2,4,7],[5,4,12,9],[5+16,10,0,5+16],[9,8+16,6,7]>;
/* 29.) 16.48.0.c.2 */ X1629:=sub<GLeftRight|[7,0,2,9],[11,12,0,11],[15,2,6,9],[15,14,8,7]>;
/* 30.) 16.48.0.d.1 */ X1630:=sub<GLeftRight|[3,0,8,1],[5+16,8,0,11],[11,10,8,3],[15+16,0,8,9],[15+16,6,0,5+16]>;
/* 31.) 16.48.0.d.2 */ X1631:=sub<GLeftRight|[1,14,0,5+16],[5,6,8,15],[11,10,8,3],[13,0,8,15+16],[15+16,6,0,3]>;
/* 32.) 16.48.0.e.1 */ X1632:=sub<GLeftRight|[1,14,0,3],[5,4,8,15],[13,5,8,3],[15+16,15,0,3]>;
/* 33.) 16.48.0.h.1 */ X1633:=sub<GLeftRight|[3,14,2,5],[7,7,6,9],[9,7,0,15+16]>;
/* 34.) 16.48.0.h.2 */ X1634:=sub<GLeftRight|[5,14,14,11],[11,9,8,13],[13,13,2,11]>;
/* 35.) 16.48.0.i.1 */ X1635:=sub<GLeftRight|[1,6,10,7],[9,13,10,15+16],[11,14,0,11]>;
/* 36.) 16.48.0.j.1 */ X1636:=sub<GLeftRight|[1,8,0,13],[1,10,0,9],[13,0,8,13],[13,5,8,11],[15+16,3,0,1]>;
/* 37.) 16.48.0.l.1 */ X1637:=sub<GLeftRight|[1,1,0,3],[3,1,8,7],[3+16,6,8,11],[5,3,8,9]>;
/* 38.) 16.48.0.l.2 */ X1638:=sub<GLeftRight|[3+16,7,8,7],[5+16,0,0,11],[5,8,8,13],[9,13,8+16,11]>;
/* 39.) 16.48.0.m.1 */ X1639:=sub<GLeftRight|[1,7,8,3],[13,1,0,11],[13,10,12,9],[15,6,4,3]>;
/* 40.) 16.48.0.m.2 */ X1640:=sub<GLeftRight|[5+16,15,8,7],[7,0,8,7],[7,3,0,9],[15,4,12,7]>;
/* 41.) 16.48.0.n.1 */ X1641:=sub<GLeftRight|[9,3,4,7],[9,12,10,7],[15,5+16,6,5]>;
/* 42.) 16.48.0.q.1 */ X1642:=sub<GLeftRight|[3,5,0,13],[7,5,4,9],[7,6,12,3],[11,3,0,5+16]>;
/* 43.) 16.48.0.r.1 */ X1643:=sub<GLeftRight|[5+16,0,4,11],[5,1,8,9],[5+16,15,4,3],[11,11,12,13]>;
/* 44.) 16.48.0.t.1 */ X1644:=sub<GLeftRight|[5,11,2,15],[11,11,6,13],[13,9,12,11+16]>;
/* 45.) 16.48.0.t.2 */ X1645:=sub<GLeftRight|[1,8,14,7+16],[9,15,12,15+16],[13,13,4,3]>;
/* 46.) 16.48.0.u.1 */ X1646:=sub<GLeftRight|[1,11,0,3],[3,0,0,13],[9,5,0,7],[13,11,0,9]>;
/* 47.) 16.48.0.u.2 */ X1647:=sub<GLeftRight|[5+16,14,0,9],[9,2,0,3],[11,2,0,15+16],[13,3,0,5+16]>;
/* 48.) 16.48.0.v.1 */ X1648:=sub<GLeftRight|[1,9,0,15+16],[7,11,0,9],[9,3,0,5+16],[9,12,0,15+16],[15+16,6,0,15+16]>;
/* 49.) 16.48.0.v.2 */ X1649:=sub<GLeftRight|[3,6,0,15+16],[5+16,10,0,15+16],[11,7,0,9],[13,3,0,7],[13,8,0,7]>;
/* 50.) 16.48.0.x.1 */ X1650:=sub<GLeftRight|[3,7,0,1],[5+16,5,0,1],[5+16,9,0,7],[11,3,0,13]>;
/* 51.) 16.48.0.x.2 */ X1651:=sub<GLeftRight|[7,15,0,5+16],[11,11,0,13],[13,11,0,3],[15+16,0,0,9]>;
/* 52.) 16.48.0.y.1 */ X1652:=sub<GLeftRight|[9,7,0,7],[9,12,8,5],[11,15,8,15+16],[13,9,8+16,9]>;
/* 53.) 16.48.0.y.2 */ X1653:=sub<GLeftRight|[1,6,8,11],[3,1,0,3],[9,15,8,13],[13,9,0,13]>;
/* 54.) 16.48.0.z.1 */ X1654:=sub<GLeftRight|[1,0,8,5+16],[7,4,8,3],[11,1,0,9],[11,13,8,5]>;
/* 55.) 16.48.0.z.2 */ X1655:=sub<GLeftRight|[3,2,8,9],[7,3,0,9],[7,10,0,1],[9,6,0,7]>;
/* 56.) 16.24.1.f.1 */ X1656:=sub<GLeftRight|[5,2,8,9],[5,9,8,11],[7,7,10,9],[9,11,2,11]>;
/* 57.) 16.24.1.f.2 */ X1657:=sub<GLeftRight|[1,3,10,3],[3,3,2,13],[7,5,12,1],[15,12,14,9]>;
/* 58.) 16.24.1.h.1 */ X1658:=sub<GLeftRight|[11,8,6,1],[13,7,0,3],[15,3,4,1],[15,11,6,1]>;
/* 59.) 16.24.1.h.2 */ X1659:=sub<GLeftRight|[1,2,0,9],[1,2,2,15],[3,14,2,1+16],[13,11,6,15]>;
/* 60.) 16.24.1.l.1 */ X1660:=sub<GLeftRight|[1,2,8,7],[1,15,2,11],[3,6,4,15],[7,4,8,3]>;
/* 61.) 16.24.1.n.1 */ X1661:=sub<GLeftRight|[5+16,11,0,15+16],[5,12,4,1],[7,13,14,1+16],[15+16,14,0,3]>;
/* 62.) 16.24.1.n.2 */ X1662:=sub<GLeftRight|[5,4,4,9],[7,10,0,11],[7,14,10,1],[13,7,0,7]>;
/* 63.) 16.48.1.bg.1 */ X1663:=sub<GLeftRight|[3,11,10,5+16],[11,10,12,15+16],[13,9,12,15]>;
/* 64.) 16.48.1.bl.1 */ X1664:=sub<GLeftRight|[3,9,6,5],[3,14,14,13],[11,4,14,5],[11,9,0,5+16]>;
/* 65.) 16.48.1.bn.1 */ X1665:=sub<GLeftRight|[1+16,13,14,7],[5+16,5,0,11],[9,0,6,15+16],[15+16,10,10,1]>;
/* 66.) 16.48.1.bq.1 */ X1666:=sub<GLeftRight|[1,9,6,7],[3,4,0,11],[3,13,6,9],[5+16,5,0,11]>;
/* 67.) 16.48.1.bs.1 */ X1667:=sub<GLeftRight|[1,3,2,3],[1,6,2,15],[3,3,8,5],[9,15,12,15+16]>;
/* 68.) 16.48.1.bv.1 */ X1668:=sub<GLeftRight|[3,5,12,13],[9,10,2,7],[11,5,4,13],[13,5+16,4,15]>;
/* 69.) 16.48.1.ca.1 */ X1669:=sub<GLeftRight|[3,5,14,1],[9,3,12,7],[11,12,10,5+16],[13,13,0,11]>;
/* 70.) 16.48.1.cc.1 */ X1670:=sub<GLeftRight|[3,10,6,13],[5,1,8,11],[15+16,4,0,15+16],[15,14,4,3]>;
/* 71.) 16.48.1.cd.1 */ X1671:=sub<GLeftRight|[1,2,6,3],[5,11,8,11],[13,1,12,3]>;
/* 72.) 16.48.1.cf.1 */ X1672:=sub<GLeftRight|[1,9,6,15],[11,12,2,13],[11,12,14,1],[13,12,0,13]>;
/* 73.) 16.48.1.cg.1 */ X1673:=sub<GLeftRight|[3,4,12,7],[7,1,4,9],[7,10,6,1],[9,4,0,9]>;
/* 74.) 16.48.1.ch.1 */ X1674:=sub<GLeftRight|[1,4,4,5],[5+16,5,4,11],[13,0,10,7],[15,4,14,5]>;
/* 75.) 16.48.1.cr.1 */ X1675:=sub<GLeftRight|[9,4,6,7],[9,12,2+16,11],[13,7,12,7]>;
/* 76.) 16.48.1.cs.1 */ X1676:=sub<GLeftRight|[11,14,2,5],[13+16,11,14,3],[15,4,2,9],[15,4,8,15]>;
/* 77.) 16.48.1.ct.1 */ X1677:=sub<GLeftRight|[5,8,10+16,15],[5+16,9,10,11],[15,13,8,13]>;
/* 78.) 16.48.1.cx.1 */ X1678:=sub<GLeftRight|[1,11,2,13],[5,13,6,7],[7,8,0,7],[15,4,8,3]>;
/* 79.) 16.48.1.cx.2 */ X1679:=sub<GLeftRight|[3,15,10,1],[5,2,12,9],[5+16,15,10,9],[9,12,8,1]>;
/* 80.) 16.48.1.dc.1 */ X1680:=sub<GLeftRight|[1+16,3,12,11],[3,13,12,9],[5+16,14,0,1],[5,14,6,3]>;
/* 81.) 16.48.1.de.1 */ X1681:=sub<GLeftRight|[1,4,8,1],[3,1,8,13],[5,6,6,7],[7,1,4,9]>;
/* 82.) 16.48.1.df.1 */ X1682:=sub<GLeftRight|[7,0,4,11],[9,4,2,11],[13,0,10,7],[15,3,10+16,1]>;

H51:=sub<G5|[2,1,0,3],[1,2,2,0],[1,1,0,2]>;
H52:=sub<G5|[2,0,0,3],[1,0,1,1],[1,0,0,2]>;
H53:=sub<G5|[3,1,0,2],[1,2,2,0],[2,2,2,1]>;
H54:=sub<G5|[4,0,1,4],[1,0,0,2]>;
H55:=sub<G5|[4,0,1,4],[2,0,0,1]>;
H56:=sub<G5|[2,1,0,3],[2,0,2,3],[1,0,2,2]>;
H57:=sub<G5|[3,1,0,2],[2,1,0,1]>;
H58:=sub<G5|[3,1,0,2],[2,1,3,3]>;
H59:=sub<G5|[4,0,0,4],[2,0,0,1]>;

X51:=sub<GLeftRight|[2+5,1,0,3],[1,2+5,2+5,0],[1,1,0,2+5]>;
X52:=sub<GLeftRight|[2+5,0,0,3],[1,0,1,1],[1,0,0,2+5]>;
X53:=sub<GLeftRight|[3,1,0,2+5],[1,2+5,2+5,0],[2+5,2,2,1]>;
X54:=sub<GLeftRight|[4+5,0,1,4+5],[1,0,0,2+5]>;
X55:=sub<GLeftRight|[4+5,0,1,4+5],[2+5,0,0,1]>;
X56:=sub<GLeftRight|[2+5,1,0,3],[2+5,0,2,3],[1,0,2,2+5]>;
X57:=sub<GLeftRight|[3,1,0,2+5],[2+5,1,0,1]>;
X58:=sub<GLeftRight|[3,1,0,2+5],[2,1,3,3]>;
X59:=sub<GLeftRight|[4+5,0,0,4+5],[2+5,0,0,1]>;

LeftGroups:=[
X161,X162,X163,X164,X165,X166,X167,X168,X169,X1610,
X1611,X1612,X1613,X1614,X1615,X1616,X1617,X1618,X1619,X1620,
X1621,X1622,X1623,X1624,X1625,X1626,X1627,X1628,X1629,X1630,
X1631,X1632,X1633,X1634,X1635,X1636,X1637,X1638,X1639,X1640,
X1641,X1642,X1643,X1644,X1645,X1646,X1647,X1648,X1649,X1650,
X1651,X1652,X1653,X1654,X1655,X1656,X1657,X1658,X1659,X1660,
X1661,X1662,X1663,X1664,X1665,X1666,X1667,X1668,X1669,X1670,
X1671,X1672,X1673,X1674,X1675,X1676,X1677,X1678,X1679,X1680,
X1681,X1682
];

RightGroups:=[X51,X52,X53,X54,X55,X56,X57,X58,X59];

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
g:=GL2Genus(X);
if g lt 2 then
ANSWERS:=ANSWERS join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

#ANSWERS; // no hits

/* level 2*5 */

ANSWERS25:={};

Left:=2;
Right:=5;

/* #1.) 2.2.0.a.1, MAXIMAL */ H21:=sub<G2|[0,1,1,1]>;
/* #2.) 2.3.0.a.1, MAXIMAL */ H22:=sub<G2|[0,1,1,0]>;
/* #3.) 2.2.0.a.1 */ H23:=sub<G2|[]>;

H51:=sub<G5|[2,1,0,3],[1,2,2,0],[1,1,0,2]>;
H52:=sub<G5|[2,0,0,3],[1,0,1,1],[1,0,0,2]>;
H53:=sub<G5|[3,1,0,2],[1,2,2,0],[2,2,2,1]>;
H54:=sub<G5|[4,0,1,4],[1,0,0,2]>;
H55:=sub<G5|[4,0,1,4],[2,0,0,1]>;
H56:=sub<G5|[2,1,0,3],[2,0,2,3],[1,0,2,2]>;
H57:=sub<G5|[3,1,0,2],[2,1,0,1]>;
H58:=sub<G5|[3,1,0,2],[2,1,3,3]>;
H59:=sub<G5|[4,0,0,4],[2,0,0,1]>;

GLeftRight:=GL(2,Integers(Left*Right));

/* #1.) 2.2.0.a.1, MAXIMAL */ X21:=sub<G2|[0,1,1,1]>;
/* #2.) 2.3.0.a.1, MAXIMAL */ X22:=sub<G2|[0,1,1,0]>;
/* #3.) 2.2.0.a.1 */ X23:=sub<G2|[]>;

X51:=sub<GLeftRight|[2+5,1,0,3],[1,2+5,2+5,0],[1,1,0,2+5]>;
X52:=sub<GLeftRight|[2+5,0,0,3],[1,0,1,1],[1,0,0,2+5]>;
X53:=sub<GLeftRight|[3,1,0,2+5],[1,2+5,2+5,0],[2+5,2,2,1]>;
X54:=sub<GLeftRight|[4+5,0,1,4+5],[1,0,0,2+5]>;
X55:=sub<GLeftRight|[4+5,0,1,4+5],[2+5,0,0,1]>;
X56:=sub<GLeftRight|[2+5,1,0,3],[2+5,0,2,3],[1,0,2,2+5]>;
X57:=sub<GLeftRight|[3,1,0,2+5],[2+5,1,0,1]>;
X58:=sub<GLeftRight|[3,1,0,2+5],[2,1,3,3]>;
X59:=sub<GLeftRight|[4+5,0,0,4+5],[2+5,0,0,1]>;

LeftGroups:=[X21,X22,X23];
RightGroups:=[X51,X52,X53,X54,X55,X56,X57,X58,X59];

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
g:=GL2Genus(X);
if g lt 2 then
ANSWERS25:=ANSWERS25 join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

#ANSWERS25; // 14 hits
ANSWERS25:=[x:x in ANSWERS25];
A1:=sub<GLeftRight|[7,6,0,9],[9,4,0,9]>;
IsConjugate(GLeftRight,A1,ANSWERS25[1][3]);
A2:=sub<GLeftRight|[3,0,0,7],[3,8,0,9]>;
IsConjugate(GLeftRight,A2,ANSWERS25[2][3]);
A3:=sub<GLeftRight|[1,5,9,4],[6,1,5,3]>;
IsConjugate(GLeftRight,A3,ANSWERS25[3][3]);
A4:=sub<GLeftRight|[3,7,2,9],[7,5,0,7],[7,5,6,3]>;
IsConjugate(GLeftRight,A4,ANSWERS25[4][3]);
A5:=sub<GLeftRight|[7,3,7,2],[9,0,4,7]>;
IsConjugate(GLeftRight,A5,ANSWERS25[5][3]);
A6:=sub<GLeftRight|[1,9,0,1],[9,3,0,7],[9,7,0,9]>; // genus 0
IsConjugate(GLeftRight,A6,ANSWERS25[6][3]);
A7:=sub<GLeftRight|[1,9,0,3],[3,3,0,3],[7,1,0,1]>; // genus 0
IsConjugate(GLeftRight,A7,ANSWERS25[7][3]);
A8:=sub<GLeftRight|[1,3,0,9],[3,3,0,1],[7,9,0,9]>; // genus 0
IsConjugate(GLeftRight,A8,ANSWERS25[8][3]);
A9:=sub<GLeftRight|[7,9,7,8],[8,5,9,7]>;
IsConjugate(GLeftRight,A9,ANSWERS25[9][3]);
A10:=sub<GLeftRight|[0,7,3,5],[4,5,9,7]>;
IsConjugate(GLeftRight,A10,ANSWERS25[10][3]);
A11:=sub<GLeftRight|[6,9,1,5],[8,5,3,1]>; // genus 0
IsConjugate(GLeftRight,A11,ANSWERS25[11][3]);
A12:=sub<GLeftRight|[1,2,8,9],[3,7,0,9],[9,9,0,1]>;
IsConjugate(GLeftRight,A12,ANSWERS25[12][3]);
A13:=sub<GLeftRight|[1,7,2,5],[9,3,2,1]>;
IsConjugate(GLeftRight,A13,ANSWERS25[13][3]);
A14:=sub<GLeftRight|[1,6,0,3],[9,8,0,7]>;
IsConjugate(GLeftRight,A14,ANSWERS25[14][3]);

load "/users/garenchiloyan/Desktop/GL2GroupTheory.m";
load "/users/garenchiloyan/Desktop/ModularCurves.m";

M1:=CreateModularCurveRec(10,Generators(A1));
FindModelOfXG(M1,1); // EllipticCurve([0,1,0,-1,0]), rank 0
M2:=CreateModularCurveRec(10,Generators(A2));
FindModelOfXG(M2,1); // EllipticCurve([1,1,4,4]), rank 0
M3:=CreateModularCurveRec(10,Generators(A3));
FindModelOfXG(M3,1); // EllipticCurve([0,1,0,-41,-116]), rank 0
M4:=CreateModularCurveRec(10,Generators(A4));
FindModelOfXG(M4,1); // EllipticCurve([0,1,0,-3,1]), rank 0
M5:=CreateModularCurveRec(10,Generators(A5));
FindModelOfXG(M5,1); // EllipticCurve([0,1,0,-36,-140]), rank 0
M9:=CreateModularCurveRec(10,Generators(A9));
FindModelOfXG(M9,1); // no rational points
M10:=CreateModularCurveRec(10,Generators(A10));
FindModelOfXG(M10,1); // EllipticCurve([0,1,0,-41,-116]), rank 0
M12:=CreateModularCurveRec(10,Generators(A12));
FindModelOfXG(M12,1); // EllipticCurve([1,1,1,-3,1]), rank 0
M13:=CreateModularCurveRec(10,Generators(A13));
FindModelOfXG(M13,1); // EllipticCurve([1,1,1,22,-9]), rank 0
M14:=CreateModularCurveRec(10,Generators(A14));
FindModelOfXG(M14,1); // EllipticCurve([0,1,0,-1,0]), rank 0

// results

/*
1.) 10.72.1.3, subset of 10.36.1.1, generators [7,6,0,9],[9,4,0,9]
2.) 10.36.1.1, subset of 10.12.1.1, generators [3,0,0,7],[3,8,0,9]
3.) 10.24.1.3, subset of 10.12.1.1, generators [1,5,9,4],[6,1,5,3]
4.) 10.30.1.1, generators [3,7,2,9],[7,5,0,7],[7,5,6,3]
5.) 10.12.1.1, generators [7,3,7,2],[9,0,4,7]
6.) 10.36.0.1, subset of 10.18.0.1, generators [1,9,0,1],[9,3,0,7],[9,7,0,9]
7.) 10.18.0.1, generators [1,9,0,3],[3,3,0,3],[7,1,0,1]
8.) 10.36.0.2, generators [1,3,0,9],[3,3,0,1],[7,9,0,9]
9.) 10.20.1.1, generators [7,9,7,8],[8,5,9,7]
10.) 10.24.1.2, generators [0,7,3,5],[4,5,9,7]
11.) 10.10.0.1, generators [6,9,1,5],[8,5,3,1]
12.) 10.45.1.1, subset of 10.15.1.1, generators [1,2,8,9],[3,7,0,9],[9,9,0,1]
13.) 10.15.1.1, generators [1,7,2,5],[9,3,2,1]
14.) 10.72.1.2, generators [1,6,0,3],[9,8,0,7]
*/

SET:=[ANSWERS25[i][3]: i in [1..#ANSWERS25]];

load "/users/garenchiloyan/Desktop/GL2GroupTheory.m";
load "/users/garenchiloyan/Desktop/ModularCurves.m";

for group in SET do
if GL2Genus(group) eq 1 then
M:=CreateModularCurveRec(10,Generators(group));
FindModelOfXG(M,1);
end if;
end for;

/* with results
E1:=EllipticCurve([0,1,0,-1,0]); Rank(E1) eq 0 true
E2:=EllipticCurve([0,1,0,4,4]); Rank(E2) eq 0 true
E3:=EllipticCurve([0,1,0,-41,-116]); Rank(E3) eq 0 true
E4:=EllipticCurve([1,1,1,-3,1]); Rank(E4) eq 0 true
E5:=EllipticCurve([0,1,0,-36,-140]); Rank(E5) eq 0 true
E9 has no points defined over QQ
E10:=EllipticCurve([0,1,0,-41,-116]); Rank(E10) eq 0 true
E12:=EllipticCurve([1,1,1,-3,1]); Rank(E12) eq 0 true
E13:=EllipticCurve([1,1,1,22,-9]); Rank(E13) eq 0 true
E14:=EllipticCurve([0,1,0,-1,0]); Rank(E14) eq 0 true
*/

/* level 4*5 */

ANSWERS45:={};

G2:=GL(2,Integers(2));
G4:=GL(2,Integers(4));
G8:=GL(2,Integers(8));
G16:=GL(2,Integers(16));
G32:=GL(2,Integers(32));
G5:=GL(2,Integers(5));
G25:=GL(2,Integers(25));

Left:=4;
Right:=5;
GLeftRight:=GL(2,Integers(Left*Right));

/* #1.) 4.2.0.a.1, MAXIMAL */ H41:=sub<G4|[3,2,1,3],[3,3,2,3]>;
/* #2.) 4.4.0.a.1, MAXIMAL */ H42:=sub<G4|[0,1,1,0],[1,3,2,3]>;
/* #3.) 4.6.0.a.1 */ H43:=sub<G4|[3,0,0,3],[3,0,2,3],[3,1,0,1]>;
/* #4.) 4.6.0.b.1 */ H44:=sub<G4|[1,1,2,1],[1,3,0,1]>;
/* #5.) 4.6.0.c.1 */ H45:=sub<G4|[1,3,0,3],[3,3,0,1],[3,3,0,3]>;
/* #6.) 4.6.0.d.1 */ H46:=sub<G4|[3,1,2,3],[3,3,2,1]>;
/* #7.) 4.6.0.e.1 */ H47:=sub<G4|[1,0,2,3],[1,1,0,3],[3,1,2,1]>;
/* #8.) 4.8.0.b.1 */ H48:=sub<G4|[0,3,1,1],[1,1,0,3]>;
/* #9.) 4.12.0.a.1 */ H49:=sub<G4|[1,2,0,1],[3,0,0,3],[3,0,2,1]>;
/* #10.) 4.12.0.b.1 */ H410:=sub<G4|[1,2,0,1],[3,0,0,1],[3,2,0,3]>;
/* #11.) 4.24.0.c.1 */ H411:=sub<G4|[3,0,0,3],[3,3,0,1]>;
/* #12.) 4.24.0.b.1 */ H412:=sub<G4|[1,0,0,3],[3,0,0,3]>;
/* #13.) 4.12.0.f.1 */ H413:=sub<G4|[0,3,3,0],[1,0,0,3]>;
/* #14.) 4.12.0.e.1 */ H414:=sub<G4|[1,0,3,3],[3,2,3,1]>;
/* #15.) 4.12.0.d.1 */ H415:=sub<G4|[1,2,0,1],[3,2,0,3],[3,3,0,1]>;

/* #1.) 4.2.0.a.1, MAXIMAL */ X41:=sub<GLeftRight|[3,2,1,3],[3,3,2,3]>;
/* #2.) 4.4.0.a.1, MAXIMAL */ X42:=sub<GLeftRight|[0,1,1,0],[1,3,2,3]>;
/* #3.) 4.6.0.a.1 */ X43:=sub<GLeftRight|[3,0,0,3],[3,0,2,3],[3,1,0,1]>;
/* #4.) 4.6.0.b.1 */ X44:=sub<GLeftRight|[1,1,2,1],[1,3,0,1]>;
/* #5.) 4.6.0.c.1 */ X45:=sub<GLeftRight|[1,3,0,3],[3,3,0,1],[3,3,0,3]>;
/* #6.) 4.6.0.d.1 */ X46:=sub<GLeftRight|[3,1,2,3],[3,3,2,1]>;
/* #7.) 4.6.0.e.1 */ X47:=sub<GLeftRight|[1,0,2,3],[1,1,0,3],[3,1,2,1]>;
/* #8.) 4.8.0.b.1 */ X48:=sub<GLeftRight|[0,3,1,1],[1,1,0,3]>;
/* #9.) 4.12.0.a.1 */ X49:=sub<GLeftRight|[1,2,0,1],[3,0,0,3],[3,0,2,1]>;
/* #10.) 4.12.0.b.1 */ X410:=sub<GLeftRight|[1,2,0,1],[3,0,0,1],[3,2,0,3]>;
/* #11.) 4.24.0.c.1 */ X411:=sub<GLeftRight|[3,0,0,3],[3,3,0,1]>;
/* #12.) 4.24.0.b.1 */ X412:=sub<GLeftRight|[1,0,0,3],[3,0,0,3]>;
/* #13.) 4.12.0.f.1 */ X413:=sub<GLeftRight|[0,3,3,0],[1,0,0,3]>;
/* #14.) 4.12.0.e.1 */ X414:=sub<GLeftRight|[1,0,3,3],[3,2,3,1]>;
/* #15.) 4.12.0.d.1 */ X415:=sub<GLeftRight|[1,2,0,1],[3,2,0,3],[3,3,0,1]>;

LeftGroups:=[X41,X42,X43,X44,X45,X46,X47,X48,X49,X410,X411,X412,X413,X414,X415];

H51:=sub<G5|[2,1,0,3],[1,2,2,0],[1,1,0,2]>;
H52:=sub<G5|[2,0,0,3],[1,0,1,1],[1,0,0,2]>;
H53:=sub<G5|[3,1,0,2],[1,2,2,0],[2,2,2,1]>;
H54:=sub<G5|[4,0,1,4],[1,0,0,2]>;
H55:=sub<G5|[4,0,1,4],[2,0,0,1]>;
H56:=sub<G5|[2,1,0,3],[2,0,2,3],[1,0,2,2]>;
H57:=sub<G5|[3,1,0,2],[2,1,0,1]>;
H58:=sub<G5|[3,1,0,2],[2,1,3,3]>;
H59:=sub<G5|[4,0,0,4],[2,0,0,1]>;

X51:=sub<GLeftRight|[2+5,1,0,3],[1,2+5,2+5,0],[1,1,0,2+5]>;
X52:=sub<GLeftRight|[2+5,0,0,3],[1,0,1,1],[1,0,0,2+5]>;
X53:=sub<GLeftRight|[3,1,0,2+5],[1,2+5,2+5,0],[2+5,2,2,1]>;
X54:=sub<GLeftRight|[4+5,0,1,4+5],[1,0,0,2+5]>;
X55:=sub<GLeftRight|[4+5,0,1,4+5],[2+5,0,0,1]>;
X56:=sub<GLeftRight|[2+5,1,0,3],[2+5,0,2,3],[1,0,2,2+5]>;
X57:=sub<GLeftRight|[3,1,0,2+5],[2+5,1,0,1]>;
X58:=sub<GLeftRight|[3,1,0,2+5],[2,1,3,3]>;
X59:=sub<GLeftRight|[4+5,0,0,4+5],[2+5,0,0,1]>;

RightGroups:=[X51,X52,X53,X54,X55,X56,X57,X58,X59];

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];


Attach("/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2.m");
load "/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2data.m";


for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
g:=GL2Genus(X);
if g lt 2 then
ANSWERS45:=ANSWERS45 join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

#ANSWERS45; // 18 more hits

ANSWERS45:=[x:x in ANSWERS45];

A1:=sub<GLeftRight|[4,11,9,5],[11,11,18,19],[16,15,7,18]>;
IsConjugate(GLeftRight,A1,ANSWERS45[18][3]);
A2:=sub<GLeftRight|[1,16,16,5],[3,4,17,5],[4,5,5,4],[15,18,18,7]>;
IsConjugate(GLeftRight,A2,ANSWERS45[13][3]);
A3:=sub<GLeftRight|[3,13,13,2],[8,9,5,12],[8,13,11,17],[11,10,18,19]>;
IsConjugate(GLeftRight,A3,ANSWERS45[2][3]);
A4:=sub<GLeftRight|[3,9,12,5],[11,4,1,5],[19,7,11,0]>;
IsConjugate(GLeftRight,A4,ANSWERS45[12][3]);
A5:=sub<GLeftRight|[1,16,8,9],[3,7,10,17],[13,5,3,14],[18,13,3,15]>;
IsConjugate(GLeftRight,A5,ANSWERS45[14][3]);
A6:=sub<GLeftRight|[2,7,15,1],[10,7,7,18],[16,19,19,2],[19,6,17,15]>;
IsConjugate(GLeftRight,A6,ANSWERS45[3][3]);
A7:=sub<GLeftRight|[7,12,12,15],[10,7,7,13],[10,13,13,2],[13,10,19,1]>;
IsConjugate(GLeftRight,A7,ANSWERS45[15][3]);
A8:=sub<GLeftRight|[3,12,0,7],[7,1,0,11],[11,10,0,1],[13,5,0,13],[13,16,0,11]>;
IsConjugate(GLeftRight,A8,ANSWERS45[17][3]);
A9:=sub<GLeftRight|[13,4,0,19],[13,18,5,11],[17,16,10,13],[19,6,5,7]>;
IsConjugate(GLeftRight,A9,ANSWERS45[10][3]);
A10:=sub<GLeftRight|[1,16,9,13],[7,4,13,3],[11,6,3,19],[17,0,3,9]>;
IsConjugate(GLeftRight,A10,ANSWERS45[11][3]);
A11:=sub<GLeftRight|[1,0,3,7],[3,8,7,13],[7,18,12,17],[9,0,12,13],[11,10, 5,1]>;
IsConjugate(GLeftRight,A11,ANSWERS45[6][3]);
A12:=sub<GLeftRight|[3,13,2,3],[3,17,10,7],[7,0,0,7],[7,0,12,11],[9,2,14,1]>;
IsConjugate(GLeftRight,A12,ANSWERS45[8][3]);
A13:=sub<GLeftRight|[9,1,6,13],[9,15,10,9],[19,0,2,3],[19,0,10,19],[19,5,16,1]>;
IsConjugate(GLeftRight,A13,ANSWERS45[4][3]);
A14:=sub<GLeftRight|[1,9,0,17],[1,18,0,7],[1,19,0,1],[9,16,0,1],[11,14,0,17]>;
IsConjugate(GLeftRight,A14,ANSWERS45[1][3]);
A15:=sub<GLeftRight|[7,1,0,19],[9,6,12,5],[11,9,14,7],[19,11,14,19]>;
IsConjugate(GLeftRight,A15,ANSWERS45[9][3]);
A16:=sub<GLeftRight|[3,13,4,17],[3,15,4,1],[11,1,14,11],[11,14,10,19],[13,5,4,11]>;
IsConjugate(GLeftRight,A16,ANSWERS45[5][3]);
A17:=sub<GLeftRight|[7,12,0,19],[13,17,0,9],[13,19,0,1],[17,9,0,19],[19,2,0,9]>;
IsConjugate(GLeftRight,A17,ANSWERS45[7][3]);
A18:=sub<GLeftRight|[1,13,4,5],[3,7,18,3],[7,11,12,3],[13,5,4,1]>;
IsConjugate(GLeftRight,A18,ANSWERS45[16][3]);

load "/users/garenchiloyan/Desktop/GL2GroupTheory.m";
load "/users/garenchiloyan/Desktop/ModularCurves.m";

M2:=CreateModularCurveRec(20,Generators(A2));
FindModelOfXG(M2,1); // EllipticCurve([0,-1,0,-36,140]), rank 0
M3:=CreateModularCurveRec(20,Generators(A3));
FindModelOfXG(M3,1); // no rational points
M4:=CreateModularCurveRec(20,Generators(A4));
FindModelOfXG(M4,1); // EllipticCurve([5,10]), rank 1
M5:=CreateModularCurveRec(20,Generators(A5));
FindModelOfXG(M5,1); // EllipticCurve([13,34]), rank 0
M6:=CreateModularCurveRec(20,Generators(A6));
FindModelOfXG(M6,1); // EllipticCurve([0,-1,0,-41,116]), rank 0
M7:=CreateModularCurveRec(20,Generators(A7));
FindModelOfXG(M7,1); // EllipticCurve([0,-1,0,-41,116]), rank 0
M8:=CreateModularCurveRec(20,Generators(A8));
FindModelOfXG(M8,1); // EllipticCurve([0,1,0,4,4]), rank 0
M9:=CreateModularCurveRec(20,Generators(A9));
FindModelOfXG(M9,1); // EllipticCurve([-7,-6]), rank 0
M10:=CreateModularCurveRec(20,Generators(A10));
FindModelOfXG(M10,1); // EllipticCurve([0,-1,0,4,-4]), rank 0
M11:=CreateModularCurveRec(20,Generators(A11));
FindModelOfXG(M11,1); // EllipticCurve([-7,6]), rank 0
M12:=CreateModularCurveRec(20,Generators(A12));
FindModelOfXG(M12,1); // EllipticCurve([0,-1,0,4,-4]), rank 0
M13:=CreateModularCurveRec(20,Generators(A13));
FindModelOfXG(M13,1); // EllipticCurve([0,-1,0,-1,0]), rank 0
M14:=CreateModularCurveRec(20,Generators(A14));
FindModelOfXG(M14,1); // EllipticCurve([0,1,0,-1,0]), rank 0
M15:=CreateModularCurveRec(20,Generators(A15));
FindModelOfXG(M15,1); // EllipticCurve([0,-1,0,-1,0]), rank 0
M16:=CreateModularCurveRec(20,Generators(A16));
FindModelOfXG(M16,1); // EllipticCurve([0,-1,0,-1,0]), rank 0
M17:=CreateModularCurveRec(20,Generators(A17));
FindModelOfXG(M17,1); // EllipticCurve([0,1,0,-1,0]), rank 0
M18:=CreateModularCurveRec(20,Generators(A18));
FindModelOfXG(M18,1); // EllipticCurve([0,-1,0,-1,0]), rank 0


// results

/*
20.10.0.1, [4,11,9,5],[11,11,18,19],[16,15,7,18]
20.12.1.1, [1,16,16,5],[3,4,17,5],[4,5,5,4],[15,18,18,7], 80.b2
20.20.1.1, [3,13,13,2],[8,9,5,12],[8,13,11,17],[11,10,18,19], X
20.20.1.2, [3,9,12,5],[11,4,1,5],[19,7,11,0], 400.a1
20.24.1.1, [1,16,8,9],[3,7,10,17],[13,5,3,14],[18,13,3,15], 80.a4
20.24.1.5, [2,7,15,1],[10,7,7,18],[16,19,19,2],[19,6,17,15], 80.b1
20.24.1.6, [7,12,12,15],[10,7,7,13],[10,13,13,2],[13,10,19,1], 80.b1
20.36.1.1, [3,12,0,7],[7,1,0,11],[11,10,0,1],[13,5,0,13],[13,16,0,11], 20.a4
20.36.1.2, [13,4,0,19],[13,18,5,11],[17,16,10,13],[19,6,5,7], 40.a2
20.36.1.3, [1,16,9,13],[7,4,13,3],[11,6,3,19],[17,0,3,9], 80.b4
20.36.1.4, [1,0,3,7],[3,8,7,13],[7,18,12,17],[9,0,12,13],[11,10, 5,1], 80.a2
20.36.1.5, [3,13,2,3],[3,17,10,7],[7,0,0,7],[7,0,12,11],[9,2,14,1], 80.b4
20.72.1.8, [9,1,6,13],[9,15,10,9],[19,0,2,3],[19,0,10,19],[19,5,16,1], 80.b3
20.72.1.9, [1,9,0,17],[1,18,0,7],[1,19,0,1],[9,16,0,1],[11,14,0,17], 20.a3
20.72.1.11, [7,1,0,19],[9,6,12,5],[11,9,14,7],[19,11,14,19], 80.b3
20.72.1.13, [3,13,4,17],[3,15,4,1],[11,1,14,11],[11,14,10,19],[13,5,4,11], 80.b3
20.72.1.16, [7,12,0,19],[13,17,0,9],[13,19,0,1],[17,9,0,19],[19,2,0,9], 20.a3
20.72.1.18, [1,13,4,5],[3,7,18,3],[7,11,12,3],[13,5,4,1], 80.b3
*/


/* level 8*5 */

ANSWERS85:={};

G2:=GL(2,Integers(2));
G4:=GL(2,Integers(4));
G8:=GL(2,Integers(8));
G16:=GL(2,Integers(16));
G32:=GL(2,Integers(32));
G5:=GL(2,Integers(5));
G25:=GL(2,Integers(25));

Attach("/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2.m");
load "/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2data.m";

Left:=8;
Right:=5;
GLeftRight:=GL(2,Integers(Left*Right));

/* #1.) 8.2.0.a.1, MAXIMAL */ H81:=sub<G8|[6,5,3,7],[6,7,7,4]>;
/* #2.) 8.2.0.b.1, MAXIMAL */ H82:=sub<G8|[5,2,1,1],[5,7,7,0]>;
/* #3.) 8.6.0.a.1 */ H83:=sub<G8|[3,0,2,1],[3,6,0,1],[7,1,4,7]>;
/* #4.) 8.6.0.b.1 */ H84:=sub<G8|[3,1,2,7],[3,1,4,3],[3,4,4,5]>;
/* #5.) 8.6.0.c.1 */ H85:=sub<G8|[1,3,6,5],[3,5,4,1],[5,3,2,7]>;
/* #6.) 8.6.0.d.1 */ H86:=sub<G8|[1,5,6,3],[3,0,2,7],[7,1,2,7]>;
/* #7.) 8.6.0.e.1 */ H87:=sub<G8|[1,6,2,3],[7,5,6,1],[7,7,2,7]>;
/* #8.) 8.6.0.f.1 */ H88:=sub<G8|[1,4,6,3],[3,1,6,7],[5,4,4,3]>;
/* #9.) 8.8.0.a.1 */ H89:=sub<G8|[4,3,3,5],[4,7,5,0]>;
/* #10.) 8.12.0.a.1 */ H810:=sub<G8|[3,4,4,3],[5,0,6,7],[5,2,0,3],[7,2,0,7]>;
/* #11.) 8.12.0.b.1 */ H811:=sub<G8|[3,0,6,7],[3,2,2,1],[5,2,0,5],[5,4,6,3]>;
/* #12.) 8.12.0.d.1 */ H812:=sub<G8|[3,7,4,1],[5,3,0,3],[7,4,4,5],[7,7,0,1]>;
/* #13.) 8.12.0.f.1 */ H813:=sub<G8|[1,1,0,7],[1,7,2,3],[3,2,2,5],[5,3,4,7]>;
/* #14.) 8.12.0.g.1 */ H814:=sub<G8|[1,7,2,1],[5,6,6,5],[7,4,4,7]>;
/* #15.) 8.12.0.h.1 */ H815:=sub<G8|[3,3,0,7],[5,7,2,5],[7,0,0,7]>;
/* #16.) 8.12.0.i.1 */ H816:=sub<G8|[3,0,0,5],[5,3,6,3],[7,0,4,1]>;
/* #17.) 8.12.0.k.1 */ H817:=sub<G8|[1,5,0,5],[3,7,4,5],[5,2,4,3],[7,1,4,7]>;
/* #18.) 8.12.0.l.1 */ H818:=sub<G8|[1,0,4,1],[1,7,4,7],[3,1,6,1],[3,6,6,1]>;
/* #19.) 8.12.0.m.1 */ H819:=sub<G8|[1,6,0,7],[5,1,0,7],[5,1,4,7],[7,1,4,5]>;
/* #20.) 8.12.0.n.1 */ H820:=sub<G8|[1,0,0,7],[1,4,0,3],[3,5,0,1],[5,5,0,7],[7,3,0,1]>;
/* #21.) 8.12.0.o.1 */ H821:=sub<G8|[1,4,0,5],[3,6,0,5],[3,6,0,7],[5,1,4,5]>;
/* #22.) 8.12.0.p.1 */ H822:=sub<G8|[1,4,4,5],[1,7,0,7],[3,1,0,5],[5,0,0,7]>;
/* #23.) 8.12.0.q.1 */ H823:=sub<G8|[3,3,6,1],[3,4,2,5],[5,5,0,7],[7,5,4,5]>;
/* #24.) 8.12.0.r.1 */ H824:=sub<G8|[1,0,0,5],[5,5,2,3],[7,3,0,5],[7,6,0,7]>;
/* #25.) 8.12.0.s.1 */ H825:=sub<G8|[1,3,2,3],[5,0,6,3],[5,1,6,3],[7,7,6,5]>;
/* #26.) 8.12.0.t.1 */ H826:=sub<G8|[1,2,0,5],[5,2,6,7],[5,3,4,3],[7,1,0,5]>;
/* #27.) 8.12.0.u.1 */ H827:=sub<G8|[1,6,2,7],[3,1,2,1],[5,3,4,7],[5,5,4,7]>;
/* #28.) 8.12.0.v.1 */ H828:=sub<G8|[1,3,2,3],[3,5,2,1],[5,6,0,5],[7,3,4,1]>;
/* #29.) 8.12.0.w.1 */ H829:=sub<G8|[5,1,6,1],[5,1,6,5],[7,1,6,1],[7,7,2,7]>;
/* #30.) 8.12.0.x.1 */ H830:=sub<G8|[3,4,0,5],[7,1,6,7],[7,6,0,5]>;
/* #31.) 8.12.0.y.1 */ H831:=sub<G8|[1,4,2,3],[1,5,4,3],[1,5,6,7],[3,1,0,5]>;
/* #32.) 8.12.0.z.1 */ H832:=sub<G8|[1,0,4,5],[1,0,6,7],[1,3,2,7],[5,1,4,3]>;
/* #33.) 8.16.0.a.1 */ H833:=sub<G8|[4,5,1,4],[4,5,3,7],[5,3,5,2]>;
/* #34.) 8.24.0.a.1 */ H834:=sub<G8|[3,2,6,5],[5,6,2,3],[5,6,6,3],[7,0,2,1]>;
/* #35.) 8.24.0.ba.1 */ H835:=sub<G8|[1,1,0,7],[3,7,0,7],[5,2,0,3],[7,1,0,1]>;
/* #36.) 8.24.0.ba.2 */ H836:=sub<G8|[3,0,0,5],[5,3,0,5],[7,2,0,5],[7,7,0,3]>;
/* #37.) 8.24.0.bb.1 */ H837:=sub<G8|[1,2,0,3],[1,4,0,5],[3,1,0,7],[5,5,0,7]>;
/* #38.) 8.24.0.bb.2 */ H838:=sub<G8|[1,1,0,5],[3,5,0,3],[5,1,0,5],[5,3,0,3]>;
/* #39.) 8.24.0.bc.1 */ H839:=sub<G8|[1,3,0,3],[1,5,4,3],[7,4,6,1]>;
/* #40.) 8.24.0.be.1 */ H840:=sub<G8|[1,3,0,3],[5,1,6,7],[5,2,6,3]>;
/* #41.) 8.24.0.bf.1 */ H841:=sub<G8|[3,1,0,1],[5,0,0,1],[5,3,0,3],[5,7,2,3]>;
/* #42.) 8.24.0.bh.1 */ H842:=sub<G8|[1,3,6,7],[3,5,6,5],[5,4,6,3]>;
/* #43.) 8.24.0.bi.1 */ H843:=sub<G8|[1,1,2,7],[3,7,0,1],[5,3,0,3]>;
/* #44.) 8.24.0.bj.1 */ H844:=sub<G8|[3,2,6,1],[3,3,6,5],[7,4,6,5]>;
/* #45.) 8.24.0.bl.1 */ H845:=sub<G8|[1,3,2,7],[3,3,2,1],[7,6,0,5]>;
/* #46.) 8.24.0.bl.2 */ H846:=sub<G8|[3,6,0,1],[5,4,0,1],[7,3,2,7]>;
/* #47.) 8.24.0.bn.1 */ H847:=sub<G8|[5,3,4,3],[7,0,2,5],[7,1,4,5]>;
/* #48.) 8.24.0.bo.1 */ H848:=sub<G8|[1,1,0,7],[1,5,6,7],[1,6,2,7]>;
/* #49.) 8.24.0.bp.1 */ H849:=sub<G8|[1,1,0,7],[5,3,4,3],[5,5,6,7]>;
/* #50.) 8.24.0.bq.1 */ H850:=sub<G8|[1,5,4,3],[1,6,0,5],[5,7,6,3]>;
/* #51.) 8.24.0.bs.1 */ H851:=sub<G8|[1,4,0,1],[1,6,2,7],[7,4,4,3],[7,5,0,1]>;
/* #52.) 8.24.0.bt.1 */ H852:=sub<G8|[1,5,6,7],[5,1,2,3],[5,5,6,3],[7,0,6,5]>;
/* #53.) 8.24.0.c.1 */ H853:=sub<G8|[1,6,4,3],[3,6,0,1],[5,2,0,7],[5,4,4,3],[7,4,4,1]>;
/* #54.) 8.24.0.d.1 */ H854:=sub<G8|[1,4,4,1],[1,6,0,3],[1,6,4,7],[3,6,0,3],[5,2,4,1]>;
/* #55.) 8.24.0.d.2 */ H855:=sub<G8|[1,2,4,5],[3,2,0,3],[5,2,4,5],[5,4,0,3],[7,6,4,3]>;
/* #56.) 8.24.0.e.1 */ H856:=sub<G8|[1,0,4,1],[1,2,0,1],[5,0,4,1],[7,0,0,7],[7,4,4,1]>;
/* #57.) 8.24.0.e.2 */ H857:=sub<G8|[1,4,4,1],[3,2,0,1],[3,2,0,7],[5,2,0,7],[5,6,0,5]>;
/* #58.) 8.24.0.f.1 */ H858:=sub<G8|[1,2,6,3],[3,4,2,5],[5,4,6,3],[7,2,6,1]>;
/* #59.) 8.24.0.g.1 */ H859:=sub<G8|[3,6,0,5],[7,2,0,3],[7,4,0,3],[7,6,6,1]>;
/* #60.) 8.24.0.h.1 */ H860:=sub<G8|[1,4,0,7],[3,2,0,3],[3,4,0,5],[3,6,4,7],[5,4,4,7]>;
/* #61.) 8.24.0.i.1 */ H861:=sub<G8|[3,4,0,7],[3,6,0,7],[5,0,0,3],[5,0,0,7],[5,2,0,1]>;
/* #62.) 8.24.0.k.1 */ H862:=sub<G8|[1,4,0,3],[5,4,0,7],[7,1,0,1],[7,4,0,7]>;
/* #63.) 8.24.0.m.1 */ H863:=sub<G8|[5,1,2,3],[5,4,4,5],[5,7,4,7]>;
/* #64.) 8.24.0.n.1 */ H864:=sub<G8|[1,0,4,1],[5,5,2,3],[7,0,6,5],[7,3,2,5]>;
/* #65.) 8.24.0.o.1 */ H865:=sub<G8|[1,3,0,7],[1,6,2,7],[3,3,0,5]>;
/* #66.) 8.24.0.q.1 */ H866:=sub<G8|[1,0,0,5],[1,5,0,7],[5,4,0,1],[5,7,0,3],[7,7,0,1]>;
/* #67.) 8.24.0.r.1 */ H867:=sub<G8|[5,7,0,7],[7,1,0,5],[7,2,0,1],[7,4,0,7]>;
/* #68.) 8.24.0.s.1 */ H868:=sub<G8|[1,1,6,3],[1,4,6,7],[1,6,6,3]>;
/* #69.) 8.24.0.t.1 */ H869:=sub<G8|[3,1,0,1],[3,6,0,7],[7,0,0,7],[7,2,4,3]>;
/* #70.) 8.24.0.v.1 */ H870:=sub<G8|[1,7,4,7],[1,7,6,7],[7,5,6,5]>;
/* #71.) 8.24.0.x.1 */ H871:=sub<G8|[1,5,0,7],[3,6,4,7],[5,7,4,3],[7,6,0,7]>;
/* #72.) 8.24.0.y.1 */ H872:=sub<G8|[1,5,4,7],[3,5,4,5],[5,3,4,5]>;
/* #73.) 8.24.0.z.1 */ H873:=sub<G8|[1,7,4,7],[7,6,0,7],[7,7,2,5]>;
/* #74.) 8.48.0.b.1 */ H874:=sub<G8|[1,0,4,1],[1,4,0,1],[5,0,0,1],[7,4,4,7],[7,6,0,1]>;
/* #75.) 8.48.0.b.2 */ H875:=sub<G8|[1,0,4,1],[1,4,0,1],[3,2,0,1],[7,4,0,3],[7,4,4,7]>;
/* #76.) 8.48.0.c.1 */ H876:=sub<G8|[1,0,4,1],[1,4,0,1],[7,4,0,1],[7,4,0,3],[7,4,4,7]>;
/* #77.) 8.48.0.e.1 */ H877:=sub<G8|[1,0,4,1],[1,2,4,7],[3,0,4,1],[7,6,0,1]>;
/* #78.) 8.48.0.e.2 */ H878:=sub<G8|[1,0,4,1],[3,2,0,5],[3,6,4,7],[7,4,0,5]>;
/* #79.) 8.48.0.f.1 */ H879:=sub<G8|[3,2,0,1],[3,2,4,1],[5,6,0,1],[7,0,0,7]>;
/* #80.) 8.48.0.h.1 */ H880:=sub<G8|[1,6,0,7],[3,2,4,7],[3,4,0,5],[5,6,0,5]>;
/* #81.) 8.48.0.h.2 */ H881:=sub<G8|[1,4,4,5],[5,6,0,5],[7,4,0,7],[7,4,4,5]>;
/* #82.) 8.48.0.i.1 */ H882:=sub<G8|[3,2,0,1],[5,2,0,5],[5,2,0,7],[7,4,4,1]>;
/* #83.) 8.48.0.k.1 */ H883:=sub<G8|[1,4,0,3],[1,6,0,7],[5,6,0,7],[7,2,0,3]>;
/* #84.) 8.48.0.k.2 */ H884:=sub<G8|[3,6,0,3],[5,2,0,1],[5,2,0,7],[7,4,0,1]>;
/* #85.) 8.48.0.l.1 */ H885:=sub<G8|[1,2,0,7],[1,4,0,7],[5,4,0,1],[7,6,0,1]>;
/* #86.) 8.48.0.l.2 */ H886:=sub<G8|[7,0,0,5],[7,4,0,7],[7,6,0,1],[7,6,0,7]>;
/* #87.) 8.48.0.m.1 */ H887:=sub<G8|[1,6,0,3],[7,2,0,7],[7,3,0,1]>;
/* #88.) 8.48.0.m.2 */ H888:=sub<G8|[5,3,0,3],[5,4,0,7],[7,5,0,3]>;
/* #89.) 8.48.0.n.1 */ H889:=sub<G8|[1,5,0,7],[5,2,0,1],[5,4,0,1],[7,2,0,7]>;
/* #90.) 8.48.0.n.2 */ H890:=sub<G8|[1,6,0,5],[3,1,0,5],[5,1,0,3],[5,5,0,7]>;
/* #91.) 8.48.0.p.1 */ H891:=sub<G8|[1,5,0,3],[1,6,0,7],[7,3,0,3]>;
/* #92.) 8.48.0.q.1 */ H892:=sub<G8|[1,3,0,7],[1,7,2,3],[7,5,6,1]>;
/* #93.) 8.48.0.q.2 */ H893:=sub<G8|[3,4,0,7],[5,4,2,3],[5,7,0,3]>;

/* #1.) 8.2.0.a.1, MAXIMAL */ X81:=sub<GLeftRight|[6,5,3,7],[6,7,7,4+8]>;
/* #2.) 8.2.0.b.1, MAXIMAL */ X82:=sub<GLeftRight|[5,2,1,1],[5,7,7,0]>;
/* #3.) 8.6.0.a.1 */ X83:=sub<GLeftRight|[3,0,2,1],[3,6,0,1],[7,1+8,4,7]>;
/* #4.) 8.6.0.b.1 */ X84:=sub<GLeftRight|[3,1,2,7],[3,1,4,3+8],[3,4,4,5]>;
/* #5.) 8.6.0.c.1 */ X85:=sub<GLeftRight|[1,3,6,5],[3,5,4,1],[5,3,2,7]>;
/* #6.) 8.6.0.d.1 */ X86:=sub<GLeftRight|[1,5,6,3],[3,0,2,7],[7,1,2,7]>;
/* #7.) 8.6.0.e.1 */ X87:=sub<GLeftRight|[1,6,2,3],[7,5,6,1],[7,7,2+8,7]>;
/* #8.) 8.6.0.f.1 */ X88:=sub<GLeftRight|[1,4,6,3],[3,1+8,6,7],[5,4,4,3]>;
/* #9.) 8.8.0.a.1 */ X89:=sub<GLeftRight|[4,3,3,5],[4,7,5+8,0]>;
/* #10.) 8.12.0.a.1 */ X810:=sub<GLeftRight|[3,4,4,3],[5+8,0,6,7],[5+8,2,0,3],[7,2,0,7]>;
/* #11.) 8.12.0.b.1 */ X811:=sub<GLeftRight|[3,0,6,7],[3,2,2,1],[5+8,2,0,5+8],[5,4,6,3]>;
/* #12.) 8.12.0.d.1 */ X812:=sub<GLeftRight|[3,7,4,1+8],[5+8,3,0,3],[7,4,4,5],[7,7,0,1]>;
/* #13.) 8.12.0.f.1 */ X813:=sub<GLeftRight|[1,1,0,7],[1,7,2,3],[3,2,2,5],[5,3,4,7]>;
/* #14.) 8.12.0.g.1 */ X814:=sub<GLeftRight|[1,7,2,1],[5,6,6,5],[7,4,4,7]>;
/* #15.) 8.12.0.h.1 */ X815:=sub<GLeftRight|[3,3,0,7],[5,7,2,5],[7,0,0,7]>;
/* #16.) 8.12.0.i.1 */ X816:=sub<GLeftRight|[3,0,0,5+8],[5,3,6,3],[7,0,4,1]>;
/* #17.) 8.12.0.k.1 */ X817:=sub<GLeftRight|[1,5,0,5+8],[3,7,4,5],[5,2,4,3],[7,1+8,4,7]>;
/* #18.) 8.12.0.l.1 */ X818:=sub<GLeftRight|[1,0,4,1],[1,7,4,7],[3,1,6,1],[3,6,6,1]>;
/* #19.) 8.12.0.m.1 */ X819:=sub<GLeftRight|[1,6,0,7],[5+8,1,0,7],[5,1,4,7],[7,1,4,5]>;
/* #20.) 8.12.0.n.1 */ X820:=sub<GLeftRight|[1,0,0,7],[1,4,0,3],[3,5,0,1],[5+8,5,0,7],[7,3,0,1]>;
/* #21.) 8.12.0.o.1 */ X821:=sub<GLeftRight|[1,4,0,5+8],[3,6,0,5+8],[3,6,0,7],[5,1,4,5]>;
/* #22.) 8.12.0.p.1 */ X822:=sub<GLeftRight|[1,4,4,5],[1,7,0,7],[3,1,0,5+8],[5+8,0,0,7]>;
/* #23.) 8.12.0.q.1 */ X823:=sub<GLeftRight|[3,3,6,1+8],[3,4,2,5],[5+8,5,0,7],[7,5,4,5+8]>;
/* #24.) 8.12.0.r.1 */ X824:=sub<GLeftRight|[1,0,0,5+8],[5+8,5,2,3],[7,3,0,5+8],[7,6,0,7]>;
/* #25.) 8.12.0.s.1 */ X825:=sub<GLeftRight|[1,3,2,3],[5+8,0,6,3],[5,1,6,3],[7,7,6,5]>;
/* #26.) 8.12.0.t.1 */ X826:=sub<GLeftRight|[1,2,0,5+8],[5,2,6,7],[5,3,4,3],[7,1,0,5+8]>;
/* #27.) 8.12.0.u.1 */ X827:=sub<GLeftRight|[1,6,2+8,7],[3,1,2,1],[5,3,4,7],[5+8,5,4,7]>;
/* #28.) 8.12.0.v.1 */ X828:=sub<GLeftRight|[1,3,2,3],[3,5,2,1],[5+8,6,0,5+8],[7,3,4,1+8]>;
/* #29.) 8.12.0.w.1 */ X829:=sub<GLeftRight|[5,1,6,1],[5,1,6,5],[7,1,6,1],[7,7,2+8,7]>;
/* #30.) 8.12.0.x.1 */ X830:=sub<GLeftRight|[3,4,0,5+8],[7,1,6,7],[7,6,0,5+8]>;
/* #31.) 8.12.0.y.1 */ X831:=sub<GLeftRight|[1,4,2,3+8],[1,5,4,3],[1,5,6,7],[3,1,0,5+8]>;
/* #32.) 8.12.0.z.1 */ X832:=sub<GLeftRight|[1,0,4,5+8],[1,0,6,7],[1,3,2,7],[5,1,4,3]>;
/* #33.) 8.16.0.a.1 */ X833:=sub<GLeftRight|[4,5,1,4],[4,5,3,7],[5+8,3,5,2]>;
/* #34.) 8.24.0.a.1 */ X834:=sub<GLeftRight|[3,2,6,5],[5,6,2,3],[5,6,6,3],[7,0,2,1]>;
/* #35.) 8.24.0.ba.1 */ X835:=sub<GLeftRight|[1,1,0,7],[3,7,0,7],[5+8,2,0,3],[7,1,0,1]>;
/* #36.) 8.24.0.ba.2 */ X836:=sub<GLeftRight|[3,0,0,5+8],[5+8,3,0,5+8],[7,2,0,5+8],[7,7,0,3]>;
/* #37.) 8.24.0.bb.1 */ X837:=sub<GLeftRight|[1,2,0,3],[1,4,0,5+8],[3,1,0,7],[5+8,5,0,7]>;
/* #38.) 8.24.0.bb.2 */ X838:=sub<GLeftRight|[1,1,0,5+8],[3,5,0,3],[5+8,1,0,5+8],[5+8,3,0,3]>;
/* #39.) 8.24.0.bc.1 */ X839:=sub<GLeftRight|[1,3,0,3],[1,5,4,3],[7,4,6,1]>;
/* #40.) 8.24.0.be.1 */ X840:=sub<GLeftRight|[1,3,0,3],[5,1,6,7],[5,2,6,3]>;
/* #41.) 8.24.0.bf.1 */ X841:=sub<GLeftRight|[3,1,0,1],[5+8,0,0,1],[5+8,3,0,3],[5,7,2,3]>;
/* #42.) 8.24.0.bh.1 */ X842:=sub<GLeftRight|[1,3,6,7],[3,5,6,5+8],[5,4,6,3]>;
/* #43.) 8.24.0.bi.1 */ X843:=sub<GLeftRight|[1,1,2,7+8],[3,7,0,1],[5+8,3,0,3]>;
/* #44.) 8.24.0.bj.1 */ X844:=sub<GLeftRight|[3,2,6,1],[3,3,6,5],[7,4,6,5]>;
/* #45.) 8.24.0.bl.1 */ X845:=sub<GLeftRight|[1,3,2,7],[3,3,2,1],[7,6,0,5+8]>;
/* #46.) 8.24.0.bl.2 */ X846:=sub<GLeftRight|[3,6,0,1],[5+8,4,0,1],[7,3,2,7]>;
/* #47.) 8.24.0.bn.1 */ X847:=sub<GLeftRight|[5,3,4,3],[7,0,2,5+8],[7,1,4,5]>;
/* #48.) 8.24.0.bo.1 */ X848:=sub<GLeftRight|[1,1,0,7],[1,5,6,7],[1,6,2+8,7]>;
/* #49.) 8.24.0.bp.1 */ X849:=sub<GLeftRight|[1,1,0,7],[5,3,4,3],[5+8,5,6,7]>;
/* #50.) 8.24.0.bq.1 */ X850:=sub<GLeftRight|[1,5,4,3],[1,6,0,5+8],[5,7,6,3]>;
/* #51.) 8.24.0.bs.1 */ X851:=sub<GLeftRight|[1,4,0,1],[1,6,2+8,7],[7,4,4,3+8],[7,5,0,1]>;
/* #52.) 8.24.0.bt.1 */ X852:=sub<GLeftRight|[1,5,6,7],[5,1,2,3],[5+8,5,6,3],[7,0,6,5+8]>;
/* #53.) 8.24.0.c.1 */ X853:=sub<GLeftRight|[1,6,4,3],[3,6,0,1],[5+8,2,0,7],[5,4,4,3],[7,4,4,1]>;
/* #54.) 8.24.0.d.1 */ X854:=sub<GLeftRight|[1,4,4,1+8],[1,6,0,3],[1,6,4,7],[3,6,0,3],[5,2,4,1]>;
/* #55.) 8.24.0.d.2 */ X855:=sub<GLeftRight|[1,2,4,5],[3,2,0,3],[5,2,4,5],[5+8,4,0,3],[7,6,4,3]>;
/* #56.) 8.24.0.e.1 */ X856:=sub<GLeftRight|[1,0,4,1],[1,2,0,1],[5+8,0,4,1],[7,0,0,7],[7,4,4,1]>;
/* #57.) 8.24.0.e.2 */ X857:=sub<GLeftRight|[1,4,4,1+8],[3,2,0,1],[3,2,0,7],[5+8,2,0,7],[5+8,6,0,5+8]>;
/* #58.) 8.24.0.f.1 */ X858:=sub<GLeftRight|[1,2,6,3],[3,4,2,5],[5,4,6,3],[7,2,6,1+8]>;
/* #59.) 8.24.0.g.1 */ X859:=sub<GLeftRight|[3,6,0,5+8],[7,2,0,3],[7,4,0,3],[7,6,6,1]>;
/* #60.) 8.24.0.h.1 */ X860:=sub<GLeftRight|[1,4,0,7],[3,2,0,3],[3,4,0,5+8],[3,6,4,7],[5,4,4,7]>;
/* #61.) 8.24.0.i.1 */ X861:=sub<GLeftRight|[3,4,0,7],[3,6,0,7],[5+8,0,0,3],[5+8,0,0,7],[5+8,2,0,1]>;
/* #62.) 8.24.0.k.1 */ X862:=sub<GLeftRight|[1,4,0,3],[5+8,4,0,7],[7,1,0,1],[7,4,0,7]>;
/* #63.) 8.24.0.m.1 */ X863:=sub<GLeftRight|[5,1,2,3],[5,4,4,5],[5,7,4,7]>;
/* #64.) 8.24.0.n.1 */ X864:=sub<GLeftRight|[1,0,4,1],[5+8,5,2,3],[7,0,6,5+8],[7,3,2,5]>;
/* #65.) 8.24.0.o.1 */ X865:=sub<GLeftRight|[1,3,0,7],[1,6,2+8,7],[3,3,0,5+8]>;
/* #66.) 8.24.0.q.1 */ X866:=sub<GLeftRight|[1,0,0,5+8],[1,5,0,7],[5+8,4,0,1],[5+8,7,0,3],[7,7,0,1]>;
/* #67.) 8.24.0.r.1 */ X867:=sub<GLeftRight|[5+8,7,0,7],[7,1,0,5+8],[7,2,0,1],[7,4,0,7]>;
/* #68.) 8.24.0.s.1 */ X868:=sub<GLeftRight|[1,1,6,3],[1,4,6,7],[1,6,6,3]>;
/* #69.) 8.24.0.t.1 */ X869:=sub<GLeftRight|[3,1,0,1],[3,6,0,7],[7,0,0,7],[7,2,4,3]>;
/* #70.) 8.24.0.v.1 */ X870:=sub<GLeftRight|[1,7,4,7],[1+8,7,6,7],[7,5,6,5+8]>;
/* #71.) 8.24.0.x.1 */ X871:=sub<GLeftRight|[1,5,0,7],[3,6,4,7],[5,7,4,3],[7,6,0,7]>;
/* #72.) 8.24.0.y.1 */ X872:=sub<GLeftRight|[1,5,4,7],[3,5,4,5+8],[5,3,4,5]>;
/* #73.) 8.24.0.z.1 */ X873:=sub<GLeftRight|[1,7,4,7],[7,6,0,7],[7,7,2,5]>;
/* #74.) 8.48.0.b.1 */ X874:=sub<GLeftRight|[1,0,4,1],[1,4,0,1],[5+8,0,0,1],[7,4,4,7],[7,6,0,1]>;
/* #75.) 8.48.0.b.2 */ X875:=sub<GLeftRight|[1,0,4,1],[1,4,0,1],[3,2,0,1],[7,4,0,3],[7,4,4,7]>;
/* #76.) 8.48.0.c.1 */ X876:=sub<GLeftRight|[1,0,4,1],[1,4,0,1],[7,4,0,1],[7,4,0,3],[7,4,4,7]>;
/* #77.) 8.48.0.e.1 */ X877:=sub<GLeftRight|[1,0,4,1],[1,2,4,7],[3,0,4,1],[7,6,0,1]>;
/* #78.) 8.48.0.e.2 */ X878:=sub<GLeftRight|[1,0,4,1],[3,2,0,5+8],[3,6,4,7],[7,4,0,5+8]>;
/* #79.) 8.48.0.f.1 */ X879:=sub<GLeftRight|[3,2,0,1],[3,2,4,1+8],[5+8,6,0,1],[7,0,0,7]>;
/* #80.) 8.48.0.h.1 */ X880:=sub<GLeftRight|[1,6,0,7],[3,2,4,7],[3,4,0,5+8],[5+8,6,0,5+8]>;
/* #81.) 8.48.0.h.2 */ X881:=sub<GLeftRight|[1,4,4,5],[5+8,6,0,5+8],[7,4,0,7],[7,4,4,5]>;
/* #82.) 8.48.0.i.1 */ X882:=sub<GLeftRight|[3,2,0,1],[5+8,2,0,5+8],[5+8,2,0,7],[7,4,4,1]>;
/* #83.) 8.48.0.k.1 */ X883:=sub<GLeftRight|[1,4,0,3],[1,6,0,7],[5+8,6,0,7],[7,2,0,3]>;
/* #84.) 8.48.0.k.2 */ X884:=sub<GLeftRight|[3,6,0,3],[5+8,2,0,1],[5+8,2,0,7],[7,4,0,1]>;
/* #85.) 8.48.0.l.1 */ X885:=sub<GLeftRight|[1,2,0,7],[1,4,0,7],[5+8,4,0,1],[7,6,0,1]>;
/* #86.) 8.48.0.l.2 */ X886:=sub<GLeftRight|[7,0,0,5+8],[7,4,0,7],[7,6,0,1],[7,6,0,7]>;
/* #87.) 8.48.0.m.1 */ X887:=sub<GLeftRight|[1,6,0,3],[7,2,0,7],[7,3,0,1]>;
/* #88.) 8.48.0.m.2 */ X888:=sub<GLeftRight|[5+8,3,0,3],[5+8,4,0,7],[7,5,0,3]>;
/* #89.) 8.48.0.n.1 */ X889:=sub<GLeftRight|[1,5,0,7],[5+8,2,0,1],[5+8,4,0,1],[7,2,0,7]>;
/* #90.) 8.48.0.n.2 */ X890:=sub<GLeftRight|[1,6,0,5+8],[3,1,0,5+8],[5+8,1,0,3],[5+8,5,0,7]>;
/* #91.) 8.48.0.p.1 */ X891:=sub<GLeftRight|[1,5,0,3],[1,6,0,7],[7,3,0,3]>;
/* #92.) 8.48.0.q.1 */ X892:=sub<GLeftRight|[1,3,0,7],[1,7,2,3],[7,5,6,1]>;
/* #93.) 8.48.0.q.2 */ X893:=sub<GLeftRight|[3,4,0,7],[5,4,2,3],[5+8,7,0,3]>;

H51:=sub<G5|[2,1,0,3],[1,2,2,0],[1,1,0,2]>;
H52:=sub<G5|[2,0,0,3],[1,0,1,1],[1,0,0,2]>;
H53:=sub<G5|[3,1,0,2],[1,2,2,0],[2,2,2,1]>;
H54:=sub<G5|[4,0,1,4],[1,0,0,2]>;
H55:=sub<G5|[4,0,1,4],[2,0,0,1]>;
H56:=sub<G5|[2,1,0,3],[2,0,2,3],[1,0,2,2]>;
H57:=sub<G5|[3,1,0,2],[2,1,0,1]>;
H58:=sub<G5|[3,1,0,2],[2,1,3,3]>;
H59:=sub<G5|[4,0,0,4],[2,0,0,1]>;

X51:=sub<GLeftRight|[2+5,1,0,3],[1,2+5,2+5,0],[1,1,0,2+5]>;
X52:=sub<GLeftRight|[2+5,0,0,3],[1,0,1,1],[1,0,0,2+5]>;
X53:=sub<GLeftRight|[3,1,0,2+5],[1,2+5,2+5,0],[2+5,2,2,1]>;
X54:=sub<GLeftRight|[4+5,0,1,4+5],[1,0,0,2+5]>;
X55:=sub<GLeftRight|[4+5,0,1,4+5],[2+5,0,0,1]>;
X56:=sub<GLeftRight|[2+5,1,0,3],[2+5,0,2,3],[1,0,2,2+5]>;
X57:=sub<GLeftRight|[3,1,0,2+5],[2+5,1,0,1]>;
X58:=sub<GLeftRight|[3,1,0,2+5],[2,1,3,3]>;
X59:=sub<GLeftRight|[4+5,0,0,4+5],[2+5,0,0,1]>;

LeftGroups:=[
X81,X82,X83,X84,X85,X86,X87,X88,X89,X810,
X811,X812,X813,X814,X815,X816,X817,X818,X819,X820,
X821,X822,X823,X824,X825,X826,X827,X828,X829,X830,
X831,X832,X833,X834,X835,X836,X837,X838,X839,X840,
X841,X842,X843,X844,X845,X846,X847,X848,X849,X850,
X851,X852,X853,X854,X855,X856,X857,X858,X859,X860,
X861,X862,X863,X864,X865,X866,X867,X868,X869,X870,
X871,X872,X873,X874,X875,X876,X877,X878,X879,X880,
X881,X882,X883,X884,X885,X886,X887,X888,X889,X890,
X891,X892,X893];

RightGroups:=[X51,X52,X53,X54,X55,X56,X57,X58,X59];

KerLeft1:=[[1+Left*x,0,0,1] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft2:=[[1,0,0,1+Left*x] : x in [0..(1+Right)] | GCD(1+Left*x,Left*Right) eq 1];
KerLeft3:=[[1,Left,0,1],[1,0,Left,1]];

KerRight1:=[[1+Right*x,0,0,1] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight2:=[[1,0,0,1+Right*x] : x in [0..(1+Left)] | GCD(1+Right*x,Left*Right) eq 1];
KerRight3:=[[1,Right,0,1],[1,0,Right,1]];

for i in [1..#LeftGroups] do
for j in [1..#RightGroups] do
print <#LeftGroups-i,#RightGroups-j>;
XLeft:=sub<GLeftRight|Generators(LeftGroups[i]),KerLeft1,KerLeft2,KerLeft3>;
XRight:=sub<GLeftRight|Generators(RightGroups[j]),KerRight1,KerRight2,KerRight3>;
X:=XLeft meet XRight;
if GLeftRight![-1,0,0,-1] in X then
g:=GL2Genus(X);
if g lt 2 then
ANSWERS85:=ANSWERS85 join {<GL2Label(XLeft),GL2Label(XRight),X>};
end if;
end if;
end for;
end for;

#ANSWERS85; // 24 more hits
ANSWERS85:=[x:x in ANSWERS85];

A1:=sub<GLeftRight|[3,6,38,29],[5,22,21,25],[39,15,15,22]>; // 40.10.0.1, genus 0
IsConjugate(GLeftRight,A1,ANSWERS85[5][3]);
A2:=sub<GLeftRight|[10,23,29,9],[11,22,32,5],[31,27,22,25]>; // 40.10.0.2, genus 0
IsConjugate(GLeftRight,A2,ANSWERS85[2][3]);
A3:=sub<GLeftRight|[2,37,1,38],[4,29,13,35],[6,3,3,16],[39,14,7,31]>; // 40.12.1.5
IsConjugate(GLeftRight,A3,ANSWERS85[10][3]);
A4:=sub<GLeftRight|[0,31,7,9],[5,19,17,12],[19,7,2,9],[27,15,15,32]>; // 40.12.1.6
IsConjugate(GLeftRight,A4,ANSWERS85[7][3]);
A5:=sub<GLeftRight|[5,12,3,23],[9,12,8,11],[37,20,23,13],[39,7,23,12]>; // 40.20.1.1
IsConjugate(GLeftRight,A5,ANSWERS85[23][3]);
A6:=sub<GLeftRight|[2,31,29,21],[3,30,0,13],[8,1,29,32],[17,6,14,3]>; // 40.20.1.2
IsConjugate(GLeftRight,A6,ANSWERS85[15][3]);
A7:=sub<GLeftRight|[23,18,35,11],[29,17,21,30],[35,26,2,29],[35,39,18,31]>; // 40.24.1.17
IsConjugate(GLeftRight,A7,ANSWERS85[12][3]);
A8:=sub<GLeftRight|[5,39,4,35],[15,6,11,25],[16,33,19,20],[23,6,17,37]>; // 40.24.1.19
IsConjugate(GLeftRight,A8,ANSWERS85[3][3]);
A9:=sub<GLeftRight|[1,26,15,37],[11,11,17,10],[15,31,14,7],[26,1,15,17]>; // 40.24.1.22
IsConjugate(GLeftRight,A9,ANSWERS85[19][3]);
A10:=sub<GLeftRight|[21,8,32,37],[21,10,17,19],[28,39,27,30],[39,33,3,4]>; // 40.24.1.24
IsConjugate(GLeftRight,A10,ANSWERS85[9][3]);
A11:=sub<GLeftRight|[1,0,24,17],[5,19,12,17],[9,28,26,21],[27,19,8,13],[35,28,8,35]>; // 40.36.1.1
IsConjugate(GLeftRight,A11,ANSWERS85[21][3]);
A12:=sub<GLeftRight|[17,0,0,17],[17,22,0,9],[29,32,6,15],[35,34,26,3],[35,39,2,7]>; // 40.36.1.2
IsConjugate(GLeftRight,A12,ANSWERS85[11][3]);
A13:=sub<GLeftRight|[9,35,20,9],[15,9,28,21],[23,38,20,31],[29,0,6,33],[37,1,24,9]>; // 40.36.1.3
IsConjugate(GLeftRight,A13,ANSWERS85[6][3]);
A14:=sub<GLeftRight|[3,34,32,35],[7,4,28,13],[9,27,0,11],[31,15,24,37],[37,21,26,37]>; // 40.36.1.4
IsConjugate(GLeftRight,A14,ANSWERS85[22][3]);
A15:=sub<GLeftRight|[1,38,28,1],[7,15,30,17],[11,32,14,19],[25,4,26,3],[27,27,26,33]>; // 40.36.1.5
IsConjugate(GLeftRight,A15,ANSWERS85[20][3]);
A16:=sub<GLeftRight|[9,12,18,23],[11,15,12,29],[21,15,34,37],[21,25,10,1],[27,31,14,39]>; // 40.36.1.6
IsConjugate(GLeftRight,A16,ANSWERS85[13][3]);
A17:=sub<GLeftRight|[1,15,2,29],[5,6,4,7],[25,9,4,25],[29,32,6,15],[33,3,6,15]>; // 40.72.1.15
IsConjugate(GLeftRight,A17,ANSWERS85[16][3]);
A18:=sub<GLeftRight|[3,31,32,17],[7,12,14,15],[25,34,8,31],[27,9,38,33],[39,22,12,39]>; // 40.72.1.17
IsConjugate(GLeftRight,A18,ANSWERS85[1][3]);
A19:=sub<GLeftRight|[9,20,36,23],[11,18,22,27],[17,19,38,13],[27,27,8,11],[37,34,24,37]>; // 40.72.1.20
IsConjugate(GLeftRight,A19,ANSWERS85[18][3]);
A20:=sub<GLeftRight|[9,12,36,25],[21,5,38,23],[27,7,24,35],[29,35,12,27],[33,31,26,3]>; // 40.72.1.22
IsConjugate(GLeftRight,A20,ANSWERS85[17][3]);
A21:=sub<GLeftRight|[11,20,22,19],[15,12,34,13],[25,39,26,3],[29,4,10,13],[37,26,26,17]>; // 40.72.1.24
IsConjugate(GLeftRight,A21,ANSWERS85[8][3]);
A22:=sub<GLeftRight|[7,30,16,1],[17,0,36,1],[25,11,24,27],[35,7,26,1],[35,21,34,7]>; // 40.72.1.26
IsConjugate(GLeftRight,A22,ANSWERS85[14][3]);
A23:=sub<GLeftRight|[15,39,14,25],[19,34,38,35],[27,1,26,37],[33,36,34,35],[39,23,10,37]>; // 40.72.1.27
IsConjugate(GLeftRight,A23,ANSWERS85[4][3]);
A24:=sub<GLeftRight|[3,9,24,3],[17,16,38,5],[23,28,4,7],[29,29,38,15],[39,0,20,29]>; // 40.72.1.29
IsConjugate(GLeftRight,A24,ANSWERS85[24][3]);

// results

load "/users/garenchiloyan/Desktop/GL2GroupTheory.m";
load "/users/garenchiloyan/Desktop/ModularCurves.m";

M3:=CreateModularCurveRec(40,Generators(A3));
FindModelOfXG(M3,1); // EllipticCurve([0,1,0,-145,975]), rank 1
M4:=CreateModularCurveRec(40,Generators(A4));
FindModelOfXG(M4,1); // EllipticCurve([0,-1,0,-145,-975]), rank 0
M5:=CreateModularCurveRec(40,Generators(A5));
FindModelOfXG(M5,1); // no points over QQ
M6:=CreateModularCurveRec(40,Generators(A6));
FindModelOfXG(M6,1); // EllipticCurve([0,1,0,367,2863]), rank 1
M7:=CreateModularCurveRec(40,Generators(A7));
FindModelOfXG(M7,1); // EllipticCurve([0,1,0,-165,763]), rank 1
M8:=CreateModularCurveRec(40,Generators(A8));
FindModelOfXG(M8,1); // EllipticCurve([0,-1,0,-165,-763]), rank 0
M9:=CreateModularCurveRec(40,Generators(A9));
FindModelOfXG(M9,1); // EllipticCurve([0,1,0,-165,763]), rank 1
M10:=CreateModularCurveRec(40,Generators(A10));
FindModelOfXG(M10,1); // EllipticCurve([0,-1,0,-165,-763]), rank 0
M11:=CreateModularCurveRec(40,Generators(A11));
FindModelOfXG(M11,1); // EllipticCurve([0,-1,0,15,17]), rank 0
M12:=CreateModularCurveRec(40,Generators(A12));
FindModelOfXG(M12,1); // EllipticCurve([-28,-48]), rank 1
M13:=CreateModularCurveRec(40,Generators(A13));
FindModelOfXG(M13,1); // EllipticCurve([-28,48]), rank 0
M14:=CreateModularCurveRec(40,Generators(A14));
FindModelOfXG(M14,1); // EllipticCurve([0,1,0,15,-17]), rank 1
M15:=CreateModularCurveRec(40,Generators(A15));
FindModelOfXG(M15,1); // EllipticCurve([0,1,0,15,-17]), rank 1
M16:=CreateModularCurveRec(40,Generators(A16));
FindModelOfXG(M16,1); // EllipticCurve([0,-1,0,15,17]), rank 0
M17:=CreateModularCurveRec(40,Generators(A17));
FindModelOfXG(M17,1); // EllipticCurve([0,1,0,-5,-5]), rank 1
M18:=CreateModularCurveRec(40,Generators(A18));
FindModelOfXG(M18,1); // EllipticCurve([0,-1,0,-5,5]), rank 0
M19:=CreateModularCurveRec(40,Generators(A19));
FindModelOfXG(M19,1); // EllipticCurve([0,-1,0,-5,5]), rank 0
M20:=CreateModularCurveRec(40,Generators(A20));
FindModelOfXG(M20,1); // EllipticCurve([0,1,0,-5,-5]), rank 1
M21:=CreateModularCurveRec(40,Generators(A21));
FindModelOfXG(M21,1); // EllipticCurve([0,1,0,-5,-5]), rank 1
M22:=CreateModularCurveRec(40,Generators(A22));
FindModelOfXG(M22,1); // EllipticCurve([0,-1,0,-5,5]), rank 0
M23:=CreateModularCurveRec(40,Generators(A23));
FindModelOfXG(M23,1); // EllipticCurve([0,-1,0,-5,5]), rank 0
M24:=CreateModularCurveRec(40,Generators(A24));
FindModelOfXG(M24,1); // EllipticCurve([0,1,0,-5,-5]), rank 1



/*

40.10.0.1, [3,6,38,29],[5,22,21,25],[39,15,15,22], 
40.10.0.2, [10,23,29,9],[11,22,32,5],[31,27,22,25]
40.12.1.5, [2,37,1,38],[4,29,13,35],[6,3,3,16],[39,14,7,31]
40.12.1.6, [0,31,7,9],[5,19,17,12],[19,7,2,9],[27,15,15,32]
40.20.1.1, [5,12,3,23],[9,12,8,11],[37,20,23,13],[39,7,23,12]
40.20.1.2, [2,31,29,21],[3,30,0,13],[8,1,29,32],[17,6,14,3]
40.24.1.17, [23,18,35,11],[29,17,21,30],[35,26,2,29],[35,39,18,31]
40.24.1.19, [5,39,4,35],[15,6,11,25],[16,33,19,20],[23,6,17,37]
40.24.1.22, [1,26,15,37],[11,11,17,10],[15,31,14,7],[26,1,15,17]
40.24.1.24, [21,8,32,37],[21,10,17,19],[28,39,27,30],[39,33,3,4]
40.36.1.1, [1,0,24,17],[5,19,12,17],[9,28,26,21],[27,19,8,13],[35,28,8,35]
40.36.1.2, [17,0,0,17],[17,22,0,9],[29,32,6,15],[35,34,26,3],[35,39,2,7]
40.36.1.3, [9,35,20,9],[15,9,28,21],[23,38,20,31],[29,0,6,33],[37,1,24,9]
40.36.1.4, [3,34,32,35],[7,4,28,13],[9,27,0,11],[31,15,24,37],[37,21,26,37]
40.36.1.5, [1,38,28,1],[7,15,30,17],[11,32,14,19],[25,4,26,3],[27,27,26,33]
40.36.1.6, [9,12,18,23],[11,15,12,29],[21,15,34,37],[21,25,10,1],[27,31,14,39]
40.72.1.15, [1,15,2,29],[5,6,4,7],[25,9,4,25],[29,32,6,15],[33,3,6,15]
40.72.1.17, [3,31,32,17],[7,12,14,15],[25,34,8,31],[27,9,38,33],[39,22,12,39]
40.72.1.20, [9,20,36,23],[11,18,22,27],[17,19,38,13],[27,27,8,11],[37,34,24,37]
40.72.1.22, [9,12,36,25],[21,5,38,23],[27,7,24,35],[29,35,12,27],[33,31,26,3]
40.72.1.24, [11,20,22,19],[15,12,34,13],[25,39,26,3],[29,4,10,13],[37,26,26,17]
40.72.1.26, [7,30,16,1],[17,0,36,1],[25,11,24,27],[35,7,26,1],[35,21,34,7]
40.72.1.27, [15,39,14,25],[19,34,38,35],[27,1,26,37],[33,36,34,35],[39,23,10,37]
40.72.1.29, [3,9,24,3],[17,16,38,5],[23,28,4,7],[29,29,38,15],[39,0,20,29]

*/

load "/users/garenchiloyan/Desktop/GL2GroupTheory.m";
load "/users/garenchiloyan/Desktop/ModularCurves.m";

G40:=GL(2,Integers(40));

// first collection of groups of level 40 to study

H401215:=sub<G40|[2,37,1,38],[4,29,13,35],[6,3,3,16],[39,14,7,31]>;
M401215:=CreateModularCurveRec(40,Generators(H401215));
FindModelOfXG(M401215,1); // EllipticCurve([0,1,0,-145,975]), label 320.a2

H4024117:=sub<G40|[23,18,35,11],[29,17,21,30],[35,26,2,29],[35,39,18,31]>;
M4024117:=CreateModularCurveRec(40,Generators(H4024117));
FindModelOfXG(M4024117,1); // EllipticCurve([0,1,0,-165,763]), label 320.a1

H4024122:=sub<G40|[1,26,15,37],[11,11,17,10],[15,31,14,7],[26,1,15,17]>;
M4024122:=CreateModularCurveRec(40,Generators(H4024122));
FindModelOfXG(M4024122,1); // EllipticCurve([0,1,0,-165,763]), label 320.a1

H40241132:=sub<G40|[25,12,39,3],[34,3,3,9],[37,15,39,28]>;
M40241132:=CreateModularCurveRec(40,Generators(H40241132));
FindModelOfXG(M40241132,1); // EllipticCurve([0,1,0,-165,763]), label 320.a1

H40241137:=sub<G40|[5,27,29,18],[36,31,29,8],[37,35,9,38]>;
M40241137:=CreateModularCurveRec(40,Generators(H40241137));
FindModelOfXG(M40241137,1); EllipticCurve([0,1,0,-165,763]), label 320.a1

X:=EllipticCurve([0,1,0,-145,975]);
g:=Generators(X)[2];
Order(g); // 0

XX:=EllipticCurve([0,1,0,-165,763]);
gg:=Generators(XX)[2];
Order(gg); // 0

_,phi:=IsIsogenous(XX,X);
phi(gg) eq 2*g; // true

// second collection of groups of level 40 to study

H402012:=sub<G40|[2,31,29,21],[3,30,0,13],[8,1,29,32],[17,6,14,3]>;
M402012:=CreateModularCurveRec(40,Generators(H402012));
FindModelOfXG(M402012,1); // EllipticCurve([0,1,0,367,2863]), label 1600.c4

H4040130:=sub<G40|[0,27,17,20],[3,9,6,17],[3,29,36,29]>;
M4040130:=CreateModularCurveRec(40,Generators(H4040130));
FindModelOfXG(M4040130,1); // EllipticCurve([0,1,0,-133,363]), label 1600.c3

H4040135:=sub<G40|[5,1,14,29],[24,9,25,11],[33,19,21,32]>;
M4040135:=CreateModularCurveRec(40,Generators(H4040135));
FindModelOfXG(M4040135,1); // EllipticCurve([0,1,0,-133,363]), label 1600.c3

X:=EllipticCurve([0,1,0,367,2863]);
g:=Generators(X)[2];
Order(g); // 0

XX:=EllipticCurve([0,1,0,-133,363]);
gg:=Generators(XX)[2];
Order(gg); // 0

_,phi:=IsIsogenous(XX,X);
phi(gg) eq -g; // true


// third collection of groups of level 40 to study

H403612:=sub<G40|[17,10,0,17],[17,22,0,9],[29,32,6,15],[35,34,26,3],[35,39,2,7]>;
M403612:=CreateModularCurveRec(40,Generators(H403612));
FindModelOfXG(M403612,1); // EllipticCurve([-28,-48]), label 320.c2

H4072135:=sub<G40|[1,12,32,1],[33,10,12,31],[33,34,22,15],[35,31,18,13]>;
M4072135:=CreateModularCurveRec(40,Generators(H4072135));
FindModelOfXG(M4072135,1); // EllipticCurve([-8,8]), label 320.c3

H4072144:=sub<G40|[5,33,16,7],[9,10,36,23],[25,36,26,5],[39,32,26,35]>;
M4072144:=CreateModularCurveRec(40,Generators(H4072144));
FindModelOfXG(M4072144,1); // EllipticCurve([-8,8]), label 320.c3

H4072167:=sub<G40|[5,8,14,9],[21,18,24,35],[29,14,30,3],[37,35,30,37]>;
M4072167:=CreateModularCurveRec(40,Generators(H4072167));
FindModelOfXG(M4072167,1); // EllipticCurve([-8,8]), label 320.c3

H4072176:=sub<G40|[7,22,34,15],[9,30,2,7],[17,31,30,33],[35,38,16,27]>;
M4072176:=CreateModularCurveRec(40,Generators(H4072176));
FindModelOfXG(M4072176,1); // EllipticCurve([-8,8]), label 320.c3

X:=EllipticCurve([-28,-48]);
g:=Generators(X)[3];
Order(g); // 0

XX:=EllipticCurve([-8,8]);
gg:=Generators(XX)[2];
Order(gg); // 0

_,phi:=IsIsogenous(XX,X);
phi(gg) eq g; // true


// fourth collection of groups of level 40 to study

H403614:=sub<G40|[3,34,32,35],[7,4,28,13],[9,27,0,11],[31,15,24,37],[37,21,26,37]>;
M403614:=CreateModularCurveRec(40,Generators(H403614));
FindModelOfXG(M403614,1); // EllipticCurve([0,1,0,15,-17]), label 320.a4

H4072122:=sub<G40|[9,12,36,25],[21,5,38,23],[27,7,24,35],[29,35,12,27],[33,31,26,3]>;
M4072122:=CreateModularCurveRec(40,Generators(H4072122));
FindModelOfXG(M4072122,1); // EllipticCurve([0,1,0,-5,-5]), label 320.a3

H4072129:=sub<G40|[3,9,24,3],[17,16,38,5],[23,28,4,7],[29,29,38,15],[39,0,20,29]>;
M4072129:=CreateModularCurveRec(40,Generators(H4072129));
FindModelOfXG(M4072129,1); // EllipticCurve([0,1,0,-5,-5]), label 320.a3

H4072182:=sub<G40|[11,17,4,29],[15,34,2,37],[19,2,32,19],[25,39,32,17]>;
M4072182:=CreateModularCurveRec(40,Generators(H4072182));
FindModelOfXG(M4072182,1); // EllipticCurve([0,1,0,-5,-5]), label 320.a3

H4072189:=sub<G40|[7,5,0,37],[15,28,26,17],[21,25,20,1],[37,36,14,9]>;
M4072189:=CreateModularCurveRec(40,Generators(H4072189));
FindModelOfXG(M4072189,1); // EllipticCurve([0,1,0,-5,-5]), label 320.a3

X:=EllipticCurve([0,1,0,15,-17]);
g:=Generators(X)[2];
Order(g); // 0

XX:=EllipticCurve([0,1,0,-5,-5]);
gg:=Generators(XX)[2];
Order(gg); // 0

_,phi:=IsIsogenous(XX,X);
phi(gg) eq 2*g; // true


// fifth collection of groups of level 40 to study

H403615:=sub<G40|[1,38,28,1],[7,15,30,17],[11,32,14,19],[25,4,26,3],[27,27,26,33]>;
M403615:=CreateModularCurveRec(40,Generators(H403615));
FindModelOfXG(M403615,1); // EllipticCurve([0,1,0,15,-17]), label 320.a4



// we check that the proper arithmetically admissible subgroups of 40.40.1.30 and 40.40.1.35 are of genus > 1

N:=40;

G:=GL(2,Integers(N));

// 40.40.1.30
X:=sub<G|[0,27,17,20],[3,9,6,17],[3,29,36,29]>;

S:=Subgroups(X);
Slist0:=[s`subgroup : s in S];

Slist1:=[s:s in Slist0 | G![-1,0,0,-1] in s];

#Slist1;

Slist2:=[s:s in Slist1 | #{Determinant(x) : x in s} eq EulerPhi(N)];

#Slist2;

Slist3:={};

for s in Slist2 do
DetTra:={<Determinant(g),Trace(g)> : g in s};
if <-1,0> in DetTra then
Slist3:=Slist3 join {s};
end if;
end for;

Slist3:=[s : s in Slist3];

nolist:={};
for i in [1..#Slist3-1] do;
for j in [i+1..#Slist3] do;
if IsConjugate(G,Slist0[i],Slist0[j]) then
nolist:=nolist join {Slist0[j]};
end if;
end for;
end for;
Slist4:=[subs : subs in Slist3 | subs notin nolist];

Attach("/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2.m");
load "/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2data.m";

for i in [1..#Slist4] do
if GL2Genus(Slist4[i]) lt 2 then
<i,GL2Level(Slist4[i]), GL2Genus(Slist4[i]), GL2Index(Slist4[i])>;
end if;
end for;
// 1 hit



N:=40;

G:=GL(2,Integers(N));

// 40.40.1.35
X:=sub<G|[5,1,14,29],[24,9,25,11],[33,19,21,32]>;

S:=Subgroups(X);
Slist0:=[s`subgroup : s in S];

Slist1:=[s:s in Slist0 | G![-1,0,0,-1] in s];

#Slist1;

Slist2:=[s:s in Slist1 | #{Determinant(x) : x in s} eq EulerPhi(N)];

#Slist2;

Slist3:={};

for s in Slist2 do
DetTra:={<Determinant(g),Trace(g)> : g in s};
if <-1,0> in DetTra then
Slist3:=Slist3 join {s};
end if;
end for;

Slist3:=[s : s in Slist3];

nolist:={};
for i in [1..#Slist3-1] do;
for j in [i+1..#Slist3] do;
if IsConjugate(G,Slist0[i],Slist0[j]) then
nolist:=nolist join {Slist0[j]};
end if;
end for;
end for;
Slist4:=[subs : subs in Slist3 | subs notin nolist];

Attach("/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2.m");
load "/users/garenchiloyan/Desktop/ell-adic-galois-images-main/groups/gl2data.m";

for i in [1..#Slist4] do
if GL2Genus(Slist4[i]) lt 2 then
<i,GL2Level(Slist4[i]), GL2Genus(Slist4[i]), GL2Index(Slist4[i])>;
end if;
end for;
// 1 hit
